// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ObjCIndex.proto

#ifndef PROTOBUF_ObjCIndex_2eproto__INCLUDED
#define PROTOBUF_ObjCIndex_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ObjCIndex_2eproto();
void protobuf_AssignDesc_ObjCIndex_2eproto();
void protobuf_ShutdownFile_ObjCIndex_2eproto();

class ObjCClass;
class ObjCProtocol;
class TranslationUnit;

// ===================================================================

class ObjCClass : public ::google::protobuf::Message {
 public:
  ObjCClass();
  virtual ~ObjCClass();
  
  ObjCClass(const ObjCClass& from);
  
  inline ObjCClass& operator=(const ObjCClass& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjCClass& default_instance();
  
  void Swap(ObjCClass* other);
  
  // implements Message ----------------------------------------------
  
  ObjCClass* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjCClass& from);
  void MergeFrom(const ObjCClass& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional string base_class = 2;
  inline bool has_base_class() const;
  inline void clear_base_class();
  static const int kBaseClassFieldNumber = 2;
  inline const ::std::string& base_class() const;
  inline void set_base_class(const ::std::string& value);
  inline void set_base_class(const char* value);
  inline void set_base_class(const char* value, size_t size);
  inline ::std::string* mutable_base_class();
  inline ::std::string* release_base_class();
  
  // repeated string protocol = 3;
  inline int protocol_size() const;
  inline void clear_protocol();
  static const int kProtocolFieldNumber = 3;
  inline const ::std::string& protocol(int index) const;
  inline ::std::string* mutable_protocol(int index);
  inline void set_protocol(int index, const ::std::string& value);
  inline void set_protocol(int index, const char* value);
  inline void set_protocol(int index, const char* value, size_t size);
  inline ::std::string* add_protocol();
  inline void add_protocol(const ::std::string& value);
  inline void add_protocol(const char* value);
  inline void add_protocol(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& protocol() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_protocol();
  
  // @@protoc_insertion_point(class_scope:ObjCClass)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_base_class();
  inline void clear_has_base_class();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::std::string* base_class_;
  ::google::protobuf::RepeatedPtrField< ::std::string> protocol_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_ObjCIndex_2eproto();
  friend void protobuf_AssignDesc_ObjCIndex_2eproto();
  friend void protobuf_ShutdownFile_ObjCIndex_2eproto();
  
  void InitAsDefaultInstance();
  static ObjCClass* default_instance_;
};
// -------------------------------------------------------------------

class ObjCProtocol : public ::google::protobuf::Message {
 public:
  ObjCProtocol();
  virtual ~ObjCProtocol();
  
  ObjCProtocol(const ObjCProtocol& from);
  
  inline ObjCProtocol& operator=(const ObjCProtocol& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ObjCProtocol& default_instance();
  
  void Swap(ObjCProtocol* other);
  
  // implements Message ----------------------------------------------
  
  ObjCProtocol* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObjCProtocol& from);
  void MergeFrom(const ObjCProtocol& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // repeated string base_protocol = 2;
  inline int base_protocol_size() const;
  inline void clear_base_protocol();
  static const int kBaseProtocolFieldNumber = 2;
  inline const ::std::string& base_protocol(int index) const;
  inline ::std::string* mutable_base_protocol(int index);
  inline void set_base_protocol(int index, const ::std::string& value);
  inline void set_base_protocol(int index, const char* value);
  inline void set_base_protocol(int index, const char* value, size_t size);
  inline ::std::string* add_base_protocol();
  inline void add_base_protocol(const ::std::string& value);
  inline void add_base_protocol(const char* value);
  inline void add_base_protocol(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& base_protocol() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_base_protocol();
  
  // @@protoc_insertion_point(class_scope:ObjCProtocol)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::google::protobuf::RepeatedPtrField< ::std::string> base_protocol_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ObjCIndex_2eproto();
  friend void protobuf_AssignDesc_ObjCIndex_2eproto();
  friend void protobuf_ShutdownFile_ObjCIndex_2eproto();
  
  void InitAsDefaultInstance();
  static ObjCProtocol* default_instance_;
};
// -------------------------------------------------------------------

class TranslationUnit : public ::google::protobuf::Message {
 public:
  TranslationUnit();
  virtual ~TranslationUnit();
  
  TranslationUnit(const TranslationUnit& from);
  
  inline TranslationUnit& operator=(const TranslationUnit& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const TranslationUnit& default_instance();
  
  void Swap(TranslationUnit* other);
  
  // implements Message ----------------------------------------------
  
  TranslationUnit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TranslationUnit& from);
  void MergeFrom(const TranslationUnit& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .ObjCClass class = 1;
  inline int class__size() const;
  inline void clear_class_();
  static const int kClassFieldNumber = 1;
  inline const ::ObjCClass& class_(int index) const;
  inline ::ObjCClass* mutable_class_(int index);
  inline ::ObjCClass* add_class_();
  inline const ::google::protobuf::RepeatedPtrField< ::ObjCClass >&
      class_() const;
  inline ::google::protobuf::RepeatedPtrField< ::ObjCClass >*
      mutable_class_();
  
  // repeated .ObjCProtocol protocol = 2;
  inline int protocol_size() const;
  inline void clear_protocol();
  static const int kProtocolFieldNumber = 2;
  inline const ::ObjCProtocol& protocol(int index) const;
  inline ::ObjCProtocol* mutable_protocol(int index);
  inline ::ObjCProtocol* add_protocol();
  inline const ::google::protobuf::RepeatedPtrField< ::ObjCProtocol >&
      protocol() const;
  inline ::google::protobuf::RepeatedPtrField< ::ObjCProtocol >*
      mutable_protocol();
  
  // @@protoc_insertion_point(class_scope:TranslationUnit)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ObjCClass > class__;
  ::google::protobuf::RepeatedPtrField< ::ObjCProtocol > protocol_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ObjCIndex_2eproto();
  friend void protobuf_AssignDesc_ObjCIndex_2eproto();
  friend void protobuf_ShutdownFile_ObjCIndex_2eproto();
  
  void InitAsDefaultInstance();
  static TranslationUnit* default_instance_;
};
// ===================================================================


// ===================================================================

// ObjCClass

// required string name = 1;
inline bool ObjCClass::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ObjCClass::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ObjCClass::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ObjCClass::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ObjCClass::name() const {
  return *name_;
}
inline void ObjCClass::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ObjCClass::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ObjCClass::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ObjCClass::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ObjCClass::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string base_class = 2;
inline bool ObjCClass::has_base_class() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ObjCClass::set_has_base_class() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ObjCClass::clear_has_base_class() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ObjCClass::clear_base_class() {
  if (base_class_ != &::google::protobuf::internal::kEmptyString) {
    base_class_->clear();
  }
  clear_has_base_class();
}
inline const ::std::string& ObjCClass::base_class() const {
  return *base_class_;
}
inline void ObjCClass::set_base_class(const ::std::string& value) {
  set_has_base_class();
  if (base_class_ == &::google::protobuf::internal::kEmptyString) {
    base_class_ = new ::std::string;
  }
  base_class_->assign(value);
}
inline void ObjCClass::set_base_class(const char* value) {
  set_has_base_class();
  if (base_class_ == &::google::protobuf::internal::kEmptyString) {
    base_class_ = new ::std::string;
  }
  base_class_->assign(value);
}
inline void ObjCClass::set_base_class(const char* value, size_t size) {
  set_has_base_class();
  if (base_class_ == &::google::protobuf::internal::kEmptyString) {
    base_class_ = new ::std::string;
  }
  base_class_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ObjCClass::mutable_base_class() {
  set_has_base_class();
  if (base_class_ == &::google::protobuf::internal::kEmptyString) {
    base_class_ = new ::std::string;
  }
  return base_class_;
}
inline ::std::string* ObjCClass::release_base_class() {
  clear_has_base_class();
  if (base_class_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = base_class_;
    base_class_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated string protocol = 3;
inline int ObjCClass::protocol_size() const {
  return protocol_.size();
}
inline void ObjCClass::clear_protocol() {
  protocol_.Clear();
}
inline const ::std::string& ObjCClass::protocol(int index) const {
  return protocol_.Get(index);
}
inline ::std::string* ObjCClass::mutable_protocol(int index) {
  return protocol_.Mutable(index);
}
inline void ObjCClass::set_protocol(int index, const ::std::string& value) {
  protocol_.Mutable(index)->assign(value);
}
inline void ObjCClass::set_protocol(int index, const char* value) {
  protocol_.Mutable(index)->assign(value);
}
inline void ObjCClass::set_protocol(int index, const char* value, size_t size) {
  protocol_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ObjCClass::add_protocol() {
  return protocol_.Add();
}
inline void ObjCClass::add_protocol(const ::std::string& value) {
  protocol_.Add()->assign(value);
}
inline void ObjCClass::add_protocol(const char* value) {
  protocol_.Add()->assign(value);
}
inline void ObjCClass::add_protocol(const char* value, size_t size) {
  protocol_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ObjCClass::protocol() const {
  return protocol_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ObjCClass::mutable_protocol() {
  return &protocol_;
}

// -------------------------------------------------------------------

// ObjCProtocol

// required string name = 1;
inline bool ObjCProtocol::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ObjCProtocol::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ObjCProtocol::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ObjCProtocol::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ObjCProtocol::name() const {
  return *name_;
}
inline void ObjCProtocol::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ObjCProtocol::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ObjCProtocol::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ObjCProtocol::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ObjCProtocol::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated string base_protocol = 2;
inline int ObjCProtocol::base_protocol_size() const {
  return base_protocol_.size();
}
inline void ObjCProtocol::clear_base_protocol() {
  base_protocol_.Clear();
}
inline const ::std::string& ObjCProtocol::base_protocol(int index) const {
  return base_protocol_.Get(index);
}
inline ::std::string* ObjCProtocol::mutable_base_protocol(int index) {
  return base_protocol_.Mutable(index);
}
inline void ObjCProtocol::set_base_protocol(int index, const ::std::string& value) {
  base_protocol_.Mutable(index)->assign(value);
}
inline void ObjCProtocol::set_base_protocol(int index, const char* value) {
  base_protocol_.Mutable(index)->assign(value);
}
inline void ObjCProtocol::set_base_protocol(int index, const char* value, size_t size) {
  base_protocol_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ObjCProtocol::add_base_protocol() {
  return base_protocol_.Add();
}
inline void ObjCProtocol::add_base_protocol(const ::std::string& value) {
  base_protocol_.Add()->assign(value);
}
inline void ObjCProtocol::add_base_protocol(const char* value) {
  base_protocol_.Add()->assign(value);
}
inline void ObjCProtocol::add_base_protocol(const char* value, size_t size) {
  base_protocol_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ObjCProtocol::base_protocol() const {
  return base_protocol_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ObjCProtocol::mutable_base_protocol() {
  return &base_protocol_;
}

// -------------------------------------------------------------------

// TranslationUnit

// repeated .ObjCClass class = 1;
inline int TranslationUnit::class__size() const {
  return class__.size();
}
inline void TranslationUnit::clear_class_() {
  class__.Clear();
}
inline const ::ObjCClass& TranslationUnit::class_(int index) const {
  return class__.Get(index);
}
inline ::ObjCClass* TranslationUnit::mutable_class_(int index) {
  return class__.Mutable(index);
}
inline ::ObjCClass* TranslationUnit::add_class_() {
  return class__.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ObjCClass >&
TranslationUnit::class_() const {
  return class__;
}
inline ::google::protobuf::RepeatedPtrField< ::ObjCClass >*
TranslationUnit::mutable_class_() {
  return &class__;
}

// repeated .ObjCProtocol protocol = 2;
inline int TranslationUnit::protocol_size() const {
  return protocol_.size();
}
inline void TranslationUnit::clear_protocol() {
  protocol_.Clear();
}
inline const ::ObjCProtocol& TranslationUnit::protocol(int index) const {
  return protocol_.Get(index);
}
inline ::ObjCProtocol* TranslationUnit::mutable_protocol(int index) {
  return protocol_.Mutable(index);
}
inline ::ObjCProtocol* TranslationUnit::add_protocol() {
  return protocol_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ObjCProtocol >&
TranslationUnit::protocol() const {
  return protocol_;
}
inline ::google::protobuf::RepeatedPtrField< ::ObjCProtocol >*
TranslationUnit::mutable_protocol() {
  return &protocol_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ObjCIndex_2eproto__INCLUDED
