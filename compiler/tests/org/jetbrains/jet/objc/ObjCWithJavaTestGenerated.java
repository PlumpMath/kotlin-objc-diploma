/*
 * Copyright 2010-2013 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.jetbrains.jet.objc;

import junit.framework.Assert;
import junit.framework.Test;
import junit.framework.TestSuite;

import java.io.File;
import java.util.regex.Pattern;
import org.jetbrains.jet.JetTestUtils;
import org.jetbrains.jet.test.InnerTestClasses;
import org.jetbrains.jet.test.TestMetadata;

import org.jetbrains.jet.objc.AbstractObjCWithJavaTest;

/** This class is generated by {@link org.jetbrains.jet.generators.tests.GenerateTests}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("compiler/testData/objc/java")
@InnerTestClasses({ObjCWithJavaTestGenerated.ReturnType.class})
public class ObjCWithJavaTestGenerated extends AbstractObjCWithJavaTest {
    public void testAllFilesPresentInJava() throws Exception {
        JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), "org.jetbrains.jet.generators.tests.GenerateTests", new File("compiler/testData/objc/java"), Pattern.compile("^(.+)\\.kt$"), true);
    }
    
    @TestMetadata("simpleClassObject.kt")
    public void testSimpleClassObject() throws Exception {
        doTest("compiler/testData/objc/java/simpleClassObject.kt");
    }
    
    @TestMetadata("compiler/testData/objc/java/returnType")
    public static class ReturnType extends AbstractObjCWithJavaTest {
        public void testAllFilesPresentInReturnType() throws Exception {
            JetTestUtils.assertAllTestsPresentByMetadata(this.getClass(), "org.jetbrains.jet.generators.tests.GenerateTests", new File("compiler/testData/objc/java/returnType"), Pattern.compile("^(.+)\\.kt$"), true);
        }
        
        @TestMetadata("int.kt")
        public void testInt() throws Exception {
            doTest("compiler/testData/objc/java/returnType/int.kt");
        }
        
        @TestMetadata("long.kt")
        public void testLong() throws Exception {
            doTest("compiler/testData/objc/java/returnType/long.kt");
        }
        
        @TestMetadata("objcObject.kt")
        public void testObjcObject() throws Exception {
            doTest("compiler/testData/objc/java/returnType/objcObject.kt");
        }
        
        @TestMetadata("objcObjectIsCheck.kt")
        public void testObjcObjectIsCheck() throws Exception {
            doTest("compiler/testData/objc/java/returnType/objcObjectIsCheck.kt");
        }
        
        @TestMetadata("otherPrimitives.kt")
        public void testOtherPrimitives() throws Exception {
            doTest("compiler/testData/objc/java/returnType/otherPrimitives.kt");
        }
        
    }
    
    public static Test suite() {
        TestSuite suite = new TestSuite("ObjCWithJavaTestGenerated");
        suite.addTestSuite(ObjCWithJavaTestGenerated.class);
        suite.addTestSuite(ReturnType.class);
        return suite;
    }
}
