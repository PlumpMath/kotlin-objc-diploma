class {
  name: "NSObject"
  protocol: "NSObject"
  method {
    function {
      name: "load"
      return_type: "Void"
    }
    class_method: true
  }
  method {
    function {
      name: "initialize"
      return_type: "Void"
    }
    class_method: true
  }
  method {
    function {
      name: "init"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "new"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "allocWithZone:"
      return_type: "ObjCId"
      parameter {
        name: "zone"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "alloc"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "dealloc"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "finalize"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "copy"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "mutableCopy"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "copyWithZone:"
      return_type: "ObjCId"
      parameter {
        name: "zone"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "mutableCopyWithZone:"
      return_type: "ObjCId"
      parameter {
        name: "zone"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "superclass"
      return_type: "ObjCClass"
    }
    class_method: true
  }
  method {
    function {
      name: "class"
      return_type: "ObjCClass"
    }
    class_method: true
  }
  method {
    function {
      name: "instancesRespondToSelector:"
      return_type: "SChar"
      parameter {
        name: "aSelector"
        type: "ObjCSel"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "conformsToProtocol:"
      return_type: "SChar"
      parameter {
        name: "protocol"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "methodForSelector:"
      return_type: "Pointer"
      parameter {
        name: "aSelector"
        type: "ObjCSel"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "instanceMethodForSelector:"
      return_type: "Pointer"
      parameter {
        name: "aSelector"
        type: "ObjCSel"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "doesNotRecognizeSelector:"
      return_type: "Void"
      parameter {
        name: "aSelector"
        type: "ObjCSel"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "forwardingTargetForSelector:"
      return_type: "ObjCId"
      parameter {
        name: "aSelector"
        type: "ObjCSel"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "forwardInvocation:"
      return_type: "Void"
      parameter {
        name: "anInvocation"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "methodSignatureForSelector:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "aSelector"
        type: "ObjCSel"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "instanceMethodSignatureForSelector:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "aSelector"
        type: "ObjCSel"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "allowsWeakReference"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "retainWeakReference"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "description"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "isSubclassOfClass:"
      return_type: "SChar"
      parameter {
        name: "aClass"
        type: "ObjCClass"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "resolveClassMethod:"
      return_type: "SChar"
      parameter {
        name: "sel"
        type: "ObjCSel"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "resolveInstanceMethod:"
      return_type: "SChar"
      parameter {
        name: "sel"
        type: "ObjCSel"
      }
    }
    class_method: true
  }
  ivar {
    name: "isa"
    type: "ObjCClass"
  }
}
class {
  name: "NSEnumerator"
  base_class: "NSObject"
  protocol: "NSFastEnumeration"
  method {
    function {
      name: "nextObject"
      return_type: "ObjCId"
    }
    class_method: false
  }
}
class {
  name: "NSValue"
  base_class: "NSObject"
  protocol: "NSCopying"
  protocol: "NSCoding"
  method {
    function {
      name: "getValue:"
      return_type: "Void"
      parameter {
        name: "value"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "objCType"
      return_type: "Pointer"
    }
    class_method: false
  }
}
class {
  name: "NSNumber"
  base_class: "NSValue"
  method {
    function {
      name: "charValue"
      return_type: "Char_S"
    }
    class_method: false
  }
  method {
    function {
      name: "unsignedCharValue"
      return_type: "UChar"
    }
    class_method: false
  }
  method {
    function {
      name: "shortValue"
      return_type: "Short"
    }
    class_method: false
  }
  method {
    function {
      name: "unsignedShortValue"
      return_type: "UShort"
    }
    class_method: false
  }
  method {
    function {
      name: "intValue"
      return_type: "Int"
    }
    class_method: false
  }
  method {
    function {
      name: "unsignedIntValue"
      return_type: "UInt"
    }
    class_method: false
  }
  method {
    function {
      name: "longValue"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "unsignedLongValue"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "longLongValue"
      return_type: "LongLong"
    }
    class_method: false
  }
  method {
    function {
      name: "unsignedLongLongValue"
      return_type: "ULongLong"
    }
    class_method: false
  }
  method {
    function {
      name: "floatValue"
      return_type: "Float"
    }
    class_method: false
  }
  method {
    function {
      name: "doubleValue"
      return_type: "Double"
    }
    class_method: false
  }
  method {
    function {
      name: "boolValue"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "integerValue"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "unsignedIntegerValue"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "stringValue"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "compare:"
      return_type: "Long"
      parameter {
        name: "otherNumber"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isEqualToNumber:"
      return_type: "SChar"
      parameter {
        name: "number"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "descriptionWithLocale:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "locale"
        type: "ObjCId"
      }
    }
    class_method: false
  }
}
class {
  name: "NSArray"
  base_class: "NSObject"
  protocol: "NSCopying"
  protocol: "NSMutableCopying"
  protocol: "NSCoding"
  protocol: "NSFastEnumeration"
  method {
    function {
      name: "count"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "objectAtIndex:"
      return_type: "ObjCId"
      parameter {
        name: "index"
        type: "ULong"
      }
    }
    class_method: false
  }
}
class {
  name: "NSMutableArray"
  base_class: "NSArray"
  method {
    function {
      name: "addObject:"
      return_type: "Void"
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "insertObject:atIndex:"
      return_type: "Void"
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
      parameter {
        name: "index"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeLastObject"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "removeObjectAtIndex:"
      return_type: "Void"
      parameter {
        name: "index"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "replaceObjectAtIndex:withObject:"
      return_type: "Void"
      parameter {
        name: "index"
        type: "ULong"
      }
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
    }
    class_method: false
  }
}
class {
  name: "NSAutoreleasePool"
  base_class: "NSObject"
  method {
    function {
      name: "addObject:"
      return_type: "Void"
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "addObject:"
      return_type: "Void"
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "drain"
      return_type: "Void"
    }
    class_method: false
  }
  ivar {
    name: "_token"
    type: "Pointer"
  }
  ivar {
    name: "_reserved3"
    type: "Pointer"
  }
  ivar {
    name: "_reserved2"
    type: "Pointer"
  }
  ivar {
    name: "_reserved"
    type: "Pointer"
  }
}
class {
  name: "NSBundle"
  base_class: "NSObject"
  method {
    function {
      name: "mainBundle"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "bundleWithPath:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithPath:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "bundleWithURL:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithURL:"
      return_type: "ObjCId"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "bundleForClass:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "aClass"
        type: "ObjCClass"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "bundleWithIdentifier:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "identifier"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "allBundles"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "allFrameworks"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "load"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "isLoaded"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "unload"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "preflightAndReturnError:"
      return_type: "SChar"
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "loadAndReturnError:"
      return_type: "SChar"
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "bundleURL"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "resourceURL"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "executableURL"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "URLForAuxiliaryExecutable:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "executableName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "privateFrameworksURL"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "sharedFrameworksURL"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "sharedSupportURL"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "builtInPlugInsURL"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "appStoreReceiptURL"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "bundlePath"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "resourcePath"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "executablePath"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "pathForAuxiliaryExecutable:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "executableName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "privateFrameworksPath"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "sharedFrameworksPath"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "sharedSupportPath"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "builtInPlugInsPath"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "URLForResource:withExtension:subdirectory:inBundleWithURL:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "ext"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "subpath"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "bundleURL"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "URLsForResourcesWithExtension:subdirectory:inBundleWithURL:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "ext"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "subpath"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "bundleURL"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "URLForResource:withExtension:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "ext"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "URLForResource:withExtension:subdirectory:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "ext"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "subpath"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "URLForResource:withExtension:subdirectory:localization:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "ext"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "subpath"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "localizationName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "URLsForResourcesWithExtension:subdirectory:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "ext"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "subpath"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "URLsForResourcesWithExtension:subdirectory:localization:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "ext"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "subpath"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "localizationName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "pathForResource:ofType:inDirectory:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "ext"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "bundlePath"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "pathsForResourcesOfType:inDirectory:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "ext"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "bundlePath"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "pathForResource:ofType:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "ext"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "pathForResource:ofType:inDirectory:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "ext"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "subpath"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "pathForResource:ofType:inDirectory:forLocalization:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "ext"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "subpath"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "localizationName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "pathsForResourcesOfType:inDirectory:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "ext"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "subpath"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "pathsForResourcesOfType:inDirectory:forLocalization:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "ext"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "subpath"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "localizationName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "localizedStringForKey:value:table:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "value"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "tableName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "bundleIdentifier"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "infoDictionary"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "localizedInfoDictionary"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "objectForInfoDictionaryKey:"
      return_type: "ObjCId"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "classNamed:"
      return_type: "ObjCClass"
      parameter {
        name: "className"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "principalClass"
      return_type: "ObjCClass"
    }
    class_method: false
  }
  method {
    function {
      name: "localizations"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "preferredLocalizations"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "developmentLocalization"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "preferredLocalizationsFromArray:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "localizationsArray"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "preferredLocalizationsFromArray:forPreferences:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "localizationsArray"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "preferencesArray"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "executableArchitectures"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  ivar {
    name: "_flags"
    type: "ULong"
  }
  ivar {
    name: "_cfBundle"
    type: "ObjCId"
  }
  ivar {
    name: "_reserved2"
    type: "ULong"
  }
  ivar {
    name: "_principalClass"
    type: "ObjCClass"
  }
  ivar {
    name: "_tmp1"
    type: "ObjCId"
  }
  ivar {
    name: "_tmp2"
    type: "ObjCId"
  }
  ivar {
    name: "_reserved1"
    type: "Pointer"
  }
  ivar {
    name: "_reserved0"
    type: "Pointer"
  }
}
class {
  name: "NSDate"
  base_class: "NSObject"
  protocol: "NSCopying"
  protocol: "NSCoding"
  method {
    function {
      name: "timeIntervalSinceReferenceDate"
      return_type: "Double"
    }
    class_method: false
  }
}
class {
  name: "NSCalendar"
  base_class: "NSObject"
  protocol: "NSCopying"
  protocol: "NSCoding"
  method {
    function {
      name: "currentCalendar"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "autoupdatingCurrentCalendar"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "initWithCalendarIdentifier:"
      return_type: "ObjCId"
      parameter {
        name: "ident"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "calendarIdentifier"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setLocale:"
      return_type: "Void"
      parameter {
        name: "locale"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "locale"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setTimeZone:"
      return_type: "Void"
      parameter {
        name: "tz"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "timeZone"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setFirstWeekday:"
      return_type: "Void"
      parameter {
        name: "weekday"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "firstWeekday"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "setMinimumDaysInFirstWeek:"
      return_type: "Void"
      parameter {
        name: "mdw"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "minimumDaysInFirstWeek"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "minimumRangeOfUnit:"
      return_type: "Unexposed"
      parameter {
        name: "unit"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "maximumRangeOfUnit:"
      return_type: "Unexposed"
      parameter {
        name: "unit"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "rangeOfUnit:inUnit:forDate:"
      return_type: "Unexposed"
      parameter {
        name: "smaller"
        type: "ULong"
      }
      parameter {
        name: "larger"
        type: "ULong"
      }
      parameter {
        name: "date"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "ordinalityOfUnit:inUnit:forDate:"
      return_type: "ULong"
      parameter {
        name: "smaller"
        type: "ULong"
      }
      parameter {
        name: "larger"
        type: "ULong"
      }
      parameter {
        name: "date"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "rangeOfUnit:startDate:interval:forDate:"
      return_type: "SChar"
      parameter {
        name: "unit"
        type: "ULong"
      }
      parameter {
        name: "datep"
        type: "Pointer"
      }
      parameter {
        name: "tip"
        type: "Pointer"
      }
      parameter {
        name: "date"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "dateFromComponents:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "comps"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "components:fromDate:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "unitFlags"
        type: "ULong"
      }
      parameter {
        name: "date"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "dateByAddingComponents:toDate:options:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "comps"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "date"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "opts"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "components:fromDate:toDate:options:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "unitFlags"
        type: "ULong"
      }
      parameter {
        name: "startingDate"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "resultDate"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "opts"
        type: "ULong"
      }
    }
    class_method: false
  }
}
class {
  name: "NSDateComponents"
  base_class: "NSObject"
  protocol: "NSCopying"
  protocol: "NSCoding"
  method {
    function {
      name: "calendar"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "timeZone"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "era"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "year"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "month"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "day"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "hour"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "minute"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "second"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "week"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "weekday"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "weekdayOrdinal"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "quarter"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "weekOfMonth"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "weekOfYear"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "yearForWeekOfYear"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "setCalendar:"
      return_type: "Void"
      parameter {
        name: "cal"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setTimeZone:"
      return_type: "Void"
      parameter {
        name: "tz"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setEra:"
      return_type: "Void"
      parameter {
        name: "v"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setYear:"
      return_type: "Void"
      parameter {
        name: "v"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setMonth:"
      return_type: "Void"
      parameter {
        name: "v"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setDay:"
      return_type: "Void"
      parameter {
        name: "v"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setHour:"
      return_type: "Void"
      parameter {
        name: "v"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setMinute:"
      return_type: "Void"
      parameter {
        name: "v"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setSecond:"
      return_type: "Void"
      parameter {
        name: "v"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setWeek:"
      return_type: "Void"
      parameter {
        name: "v"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setWeekday:"
      return_type: "Void"
      parameter {
        name: "v"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setWeekdayOrdinal:"
      return_type: "Void"
      parameter {
        name: "v"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setQuarter:"
      return_type: "Void"
      parameter {
        name: "v"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setWeekOfMonth:"
      return_type: "Void"
      parameter {
        name: "w"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setWeekOfYear:"
      return_type: "Void"
      parameter {
        name: "w"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setYearForWeekOfYear:"
      return_type: "Void"
      parameter {
        name: "y"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "date"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
}
class {
  name: "NSString"
  base_class: "NSObject"
  protocol: "NSCopying"
  protocol: "NSMutableCopying"
  protocol: "NSCoding"
  method {
    function {
      name: "length"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "characterAtIndex:"
      return_type: "UShort"
      parameter {
        name: "index"
        type: "ULong"
      }
    }
    class_method: false
  }
}
class {
  name: "NSMutableString"
  base_class: "NSString"
  method {
    function {
      name: "replaceCharactersInRange:withString:"
      return_type: "Void"
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "aString"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
class {
  name: "NSSimpleCString"
  base_class: "NSString"
  ivar {
    name: "bytes"
    type: "Pointer"
  }
  ivar {
    name: "numBytes"
    type: "Int"
  }
  ivar {
    name: "_unused"
    type: "Int"
  }
}
class {
  name: "NSConstantString"
  base_class: "NSSimpleCString"
}
class {
  name: "NSCharacterSet"
  base_class: "NSObject"
  protocol: "NSCopying"
  protocol: "NSMutableCopying"
  protocol: "NSCoding"
  method {
    function {
      name: "controlCharacterSet"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "whitespaceCharacterSet"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "whitespaceAndNewlineCharacterSet"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "decimalDigitCharacterSet"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "letterCharacterSet"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "lowercaseLetterCharacterSet"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "uppercaseLetterCharacterSet"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "nonBaseCharacterSet"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "alphanumericCharacterSet"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "decomposableCharacterSet"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "illegalCharacterSet"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "punctuationCharacterSet"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "capitalizedLetterCharacterSet"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "symbolCharacterSet"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "newlineCharacterSet"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "characterSetWithRange:"
      return_type: "ObjCId"
      parameter {
        name: "aRange"
        type: "Unexposed"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "characterSetWithCharactersInString:"
      return_type: "ObjCId"
      parameter {
        name: "aString"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "characterSetWithBitmapRepresentation:"
      return_type: "ObjCId"
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "characterSetWithContentsOfFile:"
      return_type: "ObjCId"
      parameter {
        name: "fName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "characterIsMember:"
      return_type: "SChar"
      parameter {
        name: "aCharacter"
        type: "UShort"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "bitmapRepresentation"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "invertedSet"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "longCharacterIsMember:"
      return_type: "SChar"
      parameter {
        name: "theLongChar"
        type: "UInt"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isSupersetOfSet:"
      return_type: "SChar"
      parameter {
        name: "theOtherSet"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "hasMemberInPlane:"
      return_type: "SChar"
      parameter {
        name: "thePlane"
        type: "UChar"
      }
    }
    class_method: false
  }
}
class {
  name: "NSMutableCharacterSet"
  base_class: "NSCharacterSet"
  protocol: "NSCopying"
  protocol: "NSMutableCopying"
  method {
    function {
      name: "addCharactersInRange:"
      return_type: "Void"
      parameter {
        name: "aRange"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeCharactersInRange:"
      return_type: "Void"
      parameter {
        name: "aRange"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "addCharactersInString:"
      return_type: "Void"
      parameter {
        name: "aString"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeCharactersInString:"
      return_type: "Void"
      parameter {
        name: "aString"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "formUnionWithCharacterSet:"
      return_type: "Void"
      parameter {
        name: "otherSet"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "formIntersectionWithCharacterSet:"
      return_type: "Void"
      parameter {
        name: "otherSet"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "invert"
      return_type: "Void"
    }
    class_method: false
  }
}
class {
  name: "NSCoder"
  base_class: "NSObject"
  method {
    function {
      name: "encodeValueOfObjCType:at:"
      return_type: "Void"
      parameter {
        name: "type"
        type: "Pointer"
      }
      parameter {
        name: "addr"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "encodeDataObject:"
      return_type: "Void"
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decodeValueOfObjCType:at:"
      return_type: "Void"
      parameter {
        name: "type"
        type: "Pointer"
      }
      parameter {
        name: "data"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decodeDataObject"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "versionForClassName:"
      return_type: "Long"
      parameter {
        name: "className"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
class {
  name: "NSData"
  base_class: "NSObject"
  protocol: "NSCopying"
  protocol: "NSMutableCopying"
  protocol: "NSCoding"
  method {
    function {
      name: "length"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "bytes"
      return_type: "Pointer"
    }
    class_method: false
  }
}
class {
  name: "NSMutableData"
  base_class: "NSData"
  method {
    function {
      name: "mutableBytes"
      return_type: "Pointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setLength:"
      return_type: "Void"
      parameter {
        name: "length"
        type: "ULong"
      }
    }
    class_method: false
  }
}
class {
  name: "NSPurgeableData"
  base_class: "NSMutableData"
  protocol: "NSDiscardableContent"
  ivar {
    name: "_length"
    type: "ULong"
  }
  ivar {
    name: "_accessCount"
    type: "Int"
  }
  ivar {
    name: "_private"
    type: "ConstantArray"
  }
  ivar {
    name: "_reserved"
    type: "Pointer"
  }
}
class {
  name: "NSFormatter"
  base_class: "NSObject"
  protocol: "NSCopying"
  protocol: "NSCoding"
  method {
    function {
      name: "stringForObjectValue:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "obj"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "attributedStringForObjectValue:withDefaultAttributes:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "obj"
        type: "ObjCId"
      }
      parameter {
        name: "attrs"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "editingStringForObjectValue:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "obj"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "getObjectValue:forString:errorDescription:"
      return_type: "SChar"
      parameter {
        name: "obj"
        type: "Pointer"
      }
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isPartialStringValid:newEditingString:errorDescription:"
      return_type: "SChar"
      parameter {
        name: "partialString"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "newString"
        type: "Pointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isPartialStringValid:proposedSelectedRange:originalString:originalSelectedRange:errorDescription:"
      return_type: "SChar"
      parameter {
        name: "partialStringPtr"
        type: "Pointer"
      }
      parameter {
        name: "proposedSelRangePtr"
        type: "Pointer"
      }
      parameter {
        name: "origString"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "origSelRange"
        type: "Unexposed"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
}
class {
  name: "NSDateFormatter"
  base_class: "NSFormatter"
  method {
    function {
      name: "getObjectValue:forString:range:error:"
      return_type: "SChar"
      parameter {
        name: "obj"
        type: "Pointer"
      }
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "rangep"
        type: "Pointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "stringFromDate:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "date"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "dateFromString:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "localizedStringFromDate:dateStyle:timeStyle:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "date"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "dstyle"
        type: "ULong"
      }
      parameter {
        name: "tstyle"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "dateFormatFromTemplate:options:locale:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "tmplate"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "locale"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "dateFormat"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "dateStyle"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "setDateStyle:"
      return_type: "Void"
      parameter {
        name: "style"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "timeStyle"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "setTimeStyle:"
      return_type: "Void"
      parameter {
        name: "style"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "locale"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setLocale:"
      return_type: "Void"
      parameter {
        name: "locale"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "generatesCalendarDates"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "setGeneratesCalendarDates:"
      return_type: "Void"
      parameter {
        name: "b"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "formatterBehavior"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "setFormatterBehavior:"
      return_type: "Void"
      parameter {
        name: "behavior"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "defaultFormatterBehavior"
      return_type: "ULong"
    }
    class_method: true
  }
  method {
    function {
      name: "setDefaultFormatterBehavior:"
      return_type: "Void"
      parameter {
        name: "behavior"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "setDateFormat:"
      return_type: "Void"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "timeZone"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setTimeZone:"
      return_type: "Void"
      parameter {
        name: "tz"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "calendar"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setCalendar:"
      return_type: "Void"
      parameter {
        name: "calendar"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isLenient"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "setLenient:"
      return_type: "Void"
      parameter {
        name: "b"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "twoDigitStartDate"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setTwoDigitStartDate:"
      return_type: "Void"
      parameter {
        name: "date"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "defaultDate"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setDefaultDate:"
      return_type: "Void"
      parameter {
        name: "date"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "eraSymbols"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setEraSymbols:"
      return_type: "Void"
      parameter {
        name: "array"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "monthSymbols"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setMonthSymbols:"
      return_type: "Void"
      parameter {
        name: "array"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "shortMonthSymbols"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setShortMonthSymbols:"
      return_type: "Void"
      parameter {
        name: "array"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "weekdaySymbols"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setWeekdaySymbols:"
      return_type: "Void"
      parameter {
        name: "array"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "shortWeekdaySymbols"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setShortWeekdaySymbols:"
      return_type: "Void"
      parameter {
        name: "array"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "AMSymbol"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setAMSymbol:"
      return_type: "Void"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "PMSymbol"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setPMSymbol:"
      return_type: "Void"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "longEraSymbols"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setLongEraSymbols:"
      return_type: "Void"
      parameter {
        name: "array"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "veryShortMonthSymbols"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setVeryShortMonthSymbols:"
      return_type: "Void"
      parameter {
        name: "array"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "standaloneMonthSymbols"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setStandaloneMonthSymbols:"
      return_type: "Void"
      parameter {
        name: "array"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "shortStandaloneMonthSymbols"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setShortStandaloneMonthSymbols:"
      return_type: "Void"
      parameter {
        name: "array"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "veryShortStandaloneMonthSymbols"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setVeryShortStandaloneMonthSymbols:"
      return_type: "Void"
      parameter {
        name: "array"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "veryShortWeekdaySymbols"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setVeryShortWeekdaySymbols:"
      return_type: "Void"
      parameter {
        name: "array"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "standaloneWeekdaySymbols"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setStandaloneWeekdaySymbols:"
      return_type: "Void"
      parameter {
        name: "array"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "shortStandaloneWeekdaySymbols"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setShortStandaloneWeekdaySymbols:"
      return_type: "Void"
      parameter {
        name: "array"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "veryShortStandaloneWeekdaySymbols"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setVeryShortStandaloneWeekdaySymbols:"
      return_type: "Void"
      parameter {
        name: "array"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "quarterSymbols"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setQuarterSymbols:"
      return_type: "Void"
      parameter {
        name: "array"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "shortQuarterSymbols"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setShortQuarterSymbols:"
      return_type: "Void"
      parameter {
        name: "array"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "standaloneQuarterSymbols"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setStandaloneQuarterSymbols:"
      return_type: "Void"
      parameter {
        name: "array"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "shortStandaloneQuarterSymbols"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setShortStandaloneQuarterSymbols:"
      return_type: "Void"
      parameter {
        name: "array"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "gregorianStartDate"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setGregorianStartDate:"
      return_type: "Void"
      parameter {
        name: "date"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "doesRelativeDateFormatting"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "setDoesRelativeDateFormatting:"
      return_type: "Void"
      parameter {
        name: "b"
        type: "SChar"
      }
    }
    class_method: false
  }
  ivar {
    name: "_attributes"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_formatter"
    type: "Pointer"
  }
  ivar {
    name: "_counter"
    type: "ULong"
  }
}
class {
  name: "NSScanner"
  base_class: "NSObject"
  protocol: "NSCopying"
  method {
    function {
      name: "string"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "scanLocation"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "setScanLocation:"
      return_type: "Void"
      parameter {
        name: "pos"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setCharactersToBeSkipped:"
      return_type: "Void"
      parameter {
        name: "set"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setCaseSensitive:"
      return_type: "Void"
      parameter {
        name: "flag"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setLocale:"
      return_type: "Void"
      parameter {
        name: "locale"
        type: "ObjCId"
      }
    }
    class_method: false
  }
}
class {
  name: "NSDictionary"
  base_class: "NSObject"
  protocol: "NSCopying"
  protocol: "NSMutableCopying"
  protocol: "NSCoding"
  protocol: "NSFastEnumeration"
  method {
    function {
      name: "count"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "objectForKey:"
      return_type: "ObjCId"
      parameter {
        name: "aKey"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "keyEnumerator"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
}
class {
  name: "NSMutableDictionary"
  base_class: "NSDictionary"
  method {
    function {
      name: "removeObjectForKey:"
      return_type: "Void"
      parameter {
        name: "aKey"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setObject:forKey:"
      return_type: "Void"
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
      parameter {
        name: "aKey"
        type: "ObjCId"
      }
    }
    class_method: false
  }
}
class {
  name: "NSDecimalNumber"
  base_class: "NSNumber"
  method {
    function {
      name: "initWithMantissa:exponent:isNegative:"
      return_type: "ObjCId"
      parameter {
        name: "mantissa"
        type: "ULongLong"
      }
      parameter {
        name: "exponent"
        type: "Short"
      }
      parameter {
        name: "flag"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithDecimal:"
      return_type: "ObjCId"
      parameter {
        name: "dcm"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithString:"
      return_type: "ObjCId"
      parameter {
        name: "numberValue"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithString:locale:"
      return_type: "ObjCId"
      parameter {
        name: "numberValue"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "locale"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "descriptionWithLocale:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "locale"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decimalValue"
      return_type: "Unexposed"
    }
    class_method: false
  }
  method {
    function {
      name: "decimalNumberWithMantissa:exponent:isNegative:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "mantissa"
        type: "ULongLong"
      }
      parameter {
        name: "exponent"
        type: "Short"
      }
      parameter {
        name: "flag"
        type: "SChar"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "decimalNumberWithDecimal:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "dcm"
        type: "Unexposed"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "decimalNumberWithString:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "numberValue"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "decimalNumberWithString:locale:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "numberValue"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "locale"
        type: "ObjCId"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "zero"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "one"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "minimumDecimalNumber"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "maximumDecimalNumber"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "notANumber"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "decimalNumberByAdding:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "decimalNumber"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decimalNumberByAdding:withBehavior:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "decimalNumber"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "behavior"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decimalNumberBySubtracting:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "decimalNumber"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decimalNumberBySubtracting:withBehavior:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "decimalNumber"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "behavior"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decimalNumberByMultiplyingBy:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "decimalNumber"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decimalNumberByMultiplyingBy:withBehavior:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "decimalNumber"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "behavior"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decimalNumberByDividingBy:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "decimalNumber"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decimalNumberByDividingBy:withBehavior:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "decimalNumber"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "behavior"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decimalNumberByRaisingToPower:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "power"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decimalNumberByRaisingToPower:withBehavior:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "power"
        type: "ULong"
      }
      parameter {
        name: "behavior"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decimalNumberByMultiplyingByPowerOf10:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "power"
        type: "Short"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decimalNumberByMultiplyingByPowerOf10:withBehavior:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "power"
        type: "Short"
      }
      parameter {
        name: "behavior"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decimalNumberByRoundingAccordingToBehavior:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "behavior"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "compare:"
      return_type: "Long"
      parameter {
        name: "decimalNumber"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setDefaultBehavior:"
      return_type: "Void"
      parameter {
        name: "behavior"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "defaultBehavior"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "objCType"
      return_type: "Pointer"
    }
    class_method: false
  }
  method {
    function {
      name: "doubleValue"
      return_type: "Double"
    }
    class_method: false
  }
  ivar {
    name: "_exponent"
    type: "Int"
  }
  ivar {
    name: "_length"
    type: "UInt"
  }
  ivar {
    name: "_isNegative"
    type: "UInt"
  }
  ivar {
    name: "_isCompact"
    type: "UInt"
  }
  ivar {
    name: "_reserved"
    type: "UInt"
  }
  ivar {
    name: "_hasExternalRefCount"
    type: "UInt"
  }
  ivar {
    name: "_refs"
    type: "UInt"
  }
  ivar {
    name: "_mantissa"
    type: "ConstantArray"
  }
}
class {
  name: "NSDecimalNumberHandler"
  base_class: "NSObject"
  protocol: "NSDecimalNumberBehaviors"
  protocol: "NSCoding"
  method {
    function {
      name: "defaultDecimalNumberHandler"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "initWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:"
      return_type: "ObjCId"
      parameter {
        name: "roundingMode"
        type: "ULong"
      }
      parameter {
        name: "scale"
        type: "Short"
      }
      parameter {
        name: "exact"
        type: "SChar"
      }
      parameter {
        name: "overflow"
        type: "SChar"
      }
      parameter {
        name: "underflow"
        type: "SChar"
      }
      parameter {
        name: "divideByZero"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decimalNumberHandlerWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:"
      return_type: "ObjCId"
      parameter {
        name: "roundingMode"
        type: "ULong"
      }
      parameter {
        name: "scale"
        type: "Short"
      }
      parameter {
        name: "exact"
        type: "SChar"
      }
      parameter {
        name: "overflow"
        type: "SChar"
      }
      parameter {
        name: "underflow"
        type: "SChar"
      }
      parameter {
        name: "divideByZero"
        type: "SChar"
      }
    }
    class_method: true
  }
  ivar {
    name: "_scale"
    type: "Int"
  }
  ivar {
    name: "_roundingMode"
    type: "UInt"
  }
  ivar {
    name: "_raiseOnExactness"
    type: "UInt"
  }
  ivar {
    name: "_raiseOnOverflow"
    type: "UInt"
  }
  ivar {
    name: "_raiseOnUnderflow"
    type: "UInt"
  }
  ivar {
    name: "_raiseOnDivideByZero"
    type: "UInt"
  }
  ivar {
    name: "_unused"
    type: "UInt"
  }
  ivar {
    name: "_reserved2"
    type: "Pointer"
  }
  ivar {
    name: "_reserved"
    type: "Pointer"
  }
}
class {
  name: "NSError"
  base_class: "NSObject"
  protocol: "NSCopying"
  protocol: "NSCoding"
  method {
    function {
      name: "initWithDomain:code:userInfo:"
      return_type: "ObjCId"
      parameter {
        name: "domain"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "code"
        type: "Long"
      }
      parameter {
        name: "dict"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "errorWithDomain:code:userInfo:"
      return_type: "ObjCId"
      parameter {
        name: "domain"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "code"
        type: "Long"
      }
      parameter {
        name: "dict"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "domain"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "code"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "userInfo"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "localizedDescription"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "localizedFailureReason"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "localizedRecoverySuggestion"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "localizedRecoveryOptions"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "recoveryAttempter"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "helpAnchor"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  ivar {
    name: "_reserved"
    type: "Pointer"
  }
  ivar {
    name: "_code"
    type: "Long"
  }
  ivar {
    name: "_domain"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_userInfo"
    type: "ObjCObjectPointer"
  }
}
class {
  name: "NSException"
  base_class: "NSObject"
  protocol: "NSCopying"
  protocol: "NSCoding"
  method {
    function {
      name: "exceptionWithName:reason:userInfo:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "reason"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "userInfo"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithName:reason:userInfo:"
      return_type: "ObjCId"
      parameter {
        name: "aName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "aReason"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "aUserInfo"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "name"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "reason"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "userInfo"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "callStackReturnAddresses"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "callStackSymbols"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "raise"
      return_type: "Void"
    }
    class_method: false
  }
  ivar {
    name: "name"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "reason"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "userInfo"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "reserved"
    type: "ObjCId"
  }
}
class {
  name: "NSAssertionHandler"
  base_class: "NSObject"
  method {
    function {
      name: "currentHandler"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "handleFailureInMethod:object:file:lineNumber:description:"
      return_type: "Void"
      parameter {
        name: "selector"
        type: "ObjCSel"
      }
      parameter {
        name: "object"
        type: "ObjCId"
      }
      parameter {
        name: "fileName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "line"
        type: "Long"
      }
      parameter {
        name: "format"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "handleFailureInFunction:file:lineNumber:description:"
      return_type: "Void"
      parameter {
        name: "functionName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "fileName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "line"
        type: "Long"
      }
      parameter {
        name: "format"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  ivar {
    name: "_reserved"
    type: "Pointer"
  }
}
class {
  name: "NSFileHandle"
  base_class: "NSObject"
  method {
    function {
      name: "availableData"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "readDataToEndOfFile"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "readDataOfLength:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "length"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "writeData:"
      return_type: "Void"
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "offsetInFile"
      return_type: "ULongLong"
    }
    class_method: false
  }
  method {
    function {
      name: "seekToEndOfFile"
      return_type: "ULongLong"
    }
    class_method: false
  }
  method {
    function {
      name: "seekToFileOffset:"
      return_type: "Void"
      parameter {
        name: "offset"
        type: "ULongLong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "truncateFileAtOffset:"
      return_type: "Void"
      parameter {
        name: "offset"
        type: "ULongLong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "synchronizeFile"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "closeFile"
      return_type: "Void"
    }
    class_method: false
  }
}
class {
  name: "NSPipe"
  base_class: "NSObject"
  method {
    function {
      name: "fileHandleForReading"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "fileHandleForWriting"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "init"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "pipe"
      return_type: "ObjCId"
    }
    class_method: true
  }
}
class {
  name: "NSFileManager"
  base_class: "NSObject"
  method {
    function {
      name: "defaultManager"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "mountedVolumeURLsIncludingResourceValuesForKeys:options:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "propertyKeys"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "keys"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mask"
        type: "ULong"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "URLsForDirectory:inDomains:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "directory"
        type: "ULong"
      }
      parameter {
        name: "domainMask"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "URLForDirectory:inDomain:appropriateForURL:create:error:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "directory"
        type: "ULong"
      }
      parameter {
        name: "domain"
        type: "ULong"
      }
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "shouldCreate"
        type: "SChar"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "createDirectoryAtURL:withIntermediateDirectories:attributes:error:"
      return_type: "SChar"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "createIntermediates"
        type: "SChar"
      }
      parameter {
        name: "attributes"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "createSymbolicLinkAtURL:withDestinationURL:error:"
      return_type: "SChar"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "destURL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setDelegate:"
      return_type: "Void"
      parameter {
        name: "delegate"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "delegate"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "setAttributes:ofItemAtPath:error:"
      return_type: "SChar"
      parameter {
        name: "attributes"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "createDirectoryAtPath:withIntermediateDirectories:attributes:error:"
      return_type: "SChar"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "createIntermediates"
        type: "SChar"
      }
      parameter {
        name: "attributes"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "contentsOfDirectoryAtPath:error:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "subpathsOfDirectoryAtPath:error:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "attributesOfItemAtPath:error:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "attributesOfFileSystemForPath:error:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "createSymbolicLinkAtPath:withDestinationPath:error:"
      return_type: "SChar"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "destPath"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "destinationOfSymbolicLinkAtPath:error:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "copyItemAtPath:toPath:error:"
      return_type: "SChar"
      parameter {
        name: "srcPath"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "dstPath"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "moveItemAtPath:toPath:error:"
      return_type: "SChar"
      parameter {
        name: "srcPath"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "dstPath"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "linkItemAtPath:toPath:error:"
      return_type: "SChar"
      parameter {
        name: "srcPath"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "dstPath"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeItemAtPath:error:"
      return_type: "SChar"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "copyItemAtURL:toURL:error:"
      return_type: "SChar"
      parameter {
        name: "srcURL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "dstURL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "moveItemAtURL:toURL:error:"
      return_type: "SChar"
      parameter {
        name: "srcURL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "dstURL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "linkItemAtURL:toURL:error:"
      return_type: "SChar"
      parameter {
        name: "srcURL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "dstURL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeItemAtURL:error:"
      return_type: "SChar"
      parameter {
        name: "URL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "fileAttributesAtPath:traverseLink:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "yorn"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "changeFileAttributes:atPath:"
      return_type: "SChar"
      parameter {
        name: "attributes"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "directoryContentsAtPath:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "fileSystemAttributesAtPath:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "pathContentOfSymbolicLinkAtPath:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "createSymbolicLinkAtPath:pathContent:"
      return_type: "SChar"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "otherpath"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "createDirectoryAtPath:attributes:"
      return_type: "SChar"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "attributes"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "linkPath:toPath:handler:"
      return_type: "SChar"
      parameter {
        name: "src"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "dest"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "handler"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "copyPath:toPath:handler:"
      return_type: "SChar"
      parameter {
        name: "src"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "dest"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "handler"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "movePath:toPath:handler:"
      return_type: "SChar"
      parameter {
        name: "src"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "dest"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "handler"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeFileAtPath:handler:"
      return_type: "SChar"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "handler"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "currentDirectoryPath"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "changeCurrentDirectoryPath:"
      return_type: "SChar"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "fileExistsAtPath:"
      return_type: "SChar"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "fileExistsAtPath:isDirectory:"
      return_type: "SChar"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "isDirectory"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isReadableFileAtPath:"
      return_type: "SChar"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isWritableFileAtPath:"
      return_type: "SChar"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isExecutableFileAtPath:"
      return_type: "SChar"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isDeletableFileAtPath:"
      return_type: "SChar"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "contentsEqualAtPath:andPath:"
      return_type: "SChar"
      parameter {
        name: "path1"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "path2"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "displayNameAtPath:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "componentsToDisplayForPath:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "enumeratorAtPath:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "keys"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mask"
        type: "ULong"
      }
      parameter {
        name: "handler"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "subpathsAtPath:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "contentsAtPath:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "createFileAtPath:contents:attributes:"
      return_type: "SChar"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "attr"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "fileSystemRepresentationWithPath:"
      return_type: "Pointer"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "stringWithFileSystemRepresentation:length:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "str"
        type: "Pointer"
      }
      parameter {
        name: "len"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:"
      return_type: "SChar"
      parameter {
        name: "originalItemURL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "newItemURL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "backupItemName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
      parameter {
        name: "resultingURL"
        type: "Pointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setUbiquitous:itemAtURL:destinationURL:error:"
      return_type: "SChar"
      parameter {
        name: "flag"
        type: "SChar"
      }
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "destinationURL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isUbiquitousItemAtURL:"
      return_type: "SChar"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "startDownloadingUbiquitousItemAtURL:error:"
      return_type: "SChar"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "evictUbiquitousItemAtURL:error:"
      return_type: "SChar"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "URLForUbiquityContainerIdentifier:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "containerIdentifier"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "URLForPublishingUbiquitousItemAtURL:expirationDate:error:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "outDate"
        type: "Pointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
}
class {
  name: "NSDirectoryEnumerator"
  base_class: "NSEnumerator"
  method {
    function {
      name: "fileAttributes"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "directoryAttributes"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "skipDescendents"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "level"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "skipDescendants"
      return_type: "Void"
    }
    class_method: false
  }
}
class {
  name: "NSHTTPCookie"
  base_class: "NSObject"
  method {
    function {
      name: "initWithProperties:"
      return_type: "ObjCId"
      parameter {
        name: "properties"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "cookieWithProperties:"
      return_type: "ObjCId"
      parameter {
        name: "properties"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "requestHeaderFieldsWithCookies:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "cookies"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "cookiesWithResponseHeaderFields:forURL:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "headerFields"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "URL"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "properties"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "version"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "name"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "value"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "expiresDate"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "isSessionOnly"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "domain"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "path"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "isSecure"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "isHTTPOnly"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "comment"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "commentURL"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "portList"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  ivar {
    name: "_cookiePrivate"
    type: "ObjCObjectPointer"
  }
}
class {
  name: "NSHTTPCookieStorage"
  base_class: "NSObject"
  method {
    function {
      name: "sharedHTTPCookieStorage"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "cookies"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setCookie:"
      return_type: "Void"
      parameter {
        name: "cookie"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "deleteCookie:"
      return_type: "Void"
      parameter {
        name: "cookie"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "cookiesForURL:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "URL"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setCookies:forURL:mainDocumentURL:"
      return_type: "Void"
      parameter {
        name: "cookies"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "URL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mainDocumentURL"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "cookieAcceptPolicy"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "setCookieAcceptPolicy:"
      return_type: "Void"
      parameter {
        name: "cookieAcceptPolicy"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "sortedCookiesUsingDescriptors:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "sortOrder"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  ivar {
    name: "_internal"
    type: "ObjCObjectPointer"
  }
}
class {
  name: "NSIndexPath"
  base_class: "NSObject"
  protocol: "NSCopying"
  protocol: "NSCoding"
  method {
    function {
      name: "indexPathWithIndex:"
      return_type: "ObjCId"
      parameter {
        name: "index"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "indexPathWithIndexes:length:"
      return_type: "ObjCId"
      parameter {
        name: "indexes"
        type: "Pointer"
      }
      parameter {
        name: "length"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithIndex:"
      return_type: "ObjCId"
      parameter {
        name: "index"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithIndexes:length:"
      return_type: "ObjCId"
      parameter {
        name: "indexes"
        type: "Pointer"
      }
      parameter {
        name: "length"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "indexPathByAddingIndex:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "index"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "indexPathByRemovingLastIndex"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "indexAtPosition:"
      return_type: "ULong"
      parameter {
        name: "position"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "length"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "getIndexes:"
      return_type: "Void"
      parameter {
        name: "indexes"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "compare:"
      return_type: "Long"
      parameter {
        name: "otherObject"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  ivar {
    name: "_indexes"
    type: "Pointer"
  }
  ivar {
    name: "_hash"
    type: "ULong"
  }
  ivar {
    name: "_length"
    type: "ULong"
  }
  ivar {
    name: "_reserved"
    type: "Pointer"
  }
}
class {
  name: "NSIndexSet"
  base_class: "NSObject"
  protocol: "NSCopying"
  protocol: "NSMutableCopying"
  protocol: "NSCoding"
  method {
    function {
      name: "indexSet"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "indexSetWithIndex:"
      return_type: "ObjCId"
      parameter {
        name: "value"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "indexSetWithIndexesInRange:"
      return_type: "ObjCId"
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "init"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "initWithIndex:"
      return_type: "ObjCId"
      parameter {
        name: "value"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithIndexesInRange:"
      return_type: "ObjCId"
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithIndexSet:"
      return_type: "ObjCId"
      parameter {
        name: "indexSet"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isEqualToIndexSet:"
      return_type: "SChar"
      parameter {
        name: "indexSet"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "count"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "firstIndex"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "lastIndex"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "indexGreaterThanIndex:"
      return_type: "ULong"
      parameter {
        name: "value"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "indexLessThanIndex:"
      return_type: "ULong"
      parameter {
        name: "value"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "indexGreaterThanOrEqualToIndex:"
      return_type: "ULong"
      parameter {
        name: "value"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "indexLessThanOrEqualToIndex:"
      return_type: "ULong"
      parameter {
        name: "value"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "getIndexes:maxCount:inIndexRange:"
      return_type: "ULong"
      parameter {
        name: "indexBuffer"
        type: "Pointer"
      }
      parameter {
        name: "bufferSize"
        type: "ULong"
      }
      parameter {
        name: "range"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "countOfIndexesInRange:"
      return_type: "ULong"
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "containsIndex:"
      return_type: "SChar"
      parameter {
        name: "value"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "containsIndexesInRange:"
      return_type: "SChar"
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "containsIndexes:"
      return_type: "SChar"
      parameter {
        name: "indexSet"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "intersectsIndexesInRange:"
      return_type: "SChar"
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "enumerateIndexesUsingBlock:"
      return_type: "Void"
      parameter {
        name: "block"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "enumerateIndexesWithOptions:usingBlock:"
      return_type: "Void"
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "block"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "enumerateIndexesInRange:options:usingBlock:"
      return_type: "Void"
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "block"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "indexPassingTest:"
      return_type: "ULong"
      parameter {
        name: "predicate"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "indexWithOptions:passingTest:"
      return_type: "ULong"
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "predicate"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "indexInRange:options:passingTest:"
      return_type: "ULong"
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "predicate"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "indexesPassingTest:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "predicate"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "indexesWithOptions:passingTest:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "predicate"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "indexesInRange:options:passingTest:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "predicate"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "enumerateRangesUsingBlock:"
      return_type: "Void"
      parameter {
        name: "block"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "enumerateRangesWithOptions:usingBlock:"
      return_type: "Void"
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "block"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "enumerateRangesInRange:options:usingBlock:"
      return_type: "Void"
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "block"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  ivar {
    name: "_indexSetFlags"
    type: "Unexposed"
  }
  ivar {
    name: "_internal"
    type: "Unexposed"
  }
}
class {
  name: "NSMutableIndexSet"
  base_class: "NSIndexSet"
  method {
    function {
      name: "addIndexes:"
      return_type: "Void"
      parameter {
        name: "indexSet"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeIndexes:"
      return_type: "Void"
      parameter {
        name: "indexSet"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeAllIndexes"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "addIndex:"
      return_type: "Void"
      parameter {
        name: "value"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeIndex:"
      return_type: "Void"
      parameter {
        name: "value"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "addIndexesInRange:"
      return_type: "Void"
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeIndexesInRange:"
      return_type: "Void"
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "shiftIndexesStartingAtIndex:by:"
      return_type: "Void"
      parameter {
        name: "index"
        type: "ULong"
      }
      parameter {
        name: "delta"
        type: "Long"
      }
    }
    class_method: false
  }
  ivar {
    name: "_reserved"
    type: "Pointer"
  }
}
class {
  name: "NSInvocation"
  base_class: "NSObject"
  method {
    function {
      name: "invocationWithMethodSignature:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "sig"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "methodSignature"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "retainArguments"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "argumentsRetained"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "target"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "setTarget:"
      return_type: "Void"
      parameter {
        name: "target"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "selector"
      return_type: "ObjCSel"
    }
    class_method: false
  }
  method {
    function {
      name: "setSelector:"
      return_type: "Void"
      parameter {
        name: "selector"
        type: "ObjCSel"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "getReturnValue:"
      return_type: "Void"
      parameter {
        name: "retLoc"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setReturnValue:"
      return_type: "Void"
      parameter {
        name: "retLoc"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "getArgument:atIndex:"
      return_type: "Void"
      parameter {
        name: "argumentLocation"
        type: "Pointer"
      }
      parameter {
        name: "idx"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setArgument:atIndex:"
      return_type: "Void"
      parameter {
        name: "argumentLocation"
        type: "Pointer"
      }
      parameter {
        name: "idx"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "invoke"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "invokeWithTarget:"
      return_type: "Void"
      parameter {
        name: "target"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  ivar {
    name: "_frame"
    type: "Pointer"
  }
  ivar {
    name: "_retdata"
    type: "Pointer"
  }
  ivar {
    name: "_signature"
    type: "ObjCId"
  }
  ivar {
    name: "_container"
    type: "ObjCId"
  }
  ivar {
    name: "_retainedArgs"
    type: "UChar"
  }
  ivar {
    name: "_reserved"
    type: "ConstantArray"
  }
}
class {
  name: "NSJSONSerialization"
  base_class: "NSObject"
  method {
    function {
      name: "isValidJSONObject:"
      return_type: "SChar"
      parameter {
        name: "obj"
        type: "ObjCId"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "dataWithJSONObject:options:error:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "obj"
        type: "ObjCId"
      }
      parameter {
        name: "opt"
        type: "ULong"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "JSONObjectWithData:options:error:"
      return_type: "ObjCId"
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "opt"
        type: "ULong"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "writeJSONObject:toStream:options:error:"
      return_type: "Long"
      parameter {
        name: "obj"
        type: "ObjCId"
      }
      parameter {
        name: "stream"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "opt"
        type: "ULong"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "JSONObjectWithStream:options:error:"
      return_type: "ObjCId"
      parameter {
        name: "stream"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "opt"
        type: "ULong"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: true
  }
  ivar {
    name: "reserved"
    type: "ConstantArray"
  }
}
class {
  name: "NSOrderedSet"
  base_class: "NSObject"
  protocol: "NSCopying"
  protocol: "NSMutableCopying"
  protocol: "NSCoding"
  protocol: "NSFastEnumeration"
  method {
    function {
      name: "count"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "objectAtIndex:"
      return_type: "ObjCId"
      parameter {
        name: "idx"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "indexOfObject:"
      return_type: "ULong"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
}
class {
  name: "NSMutableOrderedSet"
  base_class: "NSOrderedSet"
  method {
    function {
      name: "insertObject:atIndex:"
      return_type: "Void"
      parameter {
        name: "object"
        type: "ObjCId"
      }
      parameter {
        name: "idx"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeObjectAtIndex:"
      return_type: "Void"
      parameter {
        name: "idx"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "replaceObjectAtIndex:withObject:"
      return_type: "Void"
      parameter {
        name: "idx"
        type: "ULong"
      }
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
}
class {
  name: "NSSet"
  base_class: "NSObject"
  protocol: "NSCopying"
  protocol: "NSMutableCopying"
  protocol: "NSCoding"
  protocol: "NSFastEnumeration"
  method {
    function {
      name: "count"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "member:"
      return_type: "ObjCId"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "objectEnumerator"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
}
class {
  name: "NSMutableSet"
  base_class: "NSSet"
  method {
    function {
      name: "addObject:"
      return_type: "Void"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeObject:"
      return_type: "Void"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
}
class {
  name: "NSCountedSet"
  base_class: "NSMutableSet"
  method {
    function {
      name: "initWithCapacity:"
      return_type: "ObjCId"
      parameter {
        name: "numItems"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithArray:"
      return_type: "ObjCId"
      parameter {
        name: "array"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithSet:"
      return_type: "ObjCId"
      parameter {
        name: "set"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "countForObject:"
      return_type: "ULong"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "objectEnumerator"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "addObject:"
      return_type: "Void"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeObject:"
      return_type: "Void"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  ivar {
    name: "_table"
    type: "ObjCId"
  }
  ivar {
    name: "_reserved"
    type: "Pointer"
  }
}
class {
  name: "NSPropertyListSerialization"
  base_class: "NSObject"
  method {
    function {
      name: "propertyList:isValidForFormat:"
      return_type: "SChar"
      parameter {
        name: "plist"
        type: "ObjCId"
      }
      parameter {
        name: "format"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "dataWithPropertyList:format:options:error:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "plist"
        type: "ObjCId"
      }
      parameter {
        name: "format"
        type: "ULong"
      }
      parameter {
        name: "opt"
        type: "ULong"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "writePropertyList:toStream:format:options:error:"
      return_type: "Long"
      parameter {
        name: "plist"
        type: "ObjCId"
      }
      parameter {
        name: "stream"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "format"
        type: "ULong"
      }
      parameter {
        name: "opt"
        type: "ULong"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "propertyListWithData:options:format:error:"
      return_type: "ObjCId"
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "opt"
        type: "ULong"
      }
      parameter {
        name: "format"
        type: "Pointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "propertyListWithStream:options:format:error:"
      return_type: "ObjCId"
      parameter {
        name: "stream"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "opt"
        type: "ULong"
      }
      parameter {
        name: "format"
        type: "Pointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "dataFromPropertyList:format:errorDescription:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "plist"
        type: "ObjCId"
      }
      parameter {
        name: "format"
        type: "ULong"
      }
      parameter {
        name: "errorString"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "propertyListFromData:mutabilityOption:format:errorDescription:"
      return_type: "ObjCId"
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "opt"
        type: "ULong"
      }
      parameter {
        name: "format"
        type: "Pointer"
      }
      parameter {
        name: "errorString"
        type: "Pointer"
      }
    }
    class_method: true
  }
  ivar {
    name: "reserved"
    type: "ConstantArray"
  }
}
class {
  name: "NSKeyedArchiver"
  base_class: "NSCoder"
  method {
    function {
      name: "archivedDataWithRootObject:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "rootObject"
        type: "ObjCId"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "archiveRootObject:toFile:"
      return_type: "SChar"
      parameter {
        name: "rootObject"
        type: "ObjCId"
      }
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initForWritingWithMutableData:"
      return_type: "ObjCId"
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setDelegate:"
      return_type: "Void"
      parameter {
        name: "delegate"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "delegate"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setOutputFormat:"
      return_type: "Void"
      parameter {
        name: "format"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "outputFormat"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "finishEncoding"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "setClassName:forClass:"
      return_type: "Void"
      parameter {
        name: "codedName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "cls"
        type: "ObjCClass"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "setClassName:forClass:"
      return_type: "Void"
      parameter {
        name: "codedName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "cls"
        type: "ObjCClass"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "classNameForClass:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "cls"
        type: "ObjCClass"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "classNameForClass:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "cls"
        type: "ObjCClass"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "encodeObject:forKey:"
      return_type: "Void"
      parameter {
        name: "objv"
        type: "ObjCId"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "encodeConditionalObject:forKey:"
      return_type: "Void"
      parameter {
        name: "objv"
        type: "ObjCId"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "encodeBool:forKey:"
      return_type: "Void"
      parameter {
        name: "boolv"
        type: "SChar"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "encodeInt:forKey:"
      return_type: "Void"
      parameter {
        name: "intv"
        type: "Int"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "encodeInt32:forKey:"
      return_type: "Void"
      parameter {
        name: "intv"
        type: "Int"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "encodeInt64:forKey:"
      return_type: "Void"
      parameter {
        name: "intv"
        type: "LongLong"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "encodeFloat:forKey:"
      return_type: "Void"
      parameter {
        name: "realv"
        type: "Float"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "encodeDouble:forKey:"
      return_type: "Void"
      parameter {
        name: "realv"
        type: "Double"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "encodeBytes:length:forKey:"
      return_type: "Void"
      parameter {
        name: "bytesp"
        type: "Pointer"
      }
      parameter {
        name: "lenv"
        type: "ULong"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  ivar {
    name: "_stream"
    type: "Pointer"
  }
  ivar {
    name: "_flags"
    type: "ULong"
  }
  ivar {
    name: "_delegate"
    type: "ObjCId"
  }
  ivar {
    name: "_containers"
    type: "ObjCId"
  }
  ivar {
    name: "_objects"
    type: "ObjCId"
  }
  ivar {
    name: "_objRefMap"
    type: "ObjCId"
  }
  ivar {
    name: "_replacementMap"
    type: "ObjCId"
  }
  ivar {
    name: "_classNameMap"
    type: "ObjCId"
  }
  ivar {
    name: "_conditionals"
    type: "ObjCId"
  }
  ivar {
    name: "_classes"
    type: "ObjCId"
  }
  ivar {
    name: "_genericKey"
    type: "ULong"
  }
  ivar {
    name: "_cache"
    type: "Pointer"
  }
  ivar {
    name: "_cacheSize"
    type: "ULong"
  }
  ivar {
    name: "_estimatedCount"
    type: "ULong"
  }
  ivar {
    name: "_reserved2"
    type: "Pointer"
  }
  ivar {
    name: "_visited"
    type: "ObjCId"
  }
  ivar {
    name: "_reserved0"
    type: "Pointer"
  }
}
class {
  name: "NSKeyedUnarchiver"
  base_class: "NSCoder"
  method {
    function {
      name: "unarchiveObjectWithData:"
      return_type: "ObjCId"
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "unarchiveObjectWithFile:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initForReadingWithData:"
      return_type: "ObjCId"
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setDelegate:"
      return_type: "Void"
      parameter {
        name: "delegate"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "delegate"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "finishDecoding"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "setClass:forClassName:"
      return_type: "Void"
      parameter {
        name: "cls"
        type: "ObjCClass"
      }
      parameter {
        name: "codedName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "setClass:forClassName:"
      return_type: "Void"
      parameter {
        name: "cls"
        type: "ObjCClass"
      }
      parameter {
        name: "codedName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "classForClassName:"
      return_type: "ObjCClass"
      parameter {
        name: "codedName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "classForClassName:"
      return_type: "ObjCClass"
      parameter {
        name: "codedName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "containsValueForKey:"
      return_type: "SChar"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decodeObjectForKey:"
      return_type: "ObjCId"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decodeBoolForKey:"
      return_type: "SChar"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decodeIntForKey:"
      return_type: "Int"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decodeInt32ForKey:"
      return_type: "Int"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decodeInt64ForKey:"
      return_type: "LongLong"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decodeFloatForKey:"
      return_type: "Float"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decodeDoubleForKey:"
      return_type: "Double"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decodeBytesForKey:returnedLength:"
      return_type: "Pointer"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "lengthp"
        type: "Pointer"
      }
    }
    class_method: false
  }
  ivar {
    name: "_delegate"
    type: "ObjCId"
  }
  ivar {
    name: "_flags"
    type: "UInt"
  }
  ivar {
    name: "_objRefMap"
    type: "ObjCId"
  }
  ivar {
    name: "_replacementMap"
    type: "ObjCId"
  }
  ivar {
    name: "_nameClassMap"
    type: "ObjCId"
  }
  ivar {
    name: "_tmpRefObjMap"
    type: "ObjCId"
  }
  ivar {
    name: "_refObjMap"
    type: "ObjCId"
  }
  ivar {
    name: "_genericKey"
    type: "Int"
  }
  ivar {
    name: "_data"
    type: "ObjCId"
  }
  ivar {
    name: "_offsetData"
    type: "Pointer"
  }
  ivar {
    name: "_containers"
    type: "ObjCId"
  }
  ivar {
    name: "_objects"
    type: "ObjCId"
  }
  ivar {
    name: "_bytes"
    type: "Pointer"
  }
  ivar {
    name: "_len"
    type: "ULongLong"
  }
  ivar {
    name: "_helper"
    type: "ObjCId"
  }
  ivar {
    name: "_reserved0"
    type: "Pointer"
  }
}
class {
  name: "NSLocale"
  base_class: "NSObject"
  protocol: "NSCopying"
  protocol: "NSCoding"
  method {
    function {
      name: "objectForKey:"
      return_type: "ObjCId"
      parameter {
        name: "key"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "displayNameForKey:value:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "key"
        type: "ObjCId"
      }
      parameter {
        name: "value"
        type: "ObjCId"
      }
    }
    class_method: false
  }
}
class {
  name: "NSLock"
  base_class: "NSObject"
  protocol: "NSLocking"
  method {
    function {
      name: "tryLock"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "lockBeforeDate:"
      return_type: "SChar"
      parameter {
        name: "limit"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setName:"
      return_type: "Void"
      parameter {
        name: "n"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "name"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  ivar {
    name: "_priv"
    type: "Pointer"
  }
}
class {
  name: "NSConditionLock"
  base_class: "NSObject"
  protocol: "NSLocking"
  method {
    function {
      name: "initWithCondition:"
      return_type: "ObjCId"
      parameter {
        name: "condition"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "condition"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "lockWhenCondition:"
      return_type: "Void"
      parameter {
        name: "condition"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "tryLock"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "tryLockWhenCondition:"
      return_type: "SChar"
      parameter {
        name: "condition"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "unlockWithCondition:"
      return_type: "Void"
      parameter {
        name: "condition"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "lockBeforeDate:"
      return_type: "SChar"
      parameter {
        name: "limit"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "lockWhenCondition:beforeDate:"
      return_type: "SChar"
      parameter {
        name: "condition"
        type: "Long"
      }
      parameter {
        name: "limit"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setName:"
      return_type: "Void"
      parameter {
        name: "n"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "name"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  ivar {
    name: "_priv"
    type: "Pointer"
  }
}
class {
  name: "NSRecursiveLock"
  base_class: "NSObject"
  protocol: "NSLocking"
  method {
    function {
      name: "tryLock"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "lockBeforeDate:"
      return_type: "SChar"
      parameter {
        name: "limit"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setName:"
      return_type: "Void"
      parameter {
        name: "n"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "name"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  ivar {
    name: "_priv"
    type: "Pointer"
  }
}
class {
  name: "NSCondition"
  base_class: "NSObject"
  protocol: "NSLocking"
  method {
    function {
      name: "wait"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "waitUntilDate:"
      return_type: "SChar"
      parameter {
        name: "limit"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "signal"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "broadcast"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "setName:"
      return_type: "Void"
      parameter {
        name: "n"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "name"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  ivar {
    name: "_priv"
    type: "Pointer"
  }
}
class {
  name: "NSMethodSignature"
  base_class: "NSObject"
  method {
    function {
      name: "signatureWithObjCTypes:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "types"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "numberOfArguments"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "getArgumentTypeAtIndex:"
      return_type: "Pointer"
      parameter {
        name: "idx"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "frameLength"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "isOneway"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "methodReturnType"
      return_type: "Pointer"
    }
    class_method: false
  }
  method {
    function {
      name: "methodReturnLength"
      return_type: "ULong"
    }
    class_method: false
  }
  ivar {
    name: "_private"
    type: "Pointer"
  }
  ivar {
    name: "_reserved"
    type: "ConstantArray"
  }
}
class {
  name: "NSNotification"
  base_class: "NSObject"
  protocol: "NSCopying"
  protocol: "NSCoding"
  method {
    function {
      name: "name"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "object"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "userInfo"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
}
class {
  name: "NSNotificationCenter"
  base_class: "NSObject"
  method {
    function {
      name: "defaultCenter"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "addObserver:selector:name:object:"
      return_type: "Void"
      parameter {
        name: "observer"
        type: "ObjCId"
      }
      parameter {
        name: "aSelector"
        type: "ObjCSel"
      }
      parameter {
        name: "aName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "postNotification:"
      return_type: "Void"
      parameter {
        name: "notification"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "postNotificationName:object:"
      return_type: "Void"
      parameter {
        name: "aName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "postNotificationName:object:userInfo:"
      return_type: "Void"
      parameter {
        name: "aName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
      parameter {
        name: "aUserInfo"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeObserver:"
      return_type: "Void"
      parameter {
        name: "observer"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeObserver:name:object:"
      return_type: "Void"
      parameter {
        name: "observer"
        type: "ObjCId"
      }
      parameter {
        name: "aName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "addObserverForName:object:queue:usingBlock:"
      return_type: "ObjCId"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "obj"
        type: "ObjCId"
      }
      parameter {
        name: "queue"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "block"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  ivar {
    name: "_impl"
    type: "Pointer"
  }
  ivar {
    name: "_callback"
    type: "Pointer"
  }
  ivar {
    name: "_pad"
    type: "ConstantArray"
  }
}
class {
  name: "NSNotificationQueue"
  base_class: "NSObject"
  method {
    function {
      name: "defaultQueue"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "initWithNotificationCenter:"
      return_type: "ObjCId"
      parameter {
        name: "notificationCenter"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "enqueueNotification:postingStyle:"
      return_type: "Void"
      parameter {
        name: "notification"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "postingStyle"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "enqueueNotification:postingStyle:coalesceMask:forModes:"
      return_type: "Void"
      parameter {
        name: "notification"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "postingStyle"
        type: "ULong"
      }
      parameter {
        name: "coalesceMask"
        type: "ULong"
      }
      parameter {
        name: "modes"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "dequeueNotificationsMatching:coalesceMask:"
      return_type: "Void"
      parameter {
        name: "notification"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "coalesceMask"
        type: "ULong"
      }
    }
    class_method: false
  }
  ivar {
    name: "_notificationCenter"
    type: "ObjCId"
  }
  ivar {
    name: "_asapQueue"
    type: "ObjCId"
  }
  ivar {
    name: "_asapObs"
    type: "ObjCId"
  }
  ivar {
    name: "_idleQueue"
    type: "ObjCId"
  }
  ivar {
    name: "_idleObs"
    type: "ObjCId"
  }
}
class {
  name: "NSNull"
  base_class: "NSObject"
  protocol: "NSCopying"
  protocol: "NSCoding"
  method {
    function {
      name: "null"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
}
class {
  name: "NSNumberFormatter"
  base_class: "NSFormatter"
  method {
    function {
      name: "getObjectValue:forString:range:error:"
      return_type: "SChar"
      parameter {
        name: "obj"
        type: "Pointer"
      }
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "rangep"
        type: "Pointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "stringFromNumber:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "number"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "numberFromString:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "localizedStringFromNumber:numberStyle:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "num"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "nstyle"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "numberStyle"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "setNumberStyle:"
      return_type: "Void"
      parameter {
        name: "style"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "locale"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setLocale:"
      return_type: "Void"
      parameter {
        name: "locale"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "generatesDecimalNumbers"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "setGeneratesDecimalNumbers:"
      return_type: "Void"
      parameter {
        name: "b"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "formatterBehavior"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "setFormatterBehavior:"
      return_type: "Void"
      parameter {
        name: "behavior"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "defaultFormatterBehavior"
      return_type: "ULong"
    }
    class_method: true
  }
  method {
    function {
      name: "setDefaultFormatterBehavior:"
      return_type: "Void"
      parameter {
        name: "behavior"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "negativeFormat"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setNegativeFormat:"
      return_type: "Void"
      parameter {
        name: "format"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "textAttributesForNegativeValues"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setTextAttributesForNegativeValues:"
      return_type: "Void"
      parameter {
        name: "newAttributes"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "positiveFormat"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setPositiveFormat:"
      return_type: "Void"
      parameter {
        name: "format"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "textAttributesForPositiveValues"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setTextAttributesForPositiveValues:"
      return_type: "Void"
      parameter {
        name: "newAttributes"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "allowsFloats"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "setAllowsFloats:"
      return_type: "Void"
      parameter {
        name: "flag"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decimalSeparator"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setDecimalSeparator:"
      return_type: "Void"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "alwaysShowsDecimalSeparator"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "setAlwaysShowsDecimalSeparator:"
      return_type: "Void"
      parameter {
        name: "b"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "currencyDecimalSeparator"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setCurrencyDecimalSeparator:"
      return_type: "Void"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "usesGroupingSeparator"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "setUsesGroupingSeparator:"
      return_type: "Void"
      parameter {
        name: "b"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "groupingSeparator"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setGroupingSeparator:"
      return_type: "Void"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "zeroSymbol"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setZeroSymbol:"
      return_type: "Void"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "textAttributesForZero"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setTextAttributesForZero:"
      return_type: "Void"
      parameter {
        name: "newAttributes"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "nilSymbol"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setNilSymbol:"
      return_type: "Void"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "textAttributesForNil"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setTextAttributesForNil:"
      return_type: "Void"
      parameter {
        name: "newAttributes"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "notANumberSymbol"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setNotANumberSymbol:"
      return_type: "Void"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "textAttributesForNotANumber"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setTextAttributesForNotANumber:"
      return_type: "Void"
      parameter {
        name: "newAttributes"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "positiveInfinitySymbol"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setPositiveInfinitySymbol:"
      return_type: "Void"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "textAttributesForPositiveInfinity"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setTextAttributesForPositiveInfinity:"
      return_type: "Void"
      parameter {
        name: "newAttributes"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "negativeInfinitySymbol"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setNegativeInfinitySymbol:"
      return_type: "Void"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "textAttributesForNegativeInfinity"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setTextAttributesForNegativeInfinity:"
      return_type: "Void"
      parameter {
        name: "newAttributes"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "positivePrefix"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setPositivePrefix:"
      return_type: "Void"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "positiveSuffix"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setPositiveSuffix:"
      return_type: "Void"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "negativePrefix"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setNegativePrefix:"
      return_type: "Void"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "negativeSuffix"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setNegativeSuffix:"
      return_type: "Void"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "currencyCode"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setCurrencyCode:"
      return_type: "Void"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "currencySymbol"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setCurrencySymbol:"
      return_type: "Void"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "internationalCurrencySymbol"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setInternationalCurrencySymbol:"
      return_type: "Void"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "percentSymbol"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setPercentSymbol:"
      return_type: "Void"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "perMillSymbol"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setPerMillSymbol:"
      return_type: "Void"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "minusSign"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setMinusSign:"
      return_type: "Void"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "plusSign"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setPlusSign:"
      return_type: "Void"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "exponentSymbol"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setExponentSymbol:"
      return_type: "Void"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "groupingSize"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "setGroupingSize:"
      return_type: "Void"
      parameter {
        name: "number"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "secondaryGroupingSize"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "setSecondaryGroupingSize:"
      return_type: "Void"
      parameter {
        name: "number"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "multiplier"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setMultiplier:"
      return_type: "Void"
      parameter {
        name: "number"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "formatWidth"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "setFormatWidth:"
      return_type: "Void"
      parameter {
        name: "number"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "paddingCharacter"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setPaddingCharacter:"
      return_type: "Void"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "paddingPosition"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "setPaddingPosition:"
      return_type: "Void"
      parameter {
        name: "position"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "roundingMode"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "setRoundingMode:"
      return_type: "Void"
      parameter {
        name: "mode"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "roundingIncrement"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setRoundingIncrement:"
      return_type: "Void"
      parameter {
        name: "number"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "minimumIntegerDigits"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "setMinimumIntegerDigits:"
      return_type: "Void"
      parameter {
        name: "number"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "maximumIntegerDigits"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "setMaximumIntegerDigits:"
      return_type: "Void"
      parameter {
        name: "number"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "minimumFractionDigits"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "setMinimumFractionDigits:"
      return_type: "Void"
      parameter {
        name: "number"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "maximumFractionDigits"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "setMaximumFractionDigits:"
      return_type: "Void"
      parameter {
        name: "number"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "minimum"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setMinimum:"
      return_type: "Void"
      parameter {
        name: "number"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "maximum"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setMaximum:"
      return_type: "Void"
      parameter {
        name: "number"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "currencyGroupingSeparator"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setCurrencyGroupingSeparator:"
      return_type: "Void"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isLenient"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "setLenient:"
      return_type: "Void"
      parameter {
        name: "b"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "usesSignificantDigits"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "setUsesSignificantDigits:"
      return_type: "Void"
      parameter {
        name: "b"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "minimumSignificantDigits"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "setMinimumSignificantDigits:"
      return_type: "Void"
      parameter {
        name: "number"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "maximumSignificantDigits"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "setMaximumSignificantDigits:"
      return_type: "Void"
      parameter {
        name: "number"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isPartialStringValidationEnabled"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "setPartialStringValidationEnabled:"
      return_type: "Void"
      parameter {
        name: "b"
        type: "SChar"
      }
    }
    class_method: false
  }
  ivar {
    name: "_attributes"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_formatter"
    type: "Pointer"
  }
  ivar {
    name: "_counter"
    type: "ULong"
  }
  ivar {
    name: "_reserved"
    type: "ConstantArray"
  }
}
class {
  name: "NSOperation"
  base_class: "NSObject"
  method {
    function {
      name: "init"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "start"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "main"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "isCancelled"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "cancel"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "isExecuting"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "isFinished"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "isConcurrent"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "isReady"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "addDependency:"
      return_type: "Void"
      parameter {
        name: "op"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeDependency:"
      return_type: "Void"
      parameter {
        name: "op"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "dependencies"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "queuePriority"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "setQueuePriority:"
      return_type: "Void"
      parameter {
        name: "p"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "completionBlock"
      return_type: "BlockPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setCompletionBlock:"
      return_type: "Void"
      parameter {
        name: "block"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "waitUntilFinished"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "threadPriority"
      return_type: "Double"
    }
    class_method: false
  }
  method {
    function {
      name: "setThreadPriority:"
      return_type: "Void"
      parameter {
        name: "p"
        type: "Double"
      }
    }
    class_method: false
  }
  ivar {
    name: "_private"
    type: "ObjCId"
  }
  ivar {
    name: "_private1"
    type: "Int"
  }
  ivar {
    name: "_private1b"
    type: "Int"
  }
}
class {
  name: "NSBlockOperation"
  base_class: "NSOperation"
  method {
    function {
      name: "blockOperationWithBlock:"
      return_type: "ObjCId"
      parameter {
        name: "block"
        type: "BlockPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "addExecutionBlock:"
      return_type: "Void"
      parameter {
        name: "block"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "executionBlocks"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  ivar {
    name: "_private2"
    type: "ObjCId"
  }
  ivar {
    name: "_reserved2"
    type: "Pointer"
  }
}
class {
  name: "NSInvocationOperation"
  base_class: "NSOperation"
  method {
    function {
      name: "initWithTarget:selector:object:"
      return_type: "ObjCId"
      parameter {
        name: "target"
        type: "ObjCId"
      }
      parameter {
        name: "sel"
        type: "ObjCSel"
      }
      parameter {
        name: "arg"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithInvocation:"
      return_type: "ObjCId"
      parameter {
        name: "inv"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "invocation"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "result"
      return_type: "ObjCId"
    }
    class_method: false
  }
  ivar {
    name: "_inv"
    type: "ObjCId"
  }
  ivar {
    name: "_exception"
    type: "ObjCId"
  }
  ivar {
    name: "_reserved2"
    type: "Pointer"
  }
}
class {
  name: "NSOperationQueue"
  base_class: "NSObject"
  method {
    function {
      name: "addOperation:"
      return_type: "Void"
      parameter {
        name: "op"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "addOperations:waitUntilFinished:"
      return_type: "Void"
      parameter {
        name: "ops"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "wait"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "addOperationWithBlock:"
      return_type: "Void"
      parameter {
        name: "block"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "operations"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "operationCount"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "maxConcurrentOperationCount"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "setMaxConcurrentOperationCount:"
      return_type: "Void"
      parameter {
        name: "cnt"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setSuspended:"
      return_type: "Void"
      parameter {
        name: "b"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isSuspended"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "setName:"
      return_type: "Void"
      parameter {
        name: "n"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "name"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "cancelAllOperations"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "waitUntilAllOperationsAreFinished"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "currentQueue"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "mainQueue"
      return_type: "ObjCId"
    }
    class_method: true
  }
  ivar {
    name: "_private"
    type: "ObjCId"
  }
  ivar {
    name: "_reserved"
    type: "Pointer"
  }
}
class {
  name: "NSOrthography"
  base_class: "NSObject"
  protocol: "NSCopying"
  protocol: "NSCoding"
  method {
    function {
      name: "dominantScript"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "languageMap"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  property {
    name: "dominantScript"
    type: "ObjCObjectPointer"
  }
  property {
    name: "languageMap"
    type: "ObjCObjectPointer"
  }
}
class {
  name: "NSPort"
  base_class: "NSObject"
  protocol: "NSCopying"
  protocol: "NSCoding"
  method {
    function {
      name: "port"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "invalidate"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "isValid"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "setDelegate:"
      return_type: "Void"
      parameter {
        name: "anObject"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "delegate"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "scheduleInRunLoop:forMode:"
      return_type: "Void"
      parameter {
        name: "runLoop"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mode"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeFromRunLoop:forMode:"
      return_type: "Void"
      parameter {
        name: "runLoop"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mode"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "reservedSpaceLength"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "sendBeforeDate:components:from:reserved:"
      return_type: "SChar"
      parameter {
        name: "limitDate"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "components"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "receivePort"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "headerSpaceReserved"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "sendBeforeDate:msgid:components:from:reserved:"
      return_type: "SChar"
      parameter {
        name: "limitDate"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "msgID"
        type: "ULong"
      }
      parameter {
        name: "components"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "receivePort"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "headerSpaceReserved"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "addConnection:toRunLoop:forMode:"
      return_type: "Void"
      parameter {
        name: "conn"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "runLoop"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mode"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeConnection:fromRunLoop:forMode:"
      return_type: "Void"
      parameter {
        name: "conn"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "runLoop"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mode"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
class {
  name: "NSMachPort"
  base_class: "NSPort"
  method {
    function {
      name: "portWithMachPort:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "machPort"
        type: "UInt"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithMachPort:"
      return_type: "ObjCId"
      parameter {
        name: "machPort"
        type: "UInt"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setDelegate:"
      return_type: "Void"
      parameter {
        name: "anObject"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "delegate"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "portWithMachPort:options:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "machPort"
        type: "UInt"
      }
      parameter {
        name: "f"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithMachPort:options:"
      return_type: "ObjCId"
      parameter {
        name: "machPort"
        type: "UInt"
      }
      parameter {
        name: "f"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "machPort"
      return_type: "UInt"
    }
    class_method: false
  }
  method {
    function {
      name: "scheduleInRunLoop:forMode:"
      return_type: "Void"
      parameter {
        name: "runLoop"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mode"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeFromRunLoop:forMode:"
      return_type: "Void"
      parameter {
        name: "runLoop"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mode"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  ivar {
    name: "_delegate"
    type: "ObjCId"
  }
  ivar {
    name: "_flags"
    type: "ULong"
  }
  ivar {
    name: "_machPort"
    type: "UInt"
  }
  ivar {
    name: "_reserved"
    type: "ULong"
  }
}
class {
  name: "NSMessagePort"
  base_class: "NSPort"
  ivar {
    name: "_port"
    type: "Pointer"
  }
  ivar {
    name: "_delegate"
    type: "ObjCId"
  }
}
class {
  name: "NSSocketPort"
  base_class: "NSPort"
  method {
    function {
      name: "init"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "initWithTCPPort:"
      return_type: "ObjCId"
      parameter {
        name: "port"
        type: "UShort"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithProtocolFamily:socketType:protocol:address:"
      return_type: "ObjCId"
      parameter {
        name: "family"
        type: "Int"
      }
      parameter {
        name: "type"
        type: "Int"
      }
      parameter {
        name: "protocol"
        type: "Int"
      }
      parameter {
        name: "address"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithProtocolFamily:socketType:protocol:socket:"
      return_type: "ObjCId"
      parameter {
        name: "family"
        type: "Int"
      }
      parameter {
        name: "type"
        type: "Int"
      }
      parameter {
        name: "protocol"
        type: "Int"
      }
      parameter {
        name: "sock"
        type: "Int"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initRemoteWithTCPPort:host:"
      return_type: "ObjCId"
      parameter {
        name: "port"
        type: "UShort"
      }
      parameter {
        name: "hostName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initRemoteWithProtocolFamily:socketType:protocol:address:"
      return_type: "ObjCId"
      parameter {
        name: "family"
        type: "Int"
      }
      parameter {
        name: "type"
        type: "Int"
      }
      parameter {
        name: "protocol"
        type: "Int"
      }
      parameter {
        name: "address"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "protocolFamily"
      return_type: "Int"
    }
    class_method: false
  }
  method {
    function {
      name: "socketType"
      return_type: "Int"
    }
    class_method: false
  }
  method {
    function {
      name: "protocol"
      return_type: "Int"
    }
    class_method: false
  }
  method {
    function {
      name: "address"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "socket"
      return_type: "Int"
    }
    class_method: false
  }
  ivar {
    name: "_receiver"
    type: "Pointer"
  }
  ivar {
    name: "_connectors"
    type: "ObjCId"
  }
  ivar {
    name: "_loops"
    type: "Pointer"
  }
  ivar {
    name: "_data"
    type: "Pointer"
  }
  ivar {
    name: "_signature"
    type: "ObjCId"
  }
  ivar {
    name: "_delegate"
    type: "ObjCId"
  }
  ivar {
    name: "_lock"
    type: "ObjCId"
  }
  ivar {
    name: "_maxSize"
    type: "ULong"
  }
  ivar {
    name: "_useCount"
    type: "ULong"
  }
  ivar {
    name: "_reserved"
    type: "ULong"
  }
}
class {
  name: "NSProcessInfo"
  base_class: "NSObject"
  method {
    function {
      name: "processInfo"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "environment"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "arguments"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "hostName"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "processName"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "processIdentifier"
      return_type: "Int"
    }
    class_method: false
  }
  method {
    function {
      name: "setProcessName:"
      return_type: "Void"
      parameter {
        name: "newName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "globallyUniqueString"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "operatingSystem"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "operatingSystemName"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "operatingSystemVersionString"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "processorCount"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "activeProcessorCount"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "physicalMemory"
      return_type: "ULongLong"
    }
    class_method: false
  }
  method {
    function {
      name: "systemUptime"
      return_type: "Double"
    }
    class_method: false
  }
  method {
    function {
      name: "disableSuddenTermination"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "enableSuddenTermination"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "disableAutomaticTermination:"
      return_type: "Void"
      parameter {
        name: "reason"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "enableAutomaticTermination:"
      return_type: "Void"
      parameter {
        name: "reason"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setAutomaticTerminationSupportEnabled:"
      return_type: "Void"
      parameter {
        name: "flag"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "automaticTerminationSupportEnabled"
      return_type: "SChar"
    }
    class_method: false
  }
  ivar {
    name: "environment"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "arguments"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "hostName"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "name"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "automaticTerminationOptOutCounter"
    type: "Long"
  }
}
class {
  name: "NSProxy"
  protocol: "NSObject"
  method {
    function {
      name: "alloc"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "allocWithZone:"
      return_type: "ObjCId"
      parameter {
        name: "zone"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "class"
      return_type: "ObjCClass"
    }
    class_method: true
  }
  method {
    function {
      name: "forwardInvocation:"
      return_type: "Void"
      parameter {
        name: "invocation"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "methodSignatureForSelector:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "sel"
        type: "ObjCSel"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "dealloc"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "finalize"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "description"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "respondsToSelector:"
      return_type: "SChar"
      parameter {
        name: "aSelector"
        type: "ObjCSel"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "allowsWeakReference"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "retainWeakReference"
      return_type: "SChar"
    }
    class_method: false
  }
  ivar {
    name: "isa"
    type: "ObjCClass"
  }
}
class {
  name: "NSTextCheckingResult"
  base_class: "NSObject"
  protocol: "NSCopying"
  protocol: "NSCoding"
  method {
    function {
      name: "resultType"
      return_type: "ULongLong"
    }
    class_method: false
  }
  method {
    function {
      name: "range"
      return_type: "Unexposed"
    }
    class_method: false
  }
  property {
    name: "resultType"
    type: "ULongLong"
  }
  property {
    name: "range"
    type: "Unexposed"
  }
}
class {
  name: "NSRegularExpression"
  base_class: "NSObject"
  protocol: "NSCopying"
  protocol: "NSCoding"
  method {
    function {
      name: "regularExpressionWithPattern:options:error:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "pattern"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithPattern:options:error:"
      return_type: "ObjCId"
      parameter {
        name: "pattern"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "pattern"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "options"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "numberOfCaptureGroups"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "escapedPatternForString:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  property {
    name: "pattern"
    type: "ObjCObjectPointer"
  }
  property {
    name: "options"
    type: "ULong"
  }
  property {
    name: "numberOfCaptureGroups"
    type: "ULong"
  }
  ivar {
    name: "_pattern"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_options"
    type: "ULong"
  }
  ivar {
    name: "_internal"
    type: "Pointer"
  }
  ivar {
    name: "_reserved1"
    type: "ObjCId"
  }
  ivar {
    name: "_checkout"
    type: "Int"
  }
  ivar {
    name: "_reserved2"
    type: "Int"
  }
}
class {
  name: "NSDataDetector"
  base_class: "NSRegularExpression"
  method {
    function {
      name: "dataDetectorWithTypes:error:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "checkingTypes"
        type: "ULongLong"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithTypes:error:"
      return_type: "ObjCId"
      parameter {
        name: "checkingTypes"
        type: "ULongLong"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "checkingTypes"
      return_type: "ULongLong"
    }
    class_method: false
  }
  property {
    name: "checkingTypes"
    type: "ULongLong"
  }
  ivar {
    name: "_types"
    type: "ULongLong"
  }
}
class {
  name: "NSRunLoop"
  base_class: "NSObject"
  method {
    function {
      name: "currentRunLoop"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "mainRunLoop"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "currentMode"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "getCFRunLoop"
      return_type: "Pointer"
    }
    class_method: false
  }
  method {
    function {
      name: "addTimer:forMode:"
      return_type: "Void"
      parameter {
        name: "timer"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mode"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "addPort:forMode:"
      return_type: "Void"
      parameter {
        name: "aPort"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mode"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removePort:forMode:"
      return_type: "Void"
      parameter {
        name: "aPort"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mode"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "limitDateForMode:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "mode"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "acceptInputForMode:beforeDate:"
      return_type: "Void"
      parameter {
        name: "mode"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "limitDate"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  ivar {
    name: "_rl"
    type: "ObjCId"
  }
  ivar {
    name: "_dperf"
    type: "ObjCId"
  }
  ivar {
    name: "_perft"
    type: "ObjCId"
  }
  ivar {
    name: "_info"
    type: "ObjCId"
  }
  ivar {
    name: "_ports"
    type: "ObjCId"
  }
  ivar {
    name: "_reserved"
    type: "ConstantArray"
  }
}
class {
  name: "NSSortDescriptor"
  base_class: "NSObject"
  protocol: "NSCoding"
  protocol: "NSCopying"
  method {
    function {
      name: "sortDescriptorWithKey:ascending:"
      return_type: "ObjCId"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "ascending"
        type: "SChar"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "sortDescriptorWithKey:ascending:selector:"
      return_type: "ObjCId"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "ascending"
        type: "SChar"
      }
      parameter {
        name: "selector"
        type: "ObjCSel"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithKey:ascending:"
      return_type: "ObjCId"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "ascending"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithKey:ascending:selector:"
      return_type: "ObjCId"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "ascending"
        type: "SChar"
      }
      parameter {
        name: "selector"
        type: "ObjCSel"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "key"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "ascending"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "selector"
      return_type: "ObjCSel"
    }
    class_method: false
  }
  method {
    function {
      name: "sortDescriptorWithKey:ascending:comparator:"
      return_type: "ObjCId"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "ascending"
        type: "SChar"
      }
      parameter {
        name: "cmptr"
        type: "BlockPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithKey:ascending:comparator:"
      return_type: "ObjCId"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "ascending"
        type: "SChar"
      }
      parameter {
        name: "cmptr"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "comparator"
      return_type: "BlockPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "compareObject:toObject:"
      return_type: "Long"
      parameter {
        name: "object1"
        type: "ObjCId"
      }
      parameter {
        name: "object2"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "reversedSortDescriptor"
      return_type: "ObjCId"
    }
    class_method: false
  }
  ivar {
    name: "_sortDescriptorFlags"
    type: "ULong"
  }
  ivar {
    name: "_key"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_selector"
    type: "ObjCSel"
  }
  ivar {
    name: "_selectorOrBlock"
    type: "ObjCId"
  }
}
class {
  name: "NSStream"
  base_class: "NSObject"
  method {
    function {
      name: "open"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "close"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "delegate"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setDelegate:"
      return_type: "Void"
      parameter {
        name: "delegate"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "propertyForKey:"
      return_type: "ObjCId"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setProperty:forKey:"
      return_type: "SChar"
      parameter {
        name: "property"
        type: "ObjCId"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "scheduleInRunLoop:forMode:"
      return_type: "Void"
      parameter {
        name: "aRunLoop"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mode"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeFromRunLoop:forMode:"
      return_type: "Void"
      parameter {
        name: "aRunLoop"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mode"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "streamStatus"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "streamError"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
}
class {
  name: "NSInputStream"
  base_class: "NSStream"
  method {
    function {
      name: "read:maxLength:"
      return_type: "Long"
      parameter {
        name: "buffer"
        type: "Pointer"
      }
      parameter {
        name: "len"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "getBuffer:length:"
      return_type: "SChar"
      parameter {
        name: "buffer"
        type: "Pointer"
      }
      parameter {
        name: "len"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "hasBytesAvailable"
      return_type: "SChar"
    }
    class_method: false
  }
}
class {
  name: "NSOutputStream"
  base_class: "NSStream"
  method {
    function {
      name: "write:maxLength:"
      return_type: "Long"
      parameter {
        name: "buffer"
        type: "Pointer"
      }
      parameter {
        name: "len"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "hasSpaceAvailable"
      return_type: "SChar"
    }
    class_method: false
  }
}
class {
  name: "NSThread"
  base_class: "NSObject"
  method {
    function {
      name: "currentThread"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "detachNewThreadSelector:toTarget:withObject:"
      return_type: "Void"
      parameter {
        name: "selector"
        type: "ObjCSel"
      }
      parameter {
        name: "target"
        type: "ObjCId"
      }
      parameter {
        name: "argument"
        type: "ObjCId"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "isMultiThreaded"
      return_type: "SChar"
    }
    class_method: true
  }
  method {
    function {
      name: "threadDictionary"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "sleepUntilDate:"
      return_type: "Void"
      parameter {
        name: "date"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "sleepForTimeInterval:"
      return_type: "Void"
      parameter {
        name: "ti"
        type: "Double"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "exit"
      return_type: "Void"
    }
    class_method: true
  }
  method {
    function {
      name: "threadPriority"
      return_type: "Double"
    }
    class_method: true
  }
  method {
    function {
      name: "setThreadPriority:"
      return_type: "SChar"
      parameter {
        name: "p"
        type: "Double"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "threadPriority"
      return_type: "Double"
    }
    class_method: false
  }
  method {
    function {
      name: "setThreadPriority:"
      return_type: "Void"
      parameter {
        name: "p"
        type: "Double"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "callStackReturnAddresses"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "callStackSymbols"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "setName:"
      return_type: "Void"
      parameter {
        name: "n"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "name"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "stackSize"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "setStackSize:"
      return_type: "Void"
      parameter {
        name: "s"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isMainThread"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "isMainThread"
      return_type: "SChar"
    }
    class_method: true
  }
  method {
    function {
      name: "mainThread"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "init"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "initWithTarget:selector:object:"
      return_type: "ObjCId"
      parameter {
        name: "target"
        type: "ObjCId"
      }
      parameter {
        name: "selector"
        type: "ObjCSel"
      }
      parameter {
        name: "argument"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isExecuting"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "isFinished"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "isCancelled"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "cancel"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "start"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "main"
      return_type: "Void"
    }
    class_method: false
  }
  ivar {
    name: "_private"
    type: "ObjCId"
  }
  ivar {
    name: "_bytes"
    type: "ConstantArray"
  }
}
class {
  name: "NSTimeZone"
  base_class: "NSObject"
  protocol: "NSCopying"
  protocol: "NSCoding"
  method {
    function {
      name: "name"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "data"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "secondsFromGMTForDate:"
      return_type: "Long"
      parameter {
        name: "aDate"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "abbreviationForDate:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "aDate"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isDaylightSavingTimeForDate:"
      return_type: "SChar"
      parameter {
        name: "aDate"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "daylightSavingTimeOffsetForDate:"
      return_type: "Double"
      parameter {
        name: "aDate"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "nextDaylightSavingTimeTransitionAfterDate:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "aDate"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
class {
  name: "NSTimer"
  base_class: "NSObject"
  method {
    function {
      name: "timerWithTimeInterval:invocation:repeats:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "ti"
        type: "Double"
      }
      parameter {
        name: "invocation"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "yesOrNo"
        type: "SChar"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "scheduledTimerWithTimeInterval:invocation:repeats:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "ti"
        type: "Double"
      }
      parameter {
        name: "invocation"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "yesOrNo"
        type: "SChar"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "timerWithTimeInterval:target:selector:userInfo:repeats:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "ti"
        type: "Double"
      }
      parameter {
        name: "aTarget"
        type: "ObjCId"
      }
      parameter {
        name: "aSelector"
        type: "ObjCSel"
      }
      parameter {
        name: "userInfo"
        type: "ObjCId"
      }
      parameter {
        name: "yesOrNo"
        type: "SChar"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "ti"
        type: "Double"
      }
      parameter {
        name: "aTarget"
        type: "ObjCId"
      }
      parameter {
        name: "aSelector"
        type: "ObjCSel"
      }
      parameter {
        name: "userInfo"
        type: "ObjCId"
      }
      parameter {
        name: "yesOrNo"
        type: "SChar"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithFireDate:interval:target:selector:userInfo:repeats:"
      return_type: "ObjCId"
      parameter {
        name: "date"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "ti"
        type: "Double"
      }
      parameter {
        name: "t"
        type: "ObjCId"
      }
      parameter {
        name: "s"
        type: "ObjCSel"
      }
      parameter {
        name: "ui"
        type: "ObjCId"
      }
      parameter {
        name: "rep"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "fire"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "fireDate"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setFireDate:"
      return_type: "Void"
      parameter {
        name: "date"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "timeInterval"
      return_type: "Double"
    }
    class_method: false
  }
  method {
    function {
      name: "invalidate"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "isValid"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "userInfo"
      return_type: "ObjCId"
    }
    class_method: false
  }
}
class {
  name: "NSURLHandle"
  base_class: "NSObject"
  method {
    function {
      name: "registerURLHandleClass:"
      return_type: "Void"
      parameter {
        name: "anURLHandleSubclass"
        type: "ObjCClass"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "URLHandleClassForURL:"
      return_type: "ObjCClass"
      parameter {
        name: "anURL"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "status"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "failureReason"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "addClient:"
      return_type: "Void"
      parameter {
        name: "client"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeClient:"
      return_type: "Void"
      parameter {
        name: "client"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "loadInBackground"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "cancelLoadInBackground"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "resourceData"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "availableResourceData"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "expectedResourceDataSize"
      return_type: "LongLong"
    }
    class_method: false
  }
  method {
    function {
      name: "flushCachedData"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "backgroundLoadDidFailWithReason:"
      return_type: "Void"
      parameter {
        name: "reason"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "didLoadBytes:loadComplete:"
      return_type: "Void"
      parameter {
        name: "newBytes"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "yorn"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "canInitWithURL:"
      return_type: "SChar"
      parameter {
        name: "anURL"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "cachedHandleForURL:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "anURL"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithURL:cached:"
      return_type: "ObjCId"
      parameter {
        name: "anURL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "willCache"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "propertyForKey:"
      return_type: "ObjCId"
      parameter {
        name: "propertyKey"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "propertyForKeyIfAvailable:"
      return_type: "ObjCId"
      parameter {
        name: "propertyKey"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "writeProperty:forKey:"
      return_type: "SChar"
      parameter {
        name: "propertyValue"
        type: "ObjCId"
      }
      parameter {
        name: "propertyKey"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "writeData:"
      return_type: "SChar"
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "loadInForeground"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "beginLoadInBackground"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "endLoadInBackground"
      return_type: "Void"
    }
    class_method: false
  }
  ivar {
    name: "_clients"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_data"
    type: "ObjCId"
  }
  ivar {
    name: "_status"
    type: "ULong"
  }
  ivar {
    name: "_reserved"
    type: "Long"
  }
}
class {
  name: "NSURL"
  base_class: "NSObject"
  protocol: "NSCoding"
  protocol: "NSCopying"
  protocol: "NSURLHandleClient"
  method {
    function {
      name: "initWithScheme:host:path:"
      return_type: "ObjCId"
      parameter {
        name: "scheme"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "host"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initFileURLWithPath:isDirectory:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "isDir"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initFileURLWithPath:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "fileURLWithPath:isDirectory:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "isDir"
        type: "SChar"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "fileURLWithPath:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithString:"
      return_type: "ObjCId"
      parameter {
        name: "URLString"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithString:relativeToURL:"
      return_type: "ObjCId"
      parameter {
        name: "URLString"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "baseURL"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "URLWithString:"
      return_type: "ObjCId"
      parameter {
        name: "URLString"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "URLWithString:relativeToURL:"
      return_type: "ObjCId"
      parameter {
        name: "URLString"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "baseURL"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "absoluteString"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "relativeString"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "baseURL"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "absoluteURL"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "scheme"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "resourceSpecifier"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "host"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "port"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "user"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "password"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "path"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "fragment"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "parameterString"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "query"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "relativePath"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "isFileURL"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "standardizedURL"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "getResourceValue:forKey:error:"
      return_type: "SChar"
      parameter {
        name: "value"
        type: "Pointer"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "resourceValuesForKeys:error:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "keys"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setResourceValue:forKey:error:"
      return_type: "SChar"
      parameter {
        name: "value"
        type: "ObjCId"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setResourceValues:error:"
      return_type: "SChar"
      parameter {
        name: "keyedValues"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "checkResourceIsReachableAndReturnError:"
      return_type: "SChar"
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isFileReferenceURL"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "fileReferenceURL"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "filePathURL"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "bookmarkDataWithOptions:includingResourceValuesForKeys:relativeToURL:error:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "options"
        type: "ULong"
      }
      parameter {
        name: "keys"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "relativeURL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:"
      return_type: "ObjCId"
      parameter {
        name: "bookmarkData"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
      parameter {
        name: "relativeURL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "isStale"
        type: "Pointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "URLByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:"
      return_type: "ObjCId"
      parameter {
        name: "bookmarkData"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
      parameter {
        name: "relativeURL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "isStale"
        type: "Pointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "resourceValuesForKeys:fromBookmarkData:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "keys"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "bookmarkData"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "writeBookmarkData:toURL:options:error:"
      return_type: "SChar"
      parameter {
        name: "bookmarkData"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "bookmarkFileURL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "bookmarkDataWithContentsOfURL:error:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "bookmarkFileURL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "startAccessingSecurityScopedResource"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "stopAccessingSecurityScopedResource"
      return_type: "Void"
    }
    class_method: false
  }
  ivar {
    name: "_urlString"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_baseURL"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_clients"
    type: "Pointer"
  }
  ivar {
    name: "_reserved"
    type: "Pointer"
  }
}
class {
  name: "NSFileSecurity"
  base_class: "NSObject"
  protocol: "NSCopying"
  protocol: "NSCoding"
}
class {
  name: "NSURLAuthenticationChallenge"
  base_class: "NSObject"
  method {
    function {
      name: "initWithProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:"
      return_type: "ObjCId"
      parameter {
        name: "space"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "credential"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "previousFailureCount"
        type: "Long"
      }
      parameter {
        name: "response"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "sender"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithAuthenticationChallenge:sender:"
      return_type: "ObjCId"
      parameter {
        name: "challenge"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "sender"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "protectionSpace"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "proposedCredential"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "previousFailureCount"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "failureResponse"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "error"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "sender"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  ivar {
    name: "_internal"
    type: "ObjCObjectPointer"
  }
}
class {
  name: "NSCachedURLResponse"
  base_class: "NSObject"
  protocol: "NSCoding"
  protocol: "NSCopying"
  method {
    function {
      name: "initWithResponse:data:"
      return_type: "ObjCId"
      parameter {
        name: "response"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithResponse:data:userInfo:storagePolicy:"
      return_type: "ObjCId"
      parameter {
        name: "response"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "userInfo"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "storagePolicy"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "response"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "data"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "userInfo"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "storagePolicy"
      return_type: "ULong"
    }
    class_method: false
  }
  ivar {
    name: "_internal"
    type: "ObjCObjectPointer"
  }
}
class {
  name: "NSURLCache"
  base_class: "NSObject"
  method {
    function {
      name: "sharedURLCache"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "setSharedURLCache:"
      return_type: "Void"
      parameter {
        name: "cache"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithMemoryCapacity:diskCapacity:diskPath:"
      return_type: "ObjCId"
      parameter {
        name: "memoryCapacity"
        type: "ULong"
      }
      parameter {
        name: "diskCapacity"
        type: "ULong"
      }
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "cachedResponseForRequest:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "request"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "storeCachedResponse:forRequest:"
      return_type: "Void"
      parameter {
        name: "cachedResponse"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "request"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeCachedResponseForRequest:"
      return_type: "Void"
      parameter {
        name: "request"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeAllCachedResponses"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "memoryCapacity"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "diskCapacity"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "setMemoryCapacity:"
      return_type: "Void"
      parameter {
        name: "memoryCapacity"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setDiskCapacity:"
      return_type: "Void"
      parameter {
        name: "diskCapacity"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "currentMemoryUsage"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "currentDiskUsage"
      return_type: "ULong"
    }
    class_method: false
  }
  ivar {
    name: "_internal"
    type: "ObjCObjectPointer"
  }
}
class {
  name: "NSURLConnection"
  base_class: "NSObject"
  method {
    function {
      name: "canHandleRequest:"
      return_type: "SChar"
      parameter {
        name: "request"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "connectionWithRequest:delegate:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "request"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "delegate"
        type: "ObjCId"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithRequest:delegate:"
      return_type: "ObjCId"
      parameter {
        name: "request"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "delegate"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithRequest:delegate:startImmediately:"
      return_type: "ObjCId"
      parameter {
        name: "request"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "delegate"
        type: "ObjCId"
      }
      parameter {
        name: "startImmediately"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "start"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "cancel"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "scheduleInRunLoop:forMode:"
      return_type: "Void"
      parameter {
        name: "aRunLoop"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mode"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "unscheduleFromRunLoop:forMode:"
      return_type: "Void"
      parameter {
        name: "aRunLoop"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mode"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setDelegateQueue:"
      return_type: "Void"
      parameter {
        name: "queue"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  ivar {
    name: "_internal"
    type: "ObjCObjectPointer"
  }
}
class {
  name: "NSURLCredential"
  base_class: "NSObject"
  protocol: "NSCopying"
  method {
    function {
      name: "persistence"
      return_type: "ULong"
    }
    class_method: false
  }
  ivar {
    name: "_internal"
    type: "ObjCObjectPointer"
  }
}
class {
  name: "NSURLCredentialStorage"
  base_class: "NSObject"
  method {
    function {
      name: "sharedCredentialStorage"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "credentialsForProtectionSpace:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "space"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "allCredentials"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setCredential:forProtectionSpace:"
      return_type: "Void"
      parameter {
        name: "credential"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "space"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeCredential:forProtectionSpace:"
      return_type: "Void"
      parameter {
        name: "credential"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "space"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "defaultCredentialForProtectionSpace:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "space"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setDefaultCredential:forProtectionSpace:"
      return_type: "Void"
      parameter {
        name: "credential"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "space"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  ivar {
    name: "_internal"
    type: "ObjCObjectPointer"
  }
}
class {
  name: "NSURLProtectionSpace"
  base_class: "NSObject"
  protocol: "NSCopying"
  method {
    function {
      name: "initWithHost:port:protocol:realm:authenticationMethod:"
      return_type: "ObjCId"
      parameter {
        name: "host"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "port"
        type: "Long"
      }
      parameter {
        name: "protocol"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "realm"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "authenticationMethod"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithProxyHost:port:type:realm:authenticationMethod:"
      return_type: "ObjCId"
      parameter {
        name: "host"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "port"
        type: "Long"
      }
      parameter {
        name: "type"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "realm"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "authenticationMethod"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "realm"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "receivesCredentialSecurely"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "isProxy"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "host"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "port"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "proxyType"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "protocol"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "authenticationMethod"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  ivar {
    name: "_internal"
    type: "ObjCObjectPointer"
  }
}
class {
  name: "NSURLProtocol"
  base_class: "NSObject"
  method {
    function {
      name: "initWithRequest:cachedResponse:client:"
      return_type: "ObjCId"
      parameter {
        name: "request"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "cachedResponse"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "client"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "client"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "request"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "cachedResponse"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "canInitWithRequest:"
      return_type: "SChar"
      parameter {
        name: "request"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "canonicalRequestForRequest:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "request"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "requestIsCacheEquivalent:toRequest:"
      return_type: "SChar"
      parameter {
        name: "a"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "b"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "startLoading"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "stopLoading"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "propertyForKey:inRequest:"
      return_type: "ObjCId"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "request"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "setProperty:forKey:inRequest:"
      return_type: "Void"
      parameter {
        name: "value"
        type: "ObjCId"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "request"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "removePropertyForKey:inRequest:"
      return_type: "Void"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "request"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "registerClass:"
      return_type: "SChar"
      parameter {
        name: "protocolClass"
        type: "ObjCClass"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "unregisterClass:"
      return_type: "Void"
      parameter {
        name: "protocolClass"
        type: "ObjCClass"
      }
    }
    class_method: true
  }
  ivar {
    name: "_internal"
    type: "ObjCObjectPointer"
  }
}
class {
  name: "NSURLRequest"
  base_class: "NSObject"
  protocol: "NSCoding"
  protocol: "NSCopying"
  protocol: "NSMutableCopying"
  method {
    function {
      name: "requestWithURL:"
      return_type: "ObjCId"
      parameter {
        name: "URL"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "requestWithURL:cachePolicy:timeoutInterval:"
      return_type: "ObjCId"
      parameter {
        name: "URL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "cachePolicy"
        type: "ULong"
      }
      parameter {
        name: "timeoutInterval"
        type: "Double"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithURL:"
      return_type: "ObjCId"
      parameter {
        name: "URL"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithURL:cachePolicy:timeoutInterval:"
      return_type: "ObjCId"
      parameter {
        name: "URL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "cachePolicy"
        type: "ULong"
      }
      parameter {
        name: "timeoutInterval"
        type: "Double"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "URL"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "cachePolicy"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "timeoutInterval"
      return_type: "Double"
    }
    class_method: false
  }
  method {
    function {
      name: "mainDocumentURL"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "networkServiceType"
      return_type: "ULong"
    }
    class_method: false
  }
  ivar {
    name: "_internal"
    type: "ObjCObjectPointer"
  }
}
class {
  name: "NSMutableURLRequest"
  base_class: "NSURLRequest"
  method {
    function {
      name: "setURL:"
      return_type: "Void"
      parameter {
        name: "URL"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setCachePolicy:"
      return_type: "Void"
      parameter {
        name: "policy"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setTimeoutInterval:"
      return_type: "Void"
      parameter {
        name: "seconds"
        type: "Double"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setMainDocumentURL:"
      return_type: "Void"
      parameter {
        name: "URL"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setNetworkServiceType:"
      return_type: "Void"
      parameter {
        name: "networkServiceType"
        type: "ULong"
      }
    }
    class_method: false
  }
}
class {
  name: "NSURLResponse"
  base_class: "NSObject"
  protocol: "NSCoding"
  protocol: "NSCopying"
  method {
    function {
      name: "initWithURL:MIMEType:expectedContentLength:textEncodingName:"
      return_type: "ObjCId"
      parameter {
        name: "URL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "MIMEType"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "length"
        type: "Long"
      }
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "URL"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "MIMEType"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "expectedContentLength"
      return_type: "LongLong"
    }
    class_method: false
  }
  method {
    function {
      name: "textEncodingName"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "suggestedFilename"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  ivar {
    name: "_internal"
    type: "ObjCObjectPointer"
  }
}
class {
  name: "NSHTTPURLResponse"
  base_class: "NSURLResponse"
  method {
    function {
      name: "initWithURL:statusCode:HTTPVersion:headerFields:"
      return_type: "ObjCId"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "statusCode"
        type: "Long"
      }
      parameter {
        name: "HTTPVersion"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "headerFields"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "statusCode"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "allHeaderFields"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "localizedStringForStatusCode:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "statusCode"
        type: "Long"
      }
    }
    class_method: true
  }
  ivar {
    name: "_httpInternal"
    type: "ObjCObjectPointer"
  }
}
class {
  name: "NSUserDefaults"
  base_class: "NSObject"
  method {
    function {
      name: "standardUserDefaults"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "resetStandardUserDefaults"
      return_type: "Void"
    }
    class_method: true
  }
  method {
    function {
      name: "init"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "initWithUser:"
      return_type: "ObjCId"
      parameter {
        name: "username"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "objectForKey:"
      return_type: "ObjCId"
      parameter {
        name: "defaultName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setObject:forKey:"
      return_type: "Void"
      parameter {
        name: "value"
        type: "ObjCId"
      }
      parameter {
        name: "defaultName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeObjectForKey:"
      return_type: "Void"
      parameter {
        name: "defaultName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "stringForKey:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "defaultName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "arrayForKey:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "defaultName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "dictionaryForKey:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "defaultName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "dataForKey:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "defaultName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "stringArrayForKey:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "defaultName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "integerForKey:"
      return_type: "Long"
      parameter {
        name: "defaultName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "floatForKey:"
      return_type: "Float"
      parameter {
        name: "defaultName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "doubleForKey:"
      return_type: "Double"
      parameter {
        name: "defaultName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "boolForKey:"
      return_type: "SChar"
      parameter {
        name: "defaultName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "URLForKey:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "defaultName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setInteger:forKey:"
      return_type: "Void"
      parameter {
        name: "value"
        type: "Long"
      }
      parameter {
        name: "defaultName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setFloat:forKey:"
      return_type: "Void"
      parameter {
        name: "value"
        type: "Float"
      }
      parameter {
        name: "defaultName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setDouble:forKey:"
      return_type: "Void"
      parameter {
        name: "value"
        type: "Double"
      }
      parameter {
        name: "defaultName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setBool:forKey:"
      return_type: "Void"
      parameter {
        name: "value"
        type: "SChar"
      }
      parameter {
        name: "defaultName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setURL:forKey:"
      return_type: "Void"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "defaultName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "registerDefaults:"
      return_type: "Void"
      parameter {
        name: "registrationDictionary"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "addSuiteNamed:"
      return_type: "Void"
      parameter {
        name: "suiteName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeSuiteNamed:"
      return_type: "Void"
      parameter {
        name: "suiteName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "dictionaryRepresentation"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "volatileDomainNames"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "volatileDomainForName:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "domainName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setVolatileDomain:forName:"
      return_type: "Void"
      parameter {
        name: "domain"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "domainName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeVolatileDomainForName:"
      return_type: "Void"
      parameter {
        name: "domainName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "persistentDomainNames"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "persistentDomainForName:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "domainName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setPersistentDomain:forName:"
      return_type: "Void"
      parameter {
        name: "domain"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "domainName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removePersistentDomainForName:"
      return_type: "Void"
      parameter {
        name: "domainName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "synchronize"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "objectIsForcedForKey:"
      return_type: "SChar"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "objectIsForcedForKey:inDomain:"
      return_type: "SChar"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "domain"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  ivar {
    name: "_unused"
    type: "Long"
  }
  ivar {
    name: "_reserved"
    type: "ConstantArray"
  }
}
class {
  name: "NSValueTransformer"
  base_class: "NSObject"
  method {
    function {
      name: "setValueTransformer:forName:"
      return_type: "Void"
      parameter {
        name: "transformer"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "valueTransformerForName:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "valueTransformerNames"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "transformedValueClass"
      return_type: "ObjCClass"
    }
    class_method: true
  }
  method {
    function {
      name: "allowsReverseTransformation"
      return_type: "SChar"
    }
    class_method: true
  }
  method {
    function {
      name: "transformedValue:"
      return_type: "ObjCId"
      parameter {
        name: "value"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "reverseTransformedValue:"
      return_type: "ObjCId"
      parameter {
        name: "value"
        type: "ObjCId"
      }
    }
    class_method: false
  }
}
class {
  name: "NSXMLParser"
  base_class: "NSObject"
  method {
    function {
      name: "initWithContentsOfURL:"
      return_type: "ObjCId"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithData:"
      return_type: "ObjCId"
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithStream:"
      return_type: "ObjCId"
      parameter {
        name: "stream"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "delegate"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setDelegate:"
      return_type: "Void"
      parameter {
        name: "delegate"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setShouldProcessNamespaces:"
      return_type: "Void"
      parameter {
        name: "shouldProcessNamespaces"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setShouldReportNamespacePrefixes:"
      return_type: "Void"
      parameter {
        name: "shouldReportNamespacePrefixes"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setShouldResolveExternalEntities:"
      return_type: "Void"
      parameter {
        name: "shouldResolveExternalEntities"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "shouldProcessNamespaces"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "shouldReportNamespacePrefixes"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "shouldResolveExternalEntities"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "parse"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "abortParsing"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "parserError"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  ivar {
    name: "_reserved0"
    type: "ObjCId"
  }
  ivar {
    name: "_delegate"
    type: "ObjCId"
  }
  ivar {
    name: "_reserved1"
    type: "ObjCId"
  }
  ivar {
    name: "_reserved2"
    type: "ObjCId"
  }
  ivar {
    name: "_reserved3"
    type: "ObjCId"
  }
}
class {
  name: "NSAttributedString"
  base_class: "NSObject"
  protocol: "NSCopying"
  protocol: "NSMutableCopying"
  protocol: "NSCoding"
  method {
    function {
      name: "string"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "attributesAtIndex:effectiveRange:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "location"
        type: "ULong"
      }
      parameter {
        name: "range"
        type: "Pointer"
      }
    }
    class_method: false
  }
}
class {
  name: "NSMutableAttributedString"
  base_class: "NSAttributedString"
  method {
    function {
      name: "replaceCharactersInRange:withString:"
      return_type: "Void"
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "str"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setAttributes:range:"
      return_type: "Void"
      parameter {
        name: "attrs"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
}
class {
  name: "NSCache"
  base_class: "NSObject"
  method {
    function {
      name: "setName:"
      return_type: "Void"
      parameter {
        name: "n"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "name"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setDelegate:"
      return_type: "Void"
      parameter {
        name: "d"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "delegate"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "objectForKey:"
      return_type: "ObjCId"
      parameter {
        name: "key"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setObject:forKey:"
      return_type: "Void"
      parameter {
        name: "obj"
        type: "ObjCId"
      }
      parameter {
        name: "key"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setObject:forKey:cost:"
      return_type: "Void"
      parameter {
        name: "obj"
        type: "ObjCId"
      }
      parameter {
        name: "key"
        type: "ObjCId"
      }
      parameter {
        name: "g"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeObjectForKey:"
      return_type: "Void"
      parameter {
        name: "key"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeAllObjects"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "setTotalCostLimit:"
      return_type: "Void"
      parameter {
        name: "lim"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "totalCostLimit"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "setCountLimit:"
      return_type: "Void"
      parameter {
        name: "lim"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "countLimit"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "evictsObjectsWithDiscardedContent"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "setEvictsObjectsWithDiscardedContent:"
      return_type: "Void"
      parameter {
        name: "b"
        type: "SChar"
      }
    }
    class_method: false
  }
  ivar {
    name: "_delegate"
    type: "ObjCId"
  }
  ivar {
    name: "_private"
    type: "ConstantArray"
  }
  ivar {
    name: "_reserved"
    type: "Pointer"
  }
}
class {
  name: "NSPredicate"
  base_class: "NSObject"
  protocol: "NSCoding"
  protocol: "NSCopying"
  method {
    function {
      name: "predicateWithFormat:argumentArray:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "predicateFormat"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "arguments"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "predicateWithFormat:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "predicateFormat"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "predicateWithFormat:arguments:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "predicateFormat"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "argList"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "predicateWithValue:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "value"
        type: "SChar"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "predicateWithBlock:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "block"
        type: "BlockPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "predicateFormat"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "predicateWithSubstitutionVariables:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "variables"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "evaluateWithObject:"
      return_type: "SChar"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "evaluateWithObject:substitutionVariables:"
      return_type: "SChar"
      parameter {
        name: "object"
        type: "ObjCId"
      }
      parameter {
        name: "bindings"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  ivar {
    name: "_reserved"
    type: "Pointer"
  }
}
class {
  name: "NSComparisonPredicate"
  base_class: "NSPredicate"
  method {
    function {
      name: "predicateWithLeftExpression:rightExpression:modifier:type:options:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "lhs"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "rhs"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "modifier"
        type: "ULong"
      }
      parameter {
        name: "type"
        type: "ULong"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "predicateWithLeftExpression:rightExpression:customSelector:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "lhs"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "rhs"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "selector"
        type: "ObjCSel"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithLeftExpression:rightExpression:modifier:type:options:"
      return_type: "ObjCId"
      parameter {
        name: "lhs"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "rhs"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "modifier"
        type: "ULong"
      }
      parameter {
        name: "type"
        type: "ULong"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithLeftExpression:rightExpression:customSelector:"
      return_type: "ObjCId"
      parameter {
        name: "lhs"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "rhs"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "selector"
        type: "ObjCSel"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "predicateOperatorType"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "comparisonPredicateModifier"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "leftExpression"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "rightExpression"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "customSelector"
      return_type: "ObjCSel"
    }
    class_method: false
  }
  method {
    function {
      name: "options"
      return_type: "ULong"
    }
    class_method: false
  }
  ivar {
    name: "_reserved2"
    type: "Pointer"
  }
  ivar {
    name: "_predicateOperator"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_lhs"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_rhs"
    type: "ObjCObjectPointer"
  }
}
class {
  name: "NSCompoundPredicate"
  base_class: "NSPredicate"
  method {
    function {
      name: "initWithType:subpredicates:"
      return_type: "ObjCId"
      parameter {
        name: "type"
        type: "ULong"
      }
      parameter {
        name: "subpredicates"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "compoundPredicateType"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "subpredicates"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "andPredicateWithSubpredicates:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "subpredicates"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "orPredicateWithSubpredicates:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "subpredicates"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "notPredicateWithSubpredicate:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "predicate"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  ivar {
    name: "_reserved2"
    type: "Pointer"
  }
  ivar {
    name: "_type"
    type: "ULong"
  }
  ivar {
    name: "_subpredicates"
    type: "ObjCObjectPointer"
  }
}
class {
  name: "NSExpression"
  base_class: "NSObject"
  protocol: "NSCoding"
  protocol: "NSCopying"
  method {
    function {
      name: "expressionWithFormat:argumentArray:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "expressionFormat"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "arguments"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "expressionWithFormat:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "expressionFormat"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "expressionWithFormat:arguments:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "expressionFormat"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "argList"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "expressionForConstantValue:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "obj"
        type: "ObjCId"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "expressionForEvaluatedObject"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "expressionForVariable:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "expressionForKeyPath:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "keyPath"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "expressionForFunction:arguments:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "parameters"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "expressionForAggregate:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "subexpressions"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "expressionForUnionSet:with:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "left"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "right"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "expressionForIntersectSet:with:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "left"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "right"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "expressionForMinusSet:with:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "left"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "right"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "expressionForSubquery:usingIteratorVariable:predicate:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "expression"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "variable"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "predicate"
        type: "ObjCId"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "expressionForFunction:selectorName:arguments:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "target"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "parameters"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "expressionForBlock:arguments:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "block"
        type: "BlockPointer"
      }
      parameter {
        name: "arguments"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithExpressionType:"
      return_type: "ObjCId"
      parameter {
        name: "type"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "expressionType"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "constantValue"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "keyPath"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "function"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "variable"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "operand"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "arguments"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "collection"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "predicate"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "leftExpression"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "rightExpression"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "expressionBlock"
      return_type: "BlockPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "expressionValueWithObject:context:"
      return_type: "ObjCId"
      parameter {
        name: "object"
        type: "ObjCId"
      }
      parameter {
        name: "context"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  ivar {
    name: "_reserved"
    type: "Pointer"
  }
  ivar {
    name: "_expressionType"
    type: "ULong"
  }
}
class {
  name: "NSFileCoordinator"
  base_class: "NSObject"
  method {
    function {
      name: "addFilePresenter:"
      return_type: "Void"
      parameter {
        name: "filePresenter"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "removeFilePresenter:"
      return_type: "Void"
      parameter {
        name: "filePresenter"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "filePresenters"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "initWithFilePresenter:"
      return_type: "ObjCId"
      parameter {
        name: "filePresenterOrNil"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "coordinateReadingItemAtURL:options:error:byAccessor:"
      return_type: "Void"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
      parameter {
        name: "outError"
        type: "Pointer"
      }
      parameter {
        name: "reader"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "coordinateWritingItemAtURL:options:error:byAccessor:"
      return_type: "Void"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
      parameter {
        name: "outError"
        type: "Pointer"
      }
      parameter {
        name: "writer"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "coordinateReadingItemAtURL:options:writingItemAtURL:options:error:byAccessor:"
      return_type: "Void"
      parameter {
        name: "readingURL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "readingOptions"
        type: "ULong"
      }
      parameter {
        name: "writingURL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "writingOptions"
        type: "ULong"
      }
      parameter {
        name: "outError"
        type: "Pointer"
      }
      parameter {
        name: "readerWriter"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "coordinateWritingItemAtURL:options:writingItemAtURL:options:error:byAccessor:"
      return_type: "Void"
      parameter {
        name: "url1"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "options1"
        type: "ULong"
      }
      parameter {
        name: "url2"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "options2"
        type: "ULong"
      }
      parameter {
        name: "outError"
        type: "Pointer"
      }
      parameter {
        name: "writer"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "prepareForReadingItemsAtURLs:options:writingItemsAtURLs:options:error:byAccessor:"
      return_type: "Void"
      parameter {
        name: "readingURLs"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "readingOptions"
        type: "ULong"
      }
      parameter {
        name: "writingURLs"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "writingOptions"
        type: "ULong"
      }
      parameter {
        name: "outError"
        type: "Pointer"
      }
      parameter {
        name: "batchAccessor"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "itemAtURL:didMoveToURL:"
      return_type: "Void"
      parameter {
        name: "oldURL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "newURL"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "cancel"
      return_type: "Void"
    }
    class_method: false
  }
  ivar {
    name: "_accessArbiter"
    type: "ObjCId"
  }
  ivar {
    name: "_fileReactor"
    type: "ObjCId"
  }
  ivar {
    name: "_purposeID"
    type: "ObjCId"
  }
  ivar {
    name: "_recentFilePresenterURL"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_accessClaimIDOrIDs"
    type: "ObjCId"
  }
  ivar {
    name: "_isCancelled"
    type: "SChar"
  }
  ivar {
    name: "_reserved"
    type: "ObjCId"
  }
}
class {
  name: "NSFileVersion"
  base_class: "NSObject"
  method {
    function {
      name: "currentVersionOfItemAtURL:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "otherVersionsOfItemAtURL:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "unresolvedConflictVersionsOfItemAtURL:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "versionOfItemAtURL:forPersistentIdentifier:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "persistentIdentifier"
        type: "ObjCId"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "addVersionOfItemAtURL:withContentsOfURL:options:error:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "contentsURL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
      parameter {
        name: "outError"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "temporaryDirectoryURLForNewVersionOfItemAtURL:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "URL"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "localizedName"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "localizedNameOfSavingComputer"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "modificationDate"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "persistentIdentifier"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "isConflict"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "isResolved"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "setResolved:"
      return_type: "Void"
      parameter {
        name: "resolved"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isDiscardable"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "setDiscardable:"
      return_type: "Void"
      parameter {
        name: "discardable"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "replaceItemAtURL:options:error:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeAndReturnError:"
      return_type: "SChar"
      parameter {
        name: "outError"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeOtherVersionsOfItemAtURL:error:"
      return_type: "SChar"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "outError"
        type: "Pointer"
      }
    }
    class_method: true
  }
  property {
    name: "URL"
    type: "ObjCObjectPointer"
  }
  property {
    name: "localizedName"
    type: "ObjCObjectPointer"
  }
  property {
    name: "localizedNameOfSavingComputer"
    type: "ObjCObjectPointer"
  }
  property {
    name: "modificationDate"
    type: "ObjCObjectPointer"
  }
  property {
    name: "persistentIdentifier"
    type: "ObjCObjectPointer"
  }
  property {
    name: "conflict"
    type: "SChar"
  }
  property {
    name: "resolved"
    type: "SChar"
  }
  property {
    name: "discardable"
    type: "SChar"
  }
  ivar {
    name: "_fileURL"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_library"
    type: "ObjCId"
  }
  ivar {
    name: "_clientID"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_name"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_contentsURL"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_isBackup"
    type: "SChar"
  }
  ivar {
    name: "_localizedName"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_localizedComputerName"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_modificationDate"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_isResolved"
    type: "SChar"
  }
  ivar {
    name: "_reserved1"
    type: "ObjCId"
  }
  ivar {
    name: "_reserved2"
    type: "ObjCId"
  }
}
class {
  name: "NSFileWrapper"
  base_class: "NSObject"
  protocol: "NSCoding"
  method {
    function {
      name: "initWithURL:options:error:"
      return_type: "ObjCId"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
      parameter {
        name: "outError"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initDirectoryWithFileWrappers:"
      return_type: "ObjCId"
      parameter {
        name: "childrenByPreferredName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initRegularFileWithContents:"
      return_type: "ObjCId"
      parameter {
        name: "contents"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initSymbolicLinkWithDestinationURL:"
      return_type: "ObjCId"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithSerializedRepresentation:"
      return_type: "ObjCId"
      parameter {
        name: "serializeRepresentation"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isDirectory"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "isRegularFile"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "isSymbolicLink"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "setPreferredFilename:"
      return_type: "Void"
      parameter {
        name: "fileName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "preferredFilename"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setFilename:"
      return_type: "Void"
      parameter {
        name: "fileName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "filename"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setFileAttributes:"
      return_type: "Void"
      parameter {
        name: "fileAttributes"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "fileAttributes"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "matchesContentsOfURL:"
      return_type: "SChar"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "readFromURL:options:error:"
      return_type: "SChar"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
      parameter {
        name: "outError"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "writeToURL:options:originalContentsURL:error:"
      return_type: "SChar"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
      parameter {
        name: "originalContentsURL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "outError"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "serializedRepresentation"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "addFileWrapper:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "child"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "addRegularFileWithContents:preferredFilename:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "fileName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeFileWrapper:"
      return_type: "Void"
      parameter {
        name: "child"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "fileWrappers"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "keyForFileWrapper:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "child"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "regularFileContents"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "symbolicLinkDestinationURL"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  ivar {
    name: "_fileAttributes"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_preferredFileName"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_fileName"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_contents"
    type: "ObjCId"
  }
  ivar {
    name: "_icon"
    type: "ObjCId"
  }
  ivar {
    name: "_moreVars"
    type: "ObjCId"
  }
}
class {
  name: "NSMetadataQuery"
  base_class: "NSObject"
  method {
    function {
      name: "init"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "delegate"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setDelegate:"
      return_type: "Void"
      parameter {
        name: "delegate"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "predicate"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setPredicate:"
      return_type: "Void"
      parameter {
        name: "predicate"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "sortDescriptors"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setSortDescriptors:"
      return_type: "Void"
      parameter {
        name: "descriptors"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "valueListAttributes"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setValueListAttributes:"
      return_type: "Void"
      parameter {
        name: "attrs"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "groupingAttributes"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setGroupingAttributes:"
      return_type: "Void"
      parameter {
        name: "attrs"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "notificationBatchingInterval"
      return_type: "Double"
    }
    class_method: false
  }
  method {
    function {
      name: "setNotificationBatchingInterval:"
      return_type: "Void"
      parameter {
        name: "ti"
        type: "Double"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "searchScopes"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setSearchScopes:"
      return_type: "Void"
      parameter {
        name: "scopes"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "startQuery"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "stopQuery"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "isStarted"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "isGathering"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "isStopped"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "disableUpdates"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "enableUpdates"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "resultCount"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "resultAtIndex:"
      return_type: "ObjCId"
      parameter {
        name: "idx"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "results"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "indexOfResult:"
      return_type: "ULong"
      parameter {
        name: "result"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "valueLists"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "groupedResults"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "valueOfAttribute:forResultAtIndex:"
      return_type: "ObjCId"
      parameter {
        name: "attrName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "idx"
        type: "ULong"
      }
    }
    class_method: false
  }
  ivar {
    name: "_flags"
    type: "ULong"
  }
  ivar {
    name: "_interval"
    type: "Double"
  }
  ivar {
    name: "_private"
    type: "ConstantArray"
  }
  ivar {
    name: "_reserved"
    type: "Pointer"
  }
}
class {
  name: "NSMetadataItem"
  base_class: "NSObject"
  method {
    function {
      name: "valueForAttribute:"
      return_type: "ObjCId"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "valuesForAttributes:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "keys"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "attributes"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  ivar {
    name: "_item"
    type: "ObjCId"
  }
  ivar {
    name: "_reserved"
    type: "Pointer"
  }
}
class {
  name: "NSMetadataQueryAttributeValueTuple"
  base_class: "NSObject"
  method {
    function {
      name: "attribute"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "value"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "count"
      return_type: "ULong"
    }
    class_method: false
  }
  ivar {
    name: "_attr"
    type: "ObjCId"
  }
  ivar {
    name: "_value"
    type: "ObjCId"
  }
  ivar {
    name: "_count"
    type: "ULong"
  }
  ivar {
    name: "_reserved"
    type: "Pointer"
  }
}
class {
  name: "NSMetadataQueryResultGroup"
  base_class: "NSObject"
  method {
    function {
      name: "attribute"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "value"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "subgroups"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "resultCount"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "resultAtIndex:"
      return_type: "ObjCId"
      parameter {
        name: "idx"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "results"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  ivar {
    name: "_private"
    type: "ConstantArray"
  }
  ivar {
    name: "_private2"
    type: "ConstantArray"
  }
  ivar {
    name: "_reserved"
    type: "Pointer"
  }
}
class {
  name: "NSNetService"
  base_class: "NSObject"
  method {
    function {
      name: "initWithDomain:type:name:port:"
      return_type: "ObjCId"
      parameter {
        name: "domain"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "type"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "port"
        type: "Int"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithDomain:type:name:"
      return_type: "ObjCId"
      parameter {
        name: "domain"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "type"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "delegate"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setDelegate:"
      return_type: "Void"
      parameter {
        name: "delegate"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "scheduleInRunLoop:forMode:"
      return_type: "Void"
      parameter {
        name: "aRunLoop"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mode"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeFromRunLoop:forMode:"
      return_type: "Void"
      parameter {
        name: "aRunLoop"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mode"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "domain"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "type"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "name"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "addresses"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "port"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "publish"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "publishWithOptions:"
      return_type: "Void"
      parameter {
        name: "options"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "resolve"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "stop"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "dictionaryFromTXTRecordData:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "txtData"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "dataFromTXTRecordDictionary:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "txtDictionary"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "hostName"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "resolveWithTimeout:"
      return_type: "Void"
      parameter {
        name: "timeout"
        type: "Double"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "getInputStream:outputStream:"
      return_type: "SChar"
      parameter {
        name: "inputStream"
        type: "Pointer"
      }
      parameter {
        name: "outputStream"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setTXTRecordData:"
      return_type: "SChar"
      parameter {
        name: "recordData"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "TXTRecordData"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "startMonitoring"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "stopMonitoring"
      return_type: "Void"
    }
    class_method: false
  }
  ivar {
    name: "_netService"
    type: "ObjCId"
  }
  ivar {
    name: "_delegate"
    type: "ObjCId"
  }
  ivar {
    name: "_reserved"
    type: "ObjCId"
  }
}
class {
  name: "NSNetServiceBrowser"
  base_class: "NSObject"
  method {
    function {
      name: "init"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "delegate"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setDelegate:"
      return_type: "Void"
      parameter {
        name: "delegate"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "scheduleInRunLoop:forMode:"
      return_type: "Void"
      parameter {
        name: "aRunLoop"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mode"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeFromRunLoop:forMode:"
      return_type: "Void"
      parameter {
        name: "aRunLoop"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mode"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "searchForBrowsableDomains"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "searchForRegistrationDomains"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "searchForServicesOfType:inDomain:"
      return_type: "Void"
      parameter {
        name: "type"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "domainString"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "stop"
      return_type: "Void"
    }
    class_method: false
  }
  ivar {
    name: "_netServiceBrowser"
    type: "ObjCId"
  }
  ivar {
    name: "_delegate"
    type: "ObjCId"
  }
  ivar {
    name: "_reserved"
    type: "Pointer"
  }
}
class {
  name: "NSUbiquitousKeyValueStore"
  base_class: "NSObject"
  method {
    function {
      name: "defaultStore"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "objectForKey:"
      return_type: "ObjCId"
      parameter {
        name: "aKey"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setObject:forKey:"
      return_type: "Void"
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
      parameter {
        name: "aKey"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeObjectForKey:"
      return_type: "Void"
      parameter {
        name: "aKey"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "stringForKey:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "aKey"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "arrayForKey:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "aKey"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "dictionaryForKey:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "aKey"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "dataForKey:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "aKey"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "longLongForKey:"
      return_type: "LongLong"
      parameter {
        name: "aKey"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "doubleForKey:"
      return_type: "Double"
      parameter {
        name: "aKey"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "boolForKey:"
      return_type: "SChar"
      parameter {
        name: "aKey"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setString:forKey:"
      return_type: "Void"
      parameter {
        name: "aString"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "aKey"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setData:forKey:"
      return_type: "Void"
      parameter {
        name: "aData"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "aKey"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setArray:forKey:"
      return_type: "Void"
      parameter {
        name: "anArray"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "aKey"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setDictionary:forKey:"
      return_type: "Void"
      parameter {
        name: "aDictionary"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "aKey"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setLongLong:forKey:"
      return_type: "Void"
      parameter {
        name: "value"
        type: "LongLong"
      }
      parameter {
        name: "aKey"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setDouble:forKey:"
      return_type: "Void"
      parameter {
        name: "value"
        type: "Double"
      }
      parameter {
        name: "aKey"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setBool:forKey:"
      return_type: "Void"
      parameter {
        name: "value"
        type: "SChar"
      }
      parameter {
        name: "aKey"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "dictionaryRepresentation"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "synchronize"
      return_type: "SChar"
    }
    class_method: false
  }
  ivar {
    name: "_private1"
    type: "ObjCId"
  }
  ivar {
    name: "_private2"
    type: "ObjCId"
  }
  ivar {
    name: "_private3"
    type: "ObjCId"
  }
  ivar {
    name: "_private4"
    type: "Pointer"
  }
  ivar {
    name: "_reserved"
    type: "ConstantArray"
  }
}
class {
  name: "NSUndoManager"
  base_class: "NSObject"
  method {
    function {
      name: "beginUndoGrouping"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "endUndoGrouping"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "groupingLevel"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "disableUndoRegistration"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "enableUndoRegistration"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "isUndoRegistrationEnabled"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "groupsByEvent"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "setGroupsByEvent:"
      return_type: "Void"
      parameter {
        name: "groupsByEvent"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setLevelsOfUndo:"
      return_type: "Void"
      parameter {
        name: "levels"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "levelsOfUndo"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "setRunLoopModes:"
      return_type: "Void"
      parameter {
        name: "runLoopModes"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "runLoopModes"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "undo"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "redo"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "undoNestedGroup"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "canUndo"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "canRedo"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "isUndoing"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "isRedoing"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "removeAllActions"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "removeAllActionsWithTarget:"
      return_type: "Void"
      parameter {
        name: "target"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "registerUndoWithTarget:selector:object:"
      return_type: "Void"
      parameter {
        name: "target"
        type: "ObjCId"
      }
      parameter {
        name: "selector"
        type: "ObjCSel"
      }
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "prepareWithInvocationTarget:"
      return_type: "ObjCId"
      parameter {
        name: "target"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setActionIsDiscardable:"
      return_type: "Void"
      parameter {
        name: "discardable"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "undoActionIsDiscardable"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "redoActionIsDiscardable"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "undoActionName"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "redoActionName"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setActionName:"
      return_type: "Void"
      parameter {
        name: "actionName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "undoMenuItemTitle"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "redoMenuItemTitle"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "undoMenuTitleForUndoActionName:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "actionName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "redoMenuTitleForUndoActionName:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "actionName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  ivar {
    name: "_undoStack"
    type: "ObjCId"
  }
  ivar {
    name: "_redoStack"
    type: "ObjCId"
  }
  ivar {
    name: "_runLoopModes"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_NSUndoManagerPrivate1"
    type: "ULongLong"
  }
  ivar {
    name: "_target"
    type: "ObjCId"
  }
  ivar {
    name: "_proxy"
    type: "ObjCId"
  }
  ivar {
    name: "_NSUndoManagerPrivate2"
    type: "Pointer"
  }
  ivar {
    name: "_NSUndoManagerPrivate3"
    type: "Pointer"
  }
}
class {
  name: "NSArchiver"
  base_class: "NSCoder"
  method {
    function {
      name: "initForWritingWithMutableData:"
      return_type: "ObjCId"
      parameter {
        name: "mdata"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "archiverData"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "encodeRootObject:"
      return_type: "Void"
      parameter {
        name: "rootObject"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "encodeConditionalObject:"
      return_type: "Void"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "archivedDataWithRootObject:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "rootObject"
        type: "ObjCId"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "archiveRootObject:toFile:"
      return_type: "SChar"
      parameter {
        name: "rootObject"
        type: "ObjCId"
      }
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "encodeClassName:intoClassName:"
      return_type: "Void"
      parameter {
        name: "trueName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "inArchiveName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "classNameEncodedForTrueClassName:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "trueName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "replaceObject:withObject:"
      return_type: "Void"
      parameter {
        name: "object"
        type: "ObjCId"
      }
      parameter {
        name: "newObject"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  ivar {
    name: "mdata"
    type: "Pointer"
  }
  ivar {
    name: "pointerTable"
    type: "Pointer"
  }
  ivar {
    name: "stringTable"
    type: "Pointer"
  }
  ivar {
    name: "ids"
    type: "Pointer"
  }
  ivar {
    name: "map"
    type: "Pointer"
  }
  ivar {
    name: "replacementTable"
    type: "Pointer"
  }
  ivar {
    name: "reserved"
    type: "Pointer"
  }
}
class {
  name: "NSUnarchiver"
  base_class: "NSCoder"
  method {
    function {
      name: "initForReadingWithData:"
      return_type: "ObjCId"
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setObjectZone:"
      return_type: "Void"
      parameter {
        name: "zone"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "objectZone"
      return_type: "Pointer"
    }
    class_method: false
  }
  method {
    function {
      name: "isAtEnd"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "systemVersion"
      return_type: "UInt"
    }
    class_method: false
  }
  method {
    function {
      name: "unarchiveObjectWithData:"
      return_type: "ObjCId"
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "unarchiveObjectWithFile:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "decodeClassName:asClassName:"
      return_type: "Void"
      parameter {
        name: "inArchiveName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "trueName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "decodeClassName:asClassName:"
      return_type: "Void"
      parameter {
        name: "inArchiveName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "trueName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "classNameDecodedForArchiveClassName:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "inArchiveName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "classNameDecodedForArchiveClassName:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "inArchiveName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "replaceObject:withObject:"
      return_type: "Void"
      parameter {
        name: "object"
        type: "ObjCId"
      }
      parameter {
        name: "newObject"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  ivar {
    name: "datax"
    type: "Pointer"
  }
  ivar {
    name: "cursor"
    type: "ULong"
  }
  ivar {
    name: "objectZone"
    type: "Pointer"
  }
  ivar {
    name: "systemVersion"
    type: "ULong"
  }
  ivar {
    name: "streamerVersion"
    type: "SChar"
  }
  ivar {
    name: "swap"
    type: "Char_S"
  }
  ivar {
    name: "unused1"
    type: "Char_S"
  }
  ivar {
    name: "unused2"
    type: "Char_S"
  }
  ivar {
    name: "pointerTable"
    type: "Pointer"
  }
  ivar {
    name: "stringTable"
    type: "Pointer"
  }
  ivar {
    name: "classVersions"
    type: "ObjCId"
  }
  ivar {
    name: "lastLabel"
    type: "Long"
  }
  ivar {
    name: "map"
    type: "Pointer"
  }
  ivar {
    name: "allUnarchivedObjects"
    type: "Pointer"
  }
  ivar {
    name: "reserved"
    type: "ObjCId"
  }
}
class {
  name: "NSCalendarDate"
  base_class: "NSDate"
  method {
    function {
      name: "calendarDate"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "dateWithString:calendarFormat:locale:"
      return_type: "ObjCId"
      parameter {
        name: "description"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "format"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "locale"
        type: "ObjCId"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "dateWithString:calendarFormat:"
      return_type: "ObjCId"
      parameter {
        name: "description"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "format"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "dateWithYear:month:day:hour:minute:second:timeZone:"
      return_type: "ObjCId"
      parameter {
        name: "year"
        type: "Long"
      }
      parameter {
        name: "month"
        type: "ULong"
      }
      parameter {
        name: "day"
        type: "ULong"
      }
      parameter {
        name: "hour"
        type: "ULong"
      }
      parameter {
        name: "minute"
        type: "ULong"
      }
      parameter {
        name: "second"
        type: "ULong"
      }
      parameter {
        name: "aTimeZone"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "dateByAddingYears:months:days:hours:minutes:seconds:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "year"
        type: "Long"
      }
      parameter {
        name: "month"
        type: "Long"
      }
      parameter {
        name: "day"
        type: "Long"
      }
      parameter {
        name: "hour"
        type: "Long"
      }
      parameter {
        name: "minute"
        type: "Long"
      }
      parameter {
        name: "second"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "dayOfCommonEra"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "dayOfMonth"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "dayOfWeek"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "dayOfYear"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "hourOfDay"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "minuteOfHour"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "monthOfYear"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "secondOfMinute"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "yearOfCommonEra"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "calendarFormat"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "descriptionWithCalendarFormat:locale:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "format"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "locale"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "descriptionWithCalendarFormat:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "format"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "descriptionWithLocale:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "locale"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "timeZone"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "initWithString:calendarFormat:locale:"
      return_type: "ObjCId"
      parameter {
        name: "description"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "format"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "locale"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithString:calendarFormat:"
      return_type: "ObjCId"
      parameter {
        name: "description"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "format"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithString:"
      return_type: "ObjCId"
      parameter {
        name: "description"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithYear:month:day:hour:minute:second:timeZone:"
      return_type: "ObjCId"
      parameter {
        name: "year"
        type: "Long"
      }
      parameter {
        name: "month"
        type: "ULong"
      }
      parameter {
        name: "day"
        type: "ULong"
      }
      parameter {
        name: "hour"
        type: "ULong"
      }
      parameter {
        name: "minute"
        type: "ULong"
      }
      parameter {
        name: "second"
        type: "ULong"
      }
      parameter {
        name: "aTimeZone"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setCalendarFormat:"
      return_type: "Void"
      parameter {
        name: "format"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setTimeZone:"
      return_type: "Void"
      parameter {
        name: "aTimeZone"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "years:months:days:hours:minutes:seconds:sinceDate:"
      return_type: "Void"
      parameter {
        name: "yp"
        type: "Pointer"
      }
      parameter {
        name: "mop"
        type: "Pointer"
      }
      parameter {
        name: "dp"
        type: "Pointer"
      }
      parameter {
        name: "hp"
        type: "Pointer"
      }
      parameter {
        name: "mip"
        type: "Pointer"
      }
      parameter {
        name: "sp"
        type: "Pointer"
      }
      parameter {
        name: "date"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  ivar {
    name: "refCount"
    type: "ULong"
  }
  ivar {
    name: "_timeIntervalSinceReferenceDate"
    type: "Double"
  }
  ivar {
    name: "_timeZone"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_formatString"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_reserved"
    type: "Pointer"
  }
}
class {
  name: "NSConnection"
  base_class: "NSObject"
  method {
    function {
      name: "statistics"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "allConnections"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "defaultConnection"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "connectionWithRegisteredName:host:"
      return_type: "ObjCId"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "hostName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "connectionWithRegisteredName:host:usingNameServer:"
      return_type: "ObjCId"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "hostName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "server"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "rootProxyForConnectionWithRegisteredName:host:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "hostName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "rootProxyForConnectionWithRegisteredName:host:usingNameServer:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "hostName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "server"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "serviceConnectionWithName:rootObject:usingNameServer:"
      return_type: "ObjCId"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "root"
        type: "ObjCId"
      }
      parameter {
        name: "server"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "serviceConnectionWithName:rootObject:"
      return_type: "ObjCId"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "root"
        type: "ObjCId"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "setRequestTimeout:"
      return_type: "Void"
      parameter {
        name: "ti"
        type: "Double"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "requestTimeout"
      return_type: "Double"
    }
    class_method: false
  }
  method {
    function {
      name: "setReplyTimeout:"
      return_type: "Void"
      parameter {
        name: "ti"
        type: "Double"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "replyTimeout"
      return_type: "Double"
    }
    class_method: false
  }
  method {
    function {
      name: "setRootObject:"
      return_type: "Void"
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "rootObject"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "rootProxy"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setDelegate:"
      return_type: "Void"
      parameter {
        name: "anObject"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "delegate"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setIndependentConversationQueueing:"
      return_type: "Void"
      parameter {
        name: "yorn"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "independentConversationQueueing"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "isValid"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "invalidate"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "addRequestMode:"
      return_type: "Void"
      parameter {
        name: "rmode"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeRequestMode:"
      return_type: "Void"
      parameter {
        name: "rmode"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "requestModes"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "registerName:"
      return_type: "SChar"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "registerName:withNameServer:"
      return_type: "SChar"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "server"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "connectionWithReceivePort:sendPort:"
      return_type: "ObjCId"
      parameter {
        name: "receivePort"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "sendPort"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "currentConversation"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "initWithReceivePort:sendPort:"
      return_type: "ObjCId"
      parameter {
        name: "receivePort"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "sendPort"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "sendPort"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "receivePort"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "enableMultipleThreads"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "multipleThreadsEnabled"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "addRunLoop:"
      return_type: "Void"
      parameter {
        name: "runloop"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeRunLoop:"
      return_type: "Void"
      parameter {
        name: "runloop"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "runInNewThread"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "remoteObjects"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "localObjects"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "dispatchWithComponents:"
      return_type: "Void"
      parameter {
        name: "components"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  ivar {
    name: "receivePort"
    type: "ObjCId"
  }
  ivar {
    name: "sendPort"
    type: "ObjCId"
  }
  ivar {
    name: "delegate"
    type: "ObjCId"
  }
  ivar {
    name: "busy"
    type: "Int"
  }
  ivar {
    name: "localProxyCount"
    type: "Int"
  }
  ivar {
    name: "waitCount"
    type: "Int"
  }
  ivar {
    name: "delayedRL"
    type: "ObjCId"
  }
  ivar {
    name: "statistics"
    type: "ObjCId"
  }
  ivar {
    name: "isDead"
    type: "UChar"
  }
  ivar {
    name: "isValid"
    type: "UChar"
  }
  ivar {
    name: "wantsInvalid"
    type: "UChar"
  }
  ivar {
    name: "authGen"
    type: "UChar"
  }
  ivar {
    name: "authCheck"
    type: "UChar"
  }
  ivar {
    name: "_reserved1"
    type: "UChar"
  }
  ivar {
    name: "_reserved2"
    type: "UChar"
  }
  ivar {
    name: "doRequest"
    type: "UChar"
  }
  ivar {
    name: "isQueueing"
    type: "UChar"
  }
  ivar {
    name: "isMulti"
    type: "UChar"
  }
  ivar {
    name: "invalidateRP"
    type: "UChar"
  }
  ivar {
    name: "___1"
    type: "ObjCId"
  }
  ivar {
    name: "___2"
    type: "ObjCId"
  }
  ivar {
    name: "runLoops"
    type: "ObjCId"
  }
  ivar {
    name: "requestModes"
    type: "ObjCId"
  }
  ivar {
    name: "rootObject"
    type: "ObjCId"
  }
  ivar {
    name: "registerInfo"
    type: "Pointer"
  }
  ivar {
    name: "replMode"
    type: "ObjCId"
  }
  ivar {
    name: "classInfoImported"
    type: "ObjCId"
  }
  ivar {
    name: "releasedProxies"
    type: "ObjCId"
  }
  ivar {
    name: "reserved"
    type: "ObjCId"
  }
}
class {
  name: "NSDistantObjectRequest"
  base_class: "NSObject"
  method {
    function {
      name: "invocation"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "connection"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "conversation"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "replyWithException:"
      return_type: "Void"
      parameter {
        name: "exception"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
class {
  name: "NSDistantObject"
  base_class: "NSProxy"
  protocol: "NSCoding"
  method {
    function {
      name: "proxyWithTarget:connection:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "target"
        type: "ObjCId"
      }
      parameter {
        name: "connection"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithTarget:connection:"
      return_type: "ObjCId"
      parameter {
        name: "target"
        type: "ObjCId"
      }
      parameter {
        name: "connection"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "proxyWithLocal:connection:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "target"
        type: "ObjCId"
      }
      parameter {
        name: "connection"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithLocal:connection:"
      return_type: "ObjCId"
      parameter {
        name: "target"
        type: "ObjCId"
      }
      parameter {
        name: "connection"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setProtocolForProxy:"
      return_type: "Void"
      parameter {
        name: "proto"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "connectionForProxy"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  ivar {
    name: "_knownSelectors"
    type: "ObjCId"
  }
  ivar {
    name: "_wireCount"
    type: "ULong"
  }
  ivar {
    name: "_refCount"
    type: "ULong"
  }
  ivar {
    name: "_proto"
    type: "ObjCId"
  }
  ivar {
    name: "___2"
    type: "UShort"
  }
  ivar {
    name: "___1"
    type: "UChar"
  }
  ivar {
    name: "_wireType"
    type: "UChar"
  }
  ivar {
    name: "_remoteClass"
    type: "ObjCId"
  }
}
class {
  name: "NSDistributedNotificationCenter"
  base_class: "NSNotificationCenter"
  method {
    function {
      name: "notificationCenterForType:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "notificationCenterType"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "defaultCenter"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "addObserver:selector:name:object:suspensionBehavior:"
      return_type: "Void"
      parameter {
        name: "observer"
        type: "ObjCId"
      }
      parameter {
        name: "selector"
        type: "ObjCSel"
      }
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "object"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "suspensionBehavior"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "postNotificationName:object:userInfo:deliverImmediately:"
      return_type: "Void"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "object"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "userInfo"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "deliverImmediately"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "postNotificationName:object:userInfo:options:"
      return_type: "Void"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "object"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "userInfo"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setSuspended:"
      return_type: "Void"
      parameter {
        name: "suspended"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "suspended"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "addObserver:selector:name:object:"
      return_type: "Void"
      parameter {
        name: "observer"
        type: "ObjCId"
      }
      parameter {
        name: "aSelector"
        type: "ObjCSel"
      }
      parameter {
        name: "aName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "anObject"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "postNotificationName:object:"
      return_type: "Void"
      parameter {
        name: "aName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "anObject"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "postNotificationName:object:userInfo:"
      return_type: "Void"
      parameter {
        name: "aName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "anObject"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "aUserInfo"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeObserver:name:object:"
      return_type: "Void"
      parameter {
        name: "observer"
        type: "ObjCId"
      }
      parameter {
        name: "aName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "anObject"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
class {
  name: "NSPointerFunctions"
  base_class: "NSObject"
  protocol: "NSCopying"
  method {
    function {
      name: "initWithOptions:"
      return_type: "ObjCId"
      parameter {
        name: "options"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "pointerFunctionsWithOptions:"
      return_type: "ObjCId"
      parameter {
        name: "options"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "hashFunction"
      return_type: "Pointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setHashFunction:"
      return_type: "Void"
      parameter {
        name: "hashFunction"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isEqualFunction"
      return_type: "Pointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setIsEqualFunction:"
      return_type: "Void"
      parameter {
        name: "isEqualFunction"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "sizeFunction"
      return_type: "Pointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setSizeFunction:"
      return_type: "Void"
      parameter {
        name: "sizeFunction"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "descriptionFunction"
      return_type: "Pointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setDescriptionFunction:"
      return_type: "Void"
      parameter {
        name: "descriptionFunction"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "relinquishFunction"
      return_type: "Pointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setRelinquishFunction:"
      return_type: "Void"
      parameter {
        name: "relinquishFunction"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "acquireFunction"
      return_type: "Pointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setAcquireFunction:"
      return_type: "Void"
      parameter {
        name: "acquireFunction"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "usesStrongWriteBarrier"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "setUsesStrongWriteBarrier:"
      return_type: "Void"
      parameter {
        name: "usesStrongWriteBarrier"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "usesWeakReadAndWriteBarriers"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "setUsesWeakReadAndWriteBarriers:"
      return_type: "Void"
      parameter {
        name: "usesWeakReadAndWriteBarriers"
        type: "SChar"
      }
    }
    class_method: false
  }
  property {
    name: "hashFunction"
    type: "Pointer"
  }
  property {
    name: "isEqualFunction"
    type: "Pointer"
  }
  property {
    name: "sizeFunction"
    type: "Pointer"
  }
  property {
    name: "descriptionFunction"
    type: "Pointer"
  }
  property {
    name: "relinquishFunction"
    type: "Pointer"
  }
  property {
    name: "acquireFunction"
    type: "Pointer"
  }
  property {
    name: "usesStrongWriteBarrier"
    type: "SChar"
  }
  property {
    name: "usesWeakReadAndWriteBarriers"
    type: "SChar"
  }
}
class {
  name: "NSHashTable"
  base_class: "NSObject"
  protocol: "NSCopying"
  protocol: "NSCoding"
  protocol: "NSFastEnumeration"
  method {
    function {
      name: "initWithOptions:capacity:"
      return_type: "ObjCId"
      parameter {
        name: "options"
        type: "ULong"
      }
      parameter {
        name: "initialCapacity"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithPointerFunctions:capacity:"
      return_type: "ObjCId"
      parameter {
        name: "functions"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "initialCapacity"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "hashTableWithOptions:"
      return_type: "ObjCId"
      parameter {
        name: "options"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "hashTableWithWeakObjects"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "pointerFunctions"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "count"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "member:"
      return_type: "ObjCId"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "objectEnumerator"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "addObject:"
      return_type: "Void"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeObject:"
      return_type: "Void"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeAllObjects"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "allObjects"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "anyObject"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "containsObject:"
      return_type: "SChar"
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "intersectsHashTable:"
      return_type: "SChar"
      parameter {
        name: "other"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isEqualToHashTable:"
      return_type: "SChar"
      parameter {
        name: "other"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isSubsetOfHashTable:"
      return_type: "SChar"
      parameter {
        name: "other"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "intersectHashTable:"
      return_type: "Void"
      parameter {
        name: "other"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "unionHashTable:"
      return_type: "Void"
      parameter {
        name: "other"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "minusHashTable:"
      return_type: "Void"
      parameter {
        name: "other"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setRepresentation"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
}
class {
  name: "NSMapTable"
  base_class: "NSObject"
  protocol: "NSCopying"
  protocol: "NSCoding"
  protocol: "NSFastEnumeration"
  method {
    function {
      name: "initWithKeyOptions:valueOptions:capacity:"
      return_type: "ObjCId"
      parameter {
        name: "keyOptions"
        type: "ULong"
      }
      parameter {
        name: "valueOptions"
        type: "ULong"
      }
      parameter {
        name: "initialCapacity"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithKeyPointerFunctions:valuePointerFunctions:capacity:"
      return_type: "ObjCId"
      parameter {
        name: "keyFunctions"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "valueFunctions"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "initialCapacity"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "mapTableWithKeyOptions:valueOptions:"
      return_type: "ObjCId"
      parameter {
        name: "keyOptions"
        type: "ULong"
      }
      parameter {
        name: "valueOptions"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "mapTableWithStrongToStrongObjects"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "mapTableWithWeakToStrongObjects"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "mapTableWithStrongToWeakObjects"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "mapTableWithWeakToWeakObjects"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "keyPointerFunctions"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "valuePointerFunctions"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "objectForKey:"
      return_type: "ObjCId"
      parameter {
        name: "aKey"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeObjectForKey:"
      return_type: "Void"
      parameter {
        name: "aKey"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setObject:forKey:"
      return_type: "Void"
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
      parameter {
        name: "aKey"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "count"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "keyEnumerator"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "objectEnumerator"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "removeAllObjects"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "dictionaryRepresentation"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
}
class {
  name: "NSPointerArray"
  base_class: "NSObject"
  protocol: "NSFastEnumeration"
  protocol: "NSCopying"
  protocol: "NSCoding"
  method {
    function {
      name: "initWithOptions:"
      return_type: "ObjCId"
      parameter {
        name: "options"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithPointerFunctions:"
      return_type: "ObjCId"
      parameter {
        name: "functions"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "pointerArrayWithOptions:"
      return_type: "ObjCId"
      parameter {
        name: "options"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "pointerArrayWithPointerFunctions:"
      return_type: "ObjCId"
      parameter {
        name: "functions"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "pointerFunctions"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "pointerAtIndex:"
      return_type: "Pointer"
      parameter {
        name: "index"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "addPointer:"
      return_type: "Void"
      parameter {
        name: "pointer"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removePointerAtIndex:"
      return_type: "Void"
      parameter {
        name: "index"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "insertPointer:atIndex:"
      return_type: "Void"
      parameter {
        name: "item"
        type: "Pointer"
      }
      parameter {
        name: "index"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "replacePointerAtIndex:withPointer:"
      return_type: "Void"
      parameter {
        name: "index"
        type: "ULong"
      }
      parameter {
        name: "item"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "compact"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "count"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "setCount:"
      return_type: "Void"
      parameter {
        name: "count"
        type: "ULong"
      }
    }
    class_method: false
  }
}
class {
  name: "NSPortCoder"
  base_class: "NSCoder"
  method {
    function {
      name: "isBycopy"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "isByref"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "encodePortObject:"
      return_type: "Void"
      parameter {
        name: "aport"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decodePortObject"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "connection"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "portCoderWithReceivePort:sendPort:components:"
      return_type: "ObjCId"
      parameter {
        name: "rcvPort"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "sndPort"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "comps"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithReceivePort:sendPort:components:"
      return_type: "ObjCId"
      parameter {
        name: "rcvPort"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "sndPort"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "comps"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "dispatch"
      return_type: "Void"
    }
    class_method: false
  }
}
class {
  name: "NSPortMessage"
  base_class: "NSObject"
  method {
    function {
      name: "initWithSendPort:receivePort:components:"
      return_type: "ObjCId"
      parameter {
        name: "sendPort"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "replyPort"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "components"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "components"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "receivePort"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "sendPort"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "sendBeforeDate:"
      return_type: "SChar"
      parameter {
        name: "date"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "msgid"
      return_type: "UInt"
    }
    class_method: false
  }
  method {
    function {
      name: "setMsgid:"
      return_type: "Void"
      parameter {
        name: "msgid"
        type: "UInt"
      }
    }
    class_method: false
  }
  ivar {
    name: "localPort"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "remotePort"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "components"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "msgid"
    type: "UInt"
  }
  ivar {
    name: "reserved2"
    type: "Pointer"
  }
  ivar {
    name: "reserved"
    type: "Pointer"
  }
}
class {
  name: "NSPortNameServer"
  base_class: "NSObject"
  method {
    function {
      name: "systemDefaultPortNameServer"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "portForName:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "portForName:host:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "host"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "registerPort:name:"
      return_type: "SChar"
      parameter {
        name: "port"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removePortForName:"
      return_type: "SChar"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
class {
  name: "NSMachBootstrapServer"
  base_class: "NSPortNameServer"
  method {
    function {
      name: "sharedInstance"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "portForName:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "portForName:host:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "host"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "registerPort:name:"
      return_type: "SChar"
      parameter {
        name: "port"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "servicePortWithName:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
class {
  name: "NSMessagePortNameServer"
  base_class: "NSPortNameServer"
  method {
    function {
      name: "sharedInstance"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "portForName:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "portForName:host:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "host"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
class {
  name: "NSSocketPortNameServer"
  base_class: "NSPortNameServer"
  method {
    function {
      name: "sharedInstance"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "portForName:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "portForName:host:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "host"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "registerPort:name:"
      return_type: "SChar"
      parameter {
        name: "port"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removePortForName:"
      return_type: "SChar"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "portForName:host:nameServerPortNumber:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "host"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "portNumber"
        type: "UShort"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "registerPort:name:nameServerPortNumber:"
      return_type: "SChar"
      parameter {
        name: "port"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "portNumber"
        type: "UShort"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setDefaultNameServerPortNumber:"
      return_type: "Void"
      parameter {
        name: "portNumber"
        type: "UShort"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "defaultNameServerPortNumber"
      return_type: "UShort"
    }
    class_method: false
  }
}
class {
  name: "NSProtocolChecker"
  base_class: "NSProxy"
  method {
    function {
      name: "protocol"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "target"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
}
class {
  name: "NSTask"
  base_class: "NSObject"
  method {
    function {
      name: "init"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "setLaunchPath:"
      return_type: "Void"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setArguments:"
      return_type: "Void"
      parameter {
        name: "arguments"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setEnvironment:"
      return_type: "Void"
      parameter {
        name: "dict"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setCurrentDirectoryPath:"
      return_type: "Void"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setStandardInput:"
      return_type: "Void"
      parameter {
        name: "input"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setStandardOutput:"
      return_type: "Void"
      parameter {
        name: "output"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setStandardError:"
      return_type: "Void"
      parameter {
        name: "error"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "launchPath"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "arguments"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "environment"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "currentDirectoryPath"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "standardInput"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "standardOutput"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "standardError"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "launch"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "interrupt"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "terminate"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "suspend"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "resume"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "processIdentifier"
      return_type: "Int"
    }
    class_method: false
  }
  method {
    function {
      name: "isRunning"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "terminationStatus"
      return_type: "Int"
    }
    class_method: false
  }
  method {
    function {
      name: "terminationReason"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "terminationHandler"
      return_type: "BlockPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setTerminationHandler:"
      return_type: "Void"
      parameter {
        name: "terminationHandler"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  property {
    name: "terminationHandler"
    type: "BlockPointer"
  }
}
class {
  name: "NSXMLNode"
  base_class: "NSObject"
  protocol: "NSCopying"
  method {
    function {
      name: "initWithKind:"
      return_type: "ObjCId"
      parameter {
        name: "kind"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithKind:options:"
      return_type: "ObjCId"
      parameter {
        name: "kind"
        type: "ULong"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "document"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "documentWithRootElement:"
      return_type: "ObjCId"
      parameter {
        name: "element"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "elementWithName:"
      return_type: "ObjCId"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "elementWithName:URI:"
      return_type: "ObjCId"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "URI"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "elementWithName:stringValue:"
      return_type: "ObjCId"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "elementWithName:children:attributes:"
      return_type: "ObjCId"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "children"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "attributes"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "attributeWithName:stringValue:"
      return_type: "ObjCId"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "stringValue"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "attributeWithName:URI:stringValue:"
      return_type: "ObjCId"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "URI"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "stringValue"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "namespaceWithName:stringValue:"
      return_type: "ObjCId"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "stringValue"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "processingInstructionWithName:stringValue:"
      return_type: "ObjCId"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "stringValue"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "commentWithStringValue:"
      return_type: "ObjCId"
      parameter {
        name: "stringValue"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "textWithStringValue:"
      return_type: "ObjCId"
      parameter {
        name: "stringValue"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "DTDNodeWithXMLString:"
      return_type: "ObjCId"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "kind"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "setName:"
      return_type: "Void"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "name"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setObjectValue:"
      return_type: "Void"
      parameter {
        name: "value"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "objectValue"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "setStringValue:"
      return_type: "Void"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setStringValue:resolvingEntities:"
      return_type: "Void"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "resolve"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "stringValue"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "index"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "level"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "rootDocument"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "parent"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "childCount"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "children"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "childAtIndex:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "index"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "previousSibling"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "nextSibling"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "previousNode"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "nextNode"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "detach"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "XPath"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "localName"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "prefix"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setURI:"
      return_type: "Void"
      parameter {
        name: "URI"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "URI"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "localNameForName:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "prefixForName:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "predefinedNamespaceForPrefix:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "description"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "XMLString"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "XMLStringWithOptions:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "options"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "canonicalXMLStringPreservingComments:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "comments"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "nodesForXPath:error:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "xpath"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "objectsForXQuery:constants:error:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "xquery"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "constants"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "objectsForXQuery:error:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "xquery"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  ivar {
    name: "_parent"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_objectValue"
    type: "ObjCId"
  }
  ivar {
    name: "_kind"
    type: "ULong"
  }
  ivar {
    name: "_index"
    type: "UInt"
  }
  ivar {
    name: "_private"
    type: "Int"
  }
}
class {
  name: "NSXMLDTD"
  base_class: "NSXMLNode"
  method {
    function {
      name: "initWithContentsOfURL:options:error:"
      return_type: "ObjCId"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mask"
        type: "ULong"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithData:options:error:"
      return_type: "ObjCId"
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mask"
        type: "ULong"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setPublicID:"
      return_type: "Void"
      parameter {
        name: "publicID"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "publicID"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setSystemID:"
      return_type: "Void"
      parameter {
        name: "systemID"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "systemID"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "insertChild:atIndex:"
      return_type: "Void"
      parameter {
        name: "child"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "index"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "insertChildren:atIndex:"
      return_type: "Void"
      parameter {
        name: "children"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "index"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeChildAtIndex:"
      return_type: "Void"
      parameter {
        name: "index"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setChildren:"
      return_type: "Void"
      parameter {
        name: "children"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "addChild:"
      return_type: "Void"
      parameter {
        name: "child"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "replaceChildAtIndex:withNode:"
      return_type: "Void"
      parameter {
        name: "index"
        type: "ULong"
      }
      parameter {
        name: "node"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "entityDeclarationForName:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "notationDeclarationForName:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "elementDeclarationForName:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "attributeDeclarationForName:elementName:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "elementName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "predefinedEntityDeclarationForName:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  ivar {
    name: "_name"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_publicID"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_systemID"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_children"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_childrenHaveMutated"
    type: "SChar"
  }
  ivar {
    name: "_padding3"
    type: "ConstantArray"
  }
  ivar {
    name: "_entities"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_elements"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_notations"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_attributes"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_original"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_modified"
    type: "SChar"
  }
  ivar {
    name: "_padding2"
    type: "ConstantArray"
  }
}
class {
  name: "NSXMLDTDNode"
  base_class: "NSXMLNode"
  method {
    function {
      name: "initWithXMLString:"
      return_type: "ObjCId"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setDTDKind:"
      return_type: "Void"
      parameter {
        name: "kind"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "DTDKind"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "isExternal"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "setPublicID:"
      return_type: "Void"
      parameter {
        name: "publicID"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "publicID"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setSystemID:"
      return_type: "Void"
      parameter {
        name: "systemID"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "systemID"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setNotationName:"
      return_type: "Void"
      parameter {
        name: "notationName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "notationName"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  ivar {
    name: "_DTDKind"
    type: "ULong"
  }
  ivar {
    name: "_name"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_notationName"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_publicID"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_systemID"
    type: "ObjCObjectPointer"
  }
}
class {
  name: "NSXMLDocument"
  base_class: "NSXMLNode"
  method {
    function {
      name: "initWithXMLString:options:error:"
      return_type: "ObjCId"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mask"
        type: "ULong"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithContentsOfURL:options:error:"
      return_type: "ObjCId"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mask"
        type: "ULong"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithData:options:error:"
      return_type: "ObjCId"
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mask"
        type: "ULong"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithRootElement:"
      return_type: "ObjCId"
      parameter {
        name: "element"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "replacementClassForClass:"
      return_type: "ObjCClass"
      parameter {
        name: "cls"
        type: "ObjCClass"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "setCharacterEncoding:"
      return_type: "Void"
      parameter {
        name: "encoding"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "characterEncoding"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setVersion:"
      return_type: "Void"
      parameter {
        name: "version"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "version"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setStandalone:"
      return_type: "Void"
      parameter {
        name: "standalone"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isStandalone"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "setDocumentContentKind:"
      return_type: "Void"
      parameter {
        name: "kind"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "documentContentKind"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "setMIMEType:"
      return_type: "Void"
      parameter {
        name: "MIMEType"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "MIMEType"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setDTD:"
      return_type: "Void"
      parameter {
        name: "documentTypeDeclaration"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "DTD"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setRootElement:"
      return_type: "Void"
      parameter {
        name: "root"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "rootElement"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "insertChild:atIndex:"
      return_type: "Void"
      parameter {
        name: "child"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "index"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "insertChildren:atIndex:"
      return_type: "Void"
      parameter {
        name: "children"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "index"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeChildAtIndex:"
      return_type: "Void"
      parameter {
        name: "index"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setChildren:"
      return_type: "Void"
      parameter {
        name: "children"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "addChild:"
      return_type: "Void"
      parameter {
        name: "child"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "replaceChildAtIndex:withNode:"
      return_type: "Void"
      parameter {
        name: "index"
        type: "ULong"
      }
      parameter {
        name: "node"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "XMLData"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "XMLDataWithOptions:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "options"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "objectByApplyingXSLT:arguments:error:"
      return_type: "ObjCId"
      parameter {
        name: "xslt"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "arguments"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "objectByApplyingXSLTString:arguments:error:"
      return_type: "ObjCId"
      parameter {
        name: "xslt"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "arguments"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "objectByApplyingXSLTAtURL:arguments:error:"
      return_type: "ObjCId"
      parameter {
        name: "xsltURL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "argument"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "validateAndReturnError:"
      return_type: "SChar"
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  ivar {
    name: "_encoding"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_version"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_docType"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_children"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_childrenHaveMutated"
    type: "SChar"
  }
  ivar {
    name: "_standalone"
    type: "SChar"
  }
  ivar {
    name: "padding"
    type: "ConstantArray"
  }
  ivar {
    name: "_rootElement"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_URI"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_extraIvars"
    type: "ObjCId"
  }
  ivar {
    name: "_fidelityMask"
    type: "ULong"
  }
  ivar {
    name: "_contentKind"
    type: "ULong"
  }
}
class {
  name: "NSXMLElement"
  base_class: "NSXMLNode"
  method {
    function {
      name: "initWithName:"
      return_type: "ObjCId"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithName:URI:"
      return_type: "ObjCId"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "URI"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithName:stringValue:"
      return_type: "ObjCId"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithXMLString:error:"
      return_type: "ObjCId"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "elementsForName:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "elementsForLocalName:URI:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "localName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "URI"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "addAttribute:"
      return_type: "Void"
      parameter {
        name: "attribute"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeAttributeForName:"
      return_type: "Void"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setAttributes:"
      return_type: "Void"
      parameter {
        name: "attributes"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setAttributesWithDictionary:"
      return_type: "Void"
      parameter {
        name: "attributes"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "attributes"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "attributeForName:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "attributeForLocalName:URI:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "localName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "URI"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "addNamespace:"
      return_type: "Void"
      parameter {
        name: "aNamespace"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeNamespaceForPrefix:"
      return_type: "Void"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setNamespaces:"
      return_type: "Void"
      parameter {
        name: "namespaces"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "namespaces"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "namespaceForPrefix:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "resolveNamespaceForName:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "resolvePrefixForNamespaceURI:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "namespaceURI"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "insertChild:atIndex:"
      return_type: "Void"
      parameter {
        name: "child"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "index"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "insertChildren:atIndex:"
      return_type: "Void"
      parameter {
        name: "children"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "index"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeChildAtIndex:"
      return_type: "Void"
      parameter {
        name: "index"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setChildren:"
      return_type: "Void"
      parameter {
        name: "children"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "addChild:"
      return_type: "Void"
      parameter {
        name: "child"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "replaceChildAtIndex:withNode:"
      return_type: "Void"
      parameter {
        name: "index"
        type: "ULong"
      }
      parameter {
        name: "node"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "normalizeAdjacentTextNodesPreservingCDATA:"
      return_type: "Void"
      parameter {
        name: "preserve"
        type: "SChar"
      }
    }
    class_method: false
  }
  ivar {
    name: "_name"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_attributes"
    type: "ObjCId"
  }
  ivar {
    name: "_namespaces"
    type: "ObjCId"
  }
  ivar {
    name: "_children"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_childrenHaveMutated"
    type: "SChar"
  }
  ivar {
    name: "_zeroOrOneAttributes"
    type: "SChar"
  }
  ivar {
    name: "_zeroOrOneNamespaces"
    type: "SChar"
  }
  ivar {
    name: "_padding"
    type: "UChar"
  }
  ivar {
    name: "_URI"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_prefixIndex"
    type: "Long"
  }
}
class {
  name: "NSURLDownload"
  base_class: "NSObject"
  method {
    function {
      name: "canResumeDownloadDecodedWithEncodingMIMEType:"
      return_type: "SChar"
      parameter {
        name: "MIMEType"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithRequest:delegate:"
      return_type: "ObjCId"
      parameter {
        name: "request"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "delegate"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithResumeData:delegate:path:"
      return_type: "ObjCId"
      parameter {
        name: "resumeData"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "delegate"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "cancel"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "setDestination:allowOverwrite:"
      return_type: "Void"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "allowOverwrite"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "request"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "resumeData"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setDeletesFileUponFailure:"
      return_type: "Void"
      parameter {
        name: "deletesFileUponFailure"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "deletesFileUponFailure"
      return_type: "SChar"
    }
    class_method: false
  }
  ivar {
    name: "_internal"
    type: "ObjCObjectPointer"
  }
}
class {
  name: "NSAffineTransform"
  base_class: "NSObject"
  protocol: "NSCopying"
  protocol: "NSCoding"
  method {
    function {
      name: "transform"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "initWithTransform:"
      return_type: "ObjCId"
      parameter {
        name: "transform"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "translateXBy:yBy:"
      return_type: "Void"
      parameter {
        name: "deltaX"
        type: "Double"
      }
      parameter {
        name: "deltaY"
        type: "Double"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "rotateByDegrees:"
      return_type: "Void"
      parameter {
        name: "angle"
        type: "Double"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "rotateByRadians:"
      return_type: "Void"
      parameter {
        name: "angle"
        type: "Double"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "scaleBy:"
      return_type: "Void"
      parameter {
        name: "scale"
        type: "Double"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "scaleXBy:yBy:"
      return_type: "Void"
      parameter {
        name: "scaleX"
        type: "Double"
      }
      parameter {
        name: "scaleY"
        type: "Double"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "invert"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "appendTransform:"
      return_type: "Void"
      parameter {
        name: "transform"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "prependTransform:"
      return_type: "Void"
      parameter {
        name: "transform"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "transformPoint:"
      return_type: "Unexposed"
      parameter {
        name: "aPoint"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "transformSize:"
      return_type: "Unexposed"
      parameter {
        name: "aSize"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "transformStruct"
      return_type: "Unexposed"
    }
    class_method: false
  }
  method {
    function {
      name: "setTransformStruct:"
      return_type: "Void"
      parameter {
        name: "transformStruct"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  ivar {
    name: "_transformStruct"
    type: "Unexposed"
  }
}
class {
  name: "NSAppleEventDescriptor"
  base_class: "NSObject"
  protocol: "NSCopying"
  method {
    function {
      name: "nullDescriptor"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "descriptorWithDescriptorType:bytes:length:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "descriptorType"
        type: "UInt"
      }
      parameter {
        name: "bytes"
        type: "Pointer"
      }
      parameter {
        name: "byteCount"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "descriptorWithDescriptorType:data:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "descriptorType"
        type: "UInt"
      }
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "descriptorWithBoolean:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "boolean"
        type: "UChar"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "descriptorWithEnumCode:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "enumerator"
        type: "UInt"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "descriptorWithInt32:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "signedInt"
        type: "Int"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "descriptorWithTypeCode:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "typeCode"
        type: "UInt"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "descriptorWithString:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "appleEventWithEventClass:eventID:targetDescriptor:returnID:transactionID:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "eventClass"
        type: "UInt"
      }
      parameter {
        name: "eventID"
        type: "UInt"
      }
      parameter {
        name: "targetDescriptor"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "returnID"
        type: "Short"
      }
      parameter {
        name: "transactionID"
        type: "Int"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "listDescriptor"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "recordDescriptor"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "initWithAEDescNoCopy:"
      return_type: "ObjCId"
      parameter {
        name: "aeDesc"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithDescriptorType:bytes:length:"
      return_type: "ObjCId"
      parameter {
        name: "descriptorType"
        type: "UInt"
      }
      parameter {
        name: "bytes"
        type: "Pointer"
      }
      parameter {
        name: "byteCount"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithDescriptorType:data:"
      return_type: "ObjCId"
      parameter {
        name: "descriptorType"
        type: "UInt"
      }
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithEventClass:eventID:targetDescriptor:returnID:transactionID:"
      return_type: "ObjCId"
      parameter {
        name: "eventClass"
        type: "UInt"
      }
      parameter {
        name: "eventID"
        type: "UInt"
      }
      parameter {
        name: "targetDescriptor"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "returnID"
        type: "Short"
      }
      parameter {
        name: "transactionID"
        type: "Int"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initListDescriptor"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "initRecordDescriptor"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "aeDesc"
      return_type: "Pointer"
    }
    class_method: false
  }
  method {
    function {
      name: "descriptorType"
      return_type: "UInt"
    }
    class_method: false
  }
  method {
    function {
      name: "data"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "booleanValue"
      return_type: "UChar"
    }
    class_method: false
  }
  method {
    function {
      name: "enumCodeValue"
      return_type: "UInt"
    }
    class_method: false
  }
  method {
    function {
      name: "int32Value"
      return_type: "Int"
    }
    class_method: false
  }
  method {
    function {
      name: "typeCodeValue"
      return_type: "UInt"
    }
    class_method: false
  }
  method {
    function {
      name: "stringValue"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "eventClass"
      return_type: "UInt"
    }
    class_method: false
  }
  method {
    function {
      name: "eventID"
      return_type: "UInt"
    }
    class_method: false
  }
  method {
    function {
      name: "returnID"
      return_type: "Short"
    }
    class_method: false
  }
  method {
    function {
      name: "transactionID"
      return_type: "Int"
    }
    class_method: false
  }
  method {
    function {
      name: "setParamDescriptor:forKeyword:"
      return_type: "Void"
      parameter {
        name: "descriptor"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "keyword"
        type: "UInt"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "paramDescriptorForKeyword:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "keyword"
        type: "UInt"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeParamDescriptorWithKeyword:"
      return_type: "Void"
      parameter {
        name: "keyword"
        type: "UInt"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setAttributeDescriptor:forKeyword:"
      return_type: "Void"
      parameter {
        name: "descriptor"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "keyword"
        type: "UInt"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "attributeDescriptorForKeyword:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "keyword"
        type: "UInt"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "numberOfItems"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "insertDescriptor:atIndex:"
      return_type: "Void"
      parameter {
        name: "descriptor"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "index"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "descriptorAtIndex:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "index"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeDescriptorAtIndex:"
      return_type: "Void"
      parameter {
        name: "index"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setDescriptor:forKeyword:"
      return_type: "Void"
      parameter {
        name: "descriptor"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "keyword"
        type: "UInt"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "descriptorForKeyword:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "keyword"
        type: "UInt"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeDescriptorWithKeyword:"
      return_type: "Void"
      parameter {
        name: "keyword"
        type: "UInt"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "keywordForDescriptorAtIndex:"
      return_type: "UInt"
      parameter {
        name: "index"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "coerceToDescriptorType:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "descriptorType"
        type: "UInt"
      }
    }
    class_method: false
  }
  ivar {
    name: "_desc"
    type: "Unexposed"
  }
  ivar {
    name: "_hasValidDesc"
    type: "SChar"
  }
  ivar {
    name: "_padding"
    type: "ConstantArray"
  }
}
class {
  name: "NSAppleEventManager"
  base_class: "NSObject"
  method {
    function {
      name: "sharedAppleEventManager"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "setEventHandler:andSelector:forEventClass:andEventID:"
      return_type: "Void"
      parameter {
        name: "handler"
        type: "ObjCId"
      }
      parameter {
        name: "handleEventSelector"
        type: "ObjCSel"
      }
      parameter {
        name: "eventClass"
        type: "UInt"
      }
      parameter {
        name: "eventID"
        type: "UInt"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeEventHandlerForEventClass:andEventID:"
      return_type: "Void"
      parameter {
        name: "eventClass"
        type: "UInt"
      }
      parameter {
        name: "eventID"
        type: "UInt"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "dispatchRawAppleEvent:withRawReply:handlerRefCon:"
      return_type: "Short"
      parameter {
        name: "theAppleEvent"
        type: "Pointer"
      }
      parameter {
        name: "theReply"
        type: "Pointer"
      }
      parameter {
        name: "handlerRefCon"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "currentAppleEvent"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "currentReplyAppleEvent"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "suspendCurrentAppleEvent"
      return_type: "Pointer"
    }
    class_method: false
  }
  method {
    function {
      name: "appleEventForSuspensionID:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "suspensionID"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "replyAppleEventForSuspensionID:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "suspensionID"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setCurrentAppleEventAndReplyEventWithSuspensionID:"
      return_type: "Void"
      parameter {
        name: "suspensionID"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "resumeWithSuspensionID:"
      return_type: "Void"
      parameter {
        name: "suspensionID"
        type: "Pointer"
      }
    }
    class_method: false
  }
  ivar {
    name: "_isPreparedForDispatch"
    type: "SChar"
  }
  ivar {
    name: "_padding"
    type: "ConstantArray"
  }
}
class {
  name: "NSAppleScript"
  base_class: "NSObject"
  protocol: "NSCopying"
  method {
    function {
      name: "initWithContentsOfURL:error:"
      return_type: "ObjCId"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "errorInfo"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithSource:"
      return_type: "ObjCId"
      parameter {
        name: "source"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "source"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "isCompiled"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "compileAndReturnError:"
      return_type: "SChar"
      parameter {
        name: "errorInfo"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "executeAndReturnError:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "errorInfo"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "executeAppleEvent:error:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "event"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "errorInfo"
        type: "Pointer"
      }
    }
    class_method: false
  }
  ivar {
    name: "_source"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_compiledScriptID"
    type: "UInt"
  }
  ivar {
    name: "_reserved1"
    type: "Pointer"
  }
  ivar {
    name: "_reserved2"
    type: "Pointer"
  }
}
class {
  name: "NSClassDescription"
  base_class: "NSObject"
  method {
    function {
      name: "registerClassDescription:forClass:"
      return_type: "Void"
      parameter {
        name: "description"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "aClass"
        type: "ObjCClass"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "invalidateClassDescriptionCache"
      return_type: "Void"
    }
    class_method: true
  }
  method {
    function {
      name: "classDescriptionForClass:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "aClass"
        type: "ObjCClass"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "attributeKeys"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "toOneRelationshipKeys"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "toManyRelationshipKeys"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "inverseForRelationshipKey:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "relationshipKey"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
class {
  name: "NSDistributedLock"
  base_class: "NSObject"
  method {
    function {
      name: "lockWithPath:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithPath:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "tryLock"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "unlock"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "breakLock"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "lockDate"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  ivar {
    name: "_priv"
    type: "Pointer"
  }
}
class {
  name: "NSGarbageCollector"
  base_class: "NSObject"
  method {
    function {
      name: "defaultCollector"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "isCollecting"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "disable"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "enable"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "isEnabled"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "collectIfNeeded"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "collectExhaustively"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "disableCollectorForPointer:"
      return_type: "Void"
      parameter {
        name: "ptr"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "enableCollectorForPointer:"
      return_type: "Void"
      parameter {
        name: "ptr"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "zone"
      return_type: "Pointer"
    }
    class_method: false
  }
}
class {
  name: "NSHost"
  base_class: "NSObject"
  method {
    function {
      name: "currentHost"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "hostWithName:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "hostWithAddress:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "address"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "isEqualToHost:"
      return_type: "SChar"
      parameter {
        name: "aHost"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "name"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "names"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "address"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "addresses"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "localizedName"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setHostCacheEnabled:"
      return_type: "Void"
      parameter {
        name: "flag"
        type: "SChar"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "isHostCacheEnabled"
      return_type: "SChar"
    }
    class_method: true
  }
  method {
    function {
      name: "flushHostCache"
      return_type: "Void"
    }
    class_method: true
  }
  ivar {
    name: "names"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "addresses"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "reserved"
    type: "ObjCId"
  }
}
class {
  name: "NSLinguisticTagger"
  base_class: "NSObject"
  method {
    function {
      name: "initWithTagSchemes:options:"
      return_type: "ObjCId"
      parameter {
        name: "tagSchemes"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "opts"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "tagSchemes"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setString:"
      return_type: "Void"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "string"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "availableTagSchemesForLanguage:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "language"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "setOrthography:range:"
      return_type: "Void"
      parameter {
        name: "orthography"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "orthographyAtIndex:effectiveRange:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "charIndex"
        type: "ULong"
      }
      parameter {
        name: "effectiveRange"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "stringEditedInRange:changeInLength:"
      return_type: "Void"
      parameter {
        name: "newRange"
        type: "Unexposed"
      }
      parameter {
        name: "delta"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "enumerateTagsInRange:scheme:options:usingBlock:"
      return_type: "Void"
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "tagScheme"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "block"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "sentenceRangeForRange:"
      return_type: "Unexposed"
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "tagAtIndex:scheme:tokenRange:sentenceRange:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "charIndex"
        type: "ULong"
      }
      parameter {
        name: "tagScheme"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "tokenRange"
        type: "Pointer"
      }
      parameter {
        name: "sentenceRange"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "tagsInRange:scheme:options:tokenRanges:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "tagScheme"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "tokenRanges"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "possibleTagsAtIndex:scheme:tokenRange:sentenceRange:scores:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "charIndex"
        type: "ULong"
      }
      parameter {
        name: "tagScheme"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "tokenRange"
        type: "Pointer"
      }
      parameter {
        name: "sentenceRange"
        type: "Pointer"
      }
      parameter {
        name: "scores"
        type: "Pointer"
      }
    }
    class_method: false
  }
  ivar {
    name: "_schemes"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_options"
    type: "ULong"
  }
  ivar {
    name: "_string"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_orthographyArray"
    type: "ObjCId"
  }
  ivar {
    name: "_tokenArray"
    type: "ObjCId"
  }
  ivar {
    name: "_reserved"
    type: "ObjCId"
  }
}
class {
  name: "NSScriptClassDescription"
  base_class: "NSClassDescription"
  method {
    function {
      name: "classDescriptionForClass:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "aClass"
        type: "ObjCClass"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithSuiteName:className:dictionary:"
      return_type: "ObjCId"
      parameter {
        name: "suiteName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "className"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "classDeclaration"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "suiteName"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "className"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "implementationClassName"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "superclassDescription"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "appleEventCode"
      return_type: "UInt"
    }
    class_method: false
  }
  method {
    function {
      name: "matchesAppleEventCode:"
      return_type: "SChar"
      parameter {
        name: "appleEventCode"
        type: "UInt"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "supportsCommand:"
      return_type: "SChar"
      parameter {
        name: "commandDescription"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "selectorForCommand:"
      return_type: "ObjCSel"
      parameter {
        name: "commandDescription"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "typeForKey:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "classDescriptionForKey:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "appleEventCodeForKey:"
      return_type: "UInt"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "keyWithAppleEventCode:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "appleEventCode"
        type: "UInt"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "defaultSubcontainerAttributeKey"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "isLocationRequiredToCreateForKey:"
      return_type: "SChar"
      parameter {
        name: "toManyRelationshipKey"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "hasPropertyForKey:"
      return_type: "SChar"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "hasOrderedToManyRelationshipForKey:"
      return_type: "SChar"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "hasReadablePropertyForKey:"
      return_type: "SChar"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "hasWritablePropertyForKey:"
      return_type: "SChar"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  ivar {
    name: "_suiteName"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_objcClassName"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_appleEventCode"
    type: "UInt"
  }
  ivar {
    name: "_superclassNameOrDescription"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_attributeDescriptions"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_toOneRelationshipDescriptions"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_toManyRelationshipDescriptions"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_commandMethodSelectorsByName"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_moreVars"
    type: "ObjCId"
  }
}
class {
  name: "NSScriptCoercionHandler"
  base_class: "NSObject"
  method {
    function {
      name: "sharedCoercionHandler"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "coerceValue:toClass:"
      return_type: "ObjCId"
      parameter {
        name: "value"
        type: "ObjCId"
      }
      parameter {
        name: "toClass"
        type: "ObjCClass"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "registerCoercer:selector:toConvertFromClass:toClass:"
      return_type: "Void"
      parameter {
        name: "coercer"
        type: "ObjCId"
      }
      parameter {
        name: "selector"
        type: "ObjCSel"
      }
      parameter {
        name: "fromClass"
        type: "ObjCClass"
      }
      parameter {
        name: "toClass"
        type: "ObjCClass"
      }
    }
    class_method: false
  }
  ivar {
    name: "_coercers"
    type: "ObjCId"
  }
}
class {
  name: "NSScriptCommand"
  base_class: "NSObject"
  protocol: "NSCoding"
  method {
    function {
      name: "initWithCommandDescription:"
      return_type: "ObjCId"
      parameter {
        name: "commandDef"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "commandDescription"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setDirectParameter:"
      return_type: "Void"
      parameter {
        name: "directParameter"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "directParameter"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "setReceiversSpecifier:"
      return_type: "Void"
      parameter {
        name: "receiversRef"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "receiversSpecifier"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "evaluatedReceivers"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "setArguments:"
      return_type: "Void"
      parameter {
        name: "args"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "arguments"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "evaluatedArguments"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "isWellFormed"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "performDefaultImplementation"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "executeCommand"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "setScriptErrorNumber:"
      return_type: "Void"
      parameter {
        name: "errorNumber"
        type: "Int"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setScriptErrorOffendingObjectDescriptor:"
      return_type: "Void"
      parameter {
        name: "errorOffendingObjectDescriptor"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setScriptErrorExpectedTypeDescriptor:"
      return_type: "Void"
      parameter {
        name: "errorExpectedTypeDescriptor"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setScriptErrorString:"
      return_type: "Void"
      parameter {
        name: "errorString"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "scriptErrorNumber"
      return_type: "Int"
    }
    class_method: false
  }
  method {
    function {
      name: "scriptErrorOffendingObjectDescriptor"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "scriptErrorExpectedTypeDescriptor"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "scriptErrorString"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "currentCommand"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "appleEvent"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "suspendExecution"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "resumeExecutionWithResult:"
      return_type: "Void"
      parameter {
        name: "result"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  ivar {
    name: "_commandDescription"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_directParameter"
    type: "ObjCId"
  }
  ivar {
    name: "_receiversSpecifier"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_evaluatedReceivers"
    type: "ObjCId"
  }
  ivar {
    name: "_arguments"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_evaluatedArguments"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_flags"
    type: "Unexposed"
  }
  ivar {
    name: "_moreVars"
    type: "ObjCId"
  }
  ivar {
    name: "_reserved"
    type: "Pointer"
  }
}
class {
  name: "NSScriptCommandDescription"
  base_class: "NSObject"
  protocol: "NSCoding"
  method {
    function {
      name: "initWithSuiteName:commandName:dictionary:"
      return_type: "ObjCId"
      parameter {
        name: "suiteName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "commandName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "commandDeclaration"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "suiteName"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "commandName"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "appleEventClassCode"
      return_type: "UInt"
    }
    class_method: false
  }
  method {
    function {
      name: "appleEventCode"
      return_type: "UInt"
    }
    class_method: false
  }
  method {
    function {
      name: "commandClassName"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "returnType"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "appleEventCodeForReturnType"
      return_type: "UInt"
    }
    class_method: false
  }
  method {
    function {
      name: "argumentNames"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "typeForArgumentWithName:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "argumentName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "appleEventCodeForArgumentWithName:"
      return_type: "UInt"
      parameter {
        name: "argumentName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isOptionalArgumentWithName:"
      return_type: "SChar"
      parameter {
        name: "argumentName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "createCommandInstance"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "createCommandInstanceWithZone:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "zone"
        type: "Pointer"
      }
    }
    class_method: false
  }
  ivar {
    name: "_suiteName"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_plistCommandName"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_classAppleEventCode"
    type: "UInt"
  }
  ivar {
    name: "_idAppleEventCode"
    type: "UInt"
  }
  ivar {
    name: "_objcClassName"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_resultTypeNameOrDescription"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_plistResultTypeAppleEventCode"
    type: "UInt"
  }
  ivar {
    name: "_moreVars"
    type: "ObjCId"
  }
}
class {
  name: "NSScriptExecutionContext"
  base_class: "NSObject"
  method {
    function {
      name: "sharedScriptExecutionContext"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "topLevelObject"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "setTopLevelObject:"
      return_type: "Void"
      parameter {
        name: "obj"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "objectBeingTested"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "setObjectBeingTested:"
      return_type: "Void"
      parameter {
        name: "obj"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "rangeContainerObject"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "setRangeContainerObject:"
      return_type: "Void"
      parameter {
        name: "obj"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  ivar {
    name: "_topLevelObject"
    type: "ObjCId"
  }
  ivar {
    name: "_objectBeingTested"
    type: "ObjCId"
  }
  ivar {
    name: "_rangeContainerObject"
    type: "ObjCId"
  }
  ivar {
    name: "_moreVars"
    type: "ObjCId"
  }
}
class {
  name: "NSScriptObjectSpecifier"
  base_class: "NSObject"
  protocol: "NSCoding"
  method {
    function {
      name: "objectSpecifierWithDescriptor:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "descriptor"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithContainerSpecifier:key:"
      return_type: "ObjCId"
      parameter {
        name: "container"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "property"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithContainerClassDescription:containerSpecifier:key:"
      return_type: "ObjCId"
      parameter {
        name: "classDesc"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "container"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "property"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "childSpecifier"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setChildSpecifier:"
      return_type: "Void"
      parameter {
        name: "child"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "containerSpecifier"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setContainerSpecifier:"
      return_type: "Void"
      parameter {
        name: "subRef"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "containerIsObjectBeingTested"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "setContainerIsObjectBeingTested:"
      return_type: "Void"
      parameter {
        name: "flag"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "containerIsRangeContainerObject"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "setContainerIsRangeContainerObject:"
      return_type: "Void"
      parameter {
        name: "flag"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "key"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setKey:"
      return_type: "Void"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "containerClassDescription"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setContainerClassDescription:"
      return_type: "Void"
      parameter {
        name: "classDesc"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "keyClassDescription"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "indicesOfObjectsByEvaluatingWithContainer:count:"
      return_type: "Pointer"
      parameter {
        name: "container"
        type: "ObjCId"
      }
      parameter {
        name: "count"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "objectsByEvaluatingWithContainers:"
      return_type: "ObjCId"
      parameter {
        name: "containers"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "objectsByEvaluatingSpecifier"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "evaluationErrorNumber"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "setEvaluationErrorNumber:"
      return_type: "Void"
      parameter {
        name: "error"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "evaluationErrorSpecifier"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "descriptor"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  ivar {
    name: "_container"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_child"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_key"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_containerClassDescription"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_containerIsObjectBeingTested"
    type: "SChar"
  }
  ivar {
    name: "_containerIsRangeContainerObject"
    type: "SChar"
  }
  ivar {
    name: "_padding"
    type: "ConstantArray"
  }
  ivar {
    name: "_descriptor"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_error"
    type: "Long"
  }
}
class {
  name: "NSIndexSpecifier"
  base_class: "NSScriptObjectSpecifier"
  method {
    function {
      name: "initWithContainerClassDescription:containerSpecifier:key:index:"
      return_type: "ObjCId"
      parameter {
        name: "classDesc"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "container"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "property"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "index"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "index"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "setIndex:"
      return_type: "Void"
      parameter {
        name: "index"
        type: "Long"
      }
    }
    class_method: false
  }
  ivar {
    name: "_index"
    type: "Long"
  }
}
class {
  name: "NSMiddleSpecifier"
  base_class: "NSScriptObjectSpecifier"
}
class {
  name: "NSNameSpecifier"
  base_class: "NSScriptObjectSpecifier"
  method {
    function {
      name: "initWithContainerClassDescription:containerSpecifier:key:name:"
      return_type: "ObjCId"
      parameter {
        name: "classDesc"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "container"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "property"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "name"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setName:"
      return_type: "Void"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  ivar {
    name: "_name"
    type: "ObjCObjectPointer"
  }
}
class {
  name: "NSPositionalSpecifier"
  base_class: "NSObject"
  method {
    function {
      name: "initWithPosition:objectSpecifier:"
      return_type: "ObjCId"
      parameter {
        name: "position"
        type: "ULong"
      }
      parameter {
        name: "specifier"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "position"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "objectSpecifier"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setInsertionClassDescription:"
      return_type: "Void"
      parameter {
        name: "classDescription"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "evaluate"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "insertionContainer"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "insertionKey"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "insertionIndex"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "insertionReplaces"
      return_type: "SChar"
    }
    class_method: false
  }
  ivar {
    name: "_specifier"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_unadjustedPosition"
    type: "ULong"
  }
  ivar {
    name: "_insertionClassDescription"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_moreVars"
    type: "ObjCId"
  }
  ivar {
    name: "_reserved0"
    type: "Pointer"
  }
}
class {
  name: "NSPropertySpecifier"
  base_class: "NSScriptObjectSpecifier"
}
class {
  name: "NSRandomSpecifier"
  base_class: "NSScriptObjectSpecifier"
}
class {
  name: "NSRangeSpecifier"
  base_class: "NSScriptObjectSpecifier"
  method {
    function {
      name: "initWithContainerClassDescription:containerSpecifier:key:startSpecifier:endSpecifier:"
      return_type: "ObjCId"
      parameter {
        name: "classDesc"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "container"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "property"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "startSpec"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "endSpec"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "startSpecifier"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setStartSpecifier:"
      return_type: "Void"
      parameter {
        name: "startSpec"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "endSpecifier"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setEndSpecifier:"
      return_type: "Void"
      parameter {
        name: "endSpec"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  ivar {
    name: "_startSpec"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_endSpec"
    type: "ObjCObjectPointer"
  }
}
class {
  name: "NSRelativeSpecifier"
  base_class: "NSScriptObjectSpecifier"
  method {
    function {
      name: "initWithContainerClassDescription:containerSpecifier:key:relativePosition:baseSpecifier:"
      return_type: "ObjCId"
      parameter {
        name: "classDesc"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "container"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "property"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "relPos"
        type: "ULong"
      }
      parameter {
        name: "baseSpecifier"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "relativePosition"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "setRelativePosition:"
      return_type: "Void"
      parameter {
        name: "relPos"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "baseSpecifier"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setBaseSpecifier:"
      return_type: "Void"
      parameter {
        name: "baseSpecifier"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  ivar {
    name: "_relativePosition"
    type: "ULong"
  }
  ivar {
    name: "_baseSpecifier"
    type: "ObjCObjectPointer"
  }
}
class {
  name: "NSUniqueIDSpecifier"
  base_class: "NSScriptObjectSpecifier"
  method {
    function {
      name: "initWithContainerClassDescription:containerSpecifier:key:uniqueID:"
      return_type: "ObjCId"
      parameter {
        name: "classDesc"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "container"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "property"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "uniqueID"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "uniqueID"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "setUniqueID:"
      return_type: "Void"
      parameter {
        name: "uniqueID"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  ivar {
    name: "_uniqueID"
    type: "ObjCId"
  }
}
class {
  name: "NSWhoseSpecifier"
  base_class: "NSScriptObjectSpecifier"
  method {
    function {
      name: "initWithContainerClassDescription:containerSpecifier:key:test:"
      return_type: "ObjCId"
      parameter {
        name: "classDesc"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "container"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "property"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "test"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "test"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setTest:"
      return_type: "Void"
      parameter {
        name: "test"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "startSubelementIdentifier"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "setStartSubelementIdentifier:"
      return_type: "Void"
      parameter {
        name: "subelement"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "startSubelementIndex"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "setStartSubelementIndex:"
      return_type: "Void"
      parameter {
        name: "index"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "endSubelementIdentifier"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "setEndSubelementIdentifier:"
      return_type: "Void"
      parameter {
        name: "subelement"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "endSubelementIndex"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "setEndSubelementIndex:"
      return_type: "Void"
      parameter {
        name: "index"
        type: "Long"
      }
    }
    class_method: false
  }
  ivar {
    name: "_test"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_startSubelementIdentifier"
    type: "ULong"
  }
  ivar {
    name: "_startSubelementIndex"
    type: "Long"
  }
  ivar {
    name: "_endSubelementIdentifier"
    type: "ULong"
  }
  ivar {
    name: "_endSubelementIndex"
    type: "Long"
  }
}
class {
  name: "NSCloneCommand"
  base_class: "NSScriptCommand"
  method {
    function {
      name: "setReceiversSpecifier:"
      return_type: "Void"
      parameter {
        name: "receiversRef"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "keySpecifier"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  ivar {
    name: "_keySpecifier"
    type: "ObjCObjectPointer"
  }
}
class {
  name: "NSCloseCommand"
  base_class: "NSScriptCommand"
  method {
    function {
      name: "saveOptions"
      return_type: "ULong"
    }
    class_method: false
  }
}
class {
  name: "NSCountCommand"
  base_class: "NSScriptCommand"
}
class {
  name: "NSCreateCommand"
  base_class: "NSScriptCommand"
  method {
    function {
      name: "createClassDescription"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "resolvedKeyDictionary"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  ivar {
    name: "_moreVars2"
    type: "ObjCId"
  }
}
class {
  name: "NSDeleteCommand"
  base_class: "NSScriptCommand"
  method {
    function {
      name: "setReceiversSpecifier:"
      return_type: "Void"
      parameter {
        name: "receiversRef"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "keySpecifier"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  ivar {
    name: "_keySpecifier"
    type: "ObjCObjectPointer"
  }
}
class {
  name: "NSExistsCommand"
  base_class: "NSScriptCommand"
}
class {
  name: "NSGetCommand"
  base_class: "NSScriptCommand"
}
class {
  name: "NSMoveCommand"
  base_class: "NSScriptCommand"
  method {
    function {
      name: "setReceiversSpecifier:"
      return_type: "Void"
      parameter {
        name: "receiversRef"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "keySpecifier"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  ivar {
    name: "_keySpecifier"
    type: "ObjCObjectPointer"
  }
}
class {
  name: "NSQuitCommand"
  base_class: "NSScriptCommand"
  method {
    function {
      name: "saveOptions"
      return_type: "ULong"
    }
    class_method: false
  }
}
class {
  name: "NSSetCommand"
  base_class: "NSScriptCommand"
  method {
    function {
      name: "setReceiversSpecifier:"
      return_type: "Void"
      parameter {
        name: "receiversRef"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "keySpecifier"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  ivar {
    name: "_keySpecifier"
    type: "ObjCObjectPointer"
  }
}
class {
  name: "NSScriptSuiteRegistry"
  base_class: "NSObject"
  method {
    function {
      name: "sharedScriptSuiteRegistry"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "setSharedScriptSuiteRegistry:"
      return_type: "Void"
      parameter {
        name: "registry"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "loadSuitesFromBundle:"
      return_type: "Void"
      parameter {
        name: "bundle"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "loadSuiteWithDictionary:fromBundle:"
      return_type: "Void"
      parameter {
        name: "suiteDeclaration"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "bundle"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "registerClassDescription:"
      return_type: "Void"
      parameter {
        name: "classDescription"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "registerCommandDescription:"
      return_type: "Void"
      parameter {
        name: "commandDescription"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "suiteNames"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "appleEventCodeForSuite:"
      return_type: "UInt"
      parameter {
        name: "suiteName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "bundleForSuite:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "suiteName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "classDescriptionsInSuite:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "suiteName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "commandDescriptionsInSuite:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "suiteName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "suiteForAppleEventCode:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "appleEventCode"
        type: "UInt"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "classDescriptionWithAppleEventCode:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "appleEventCode"
        type: "UInt"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "commandDescriptionWithAppleEventClass:andAppleEventCode:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "appleEventClassCode"
        type: "UInt"
      }
      parameter {
        name: "appleEventIDCode"
        type: "UInt"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "aeteResource:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "languageName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  ivar {
    name: "_isLoadingSDEFFiles"
    type: "SChar"
  }
  ivar {
    name: "_reserved1"
    type: "ConstantArray"
  }
  ivar {
    name: "_seenBundles"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_suiteDescriptionsBeingCollected"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_classDescriptionNeedingRegistration"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_suiteDescriptions"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_commandDescriptionNeedingRegistration"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_cachedClassDescriptionsByAppleEventCode"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_cachedCommandDescriptionsByAppleEventCodes"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_cachedSuiteDescriptionsByName"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_complexTypeDescriptionsByName"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_listTypeDescriptionsByName"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_nextComplexTypeAppleEventCode"
    type: "UInt"
  }
  ivar {
    name: "_reserved2"
    type: "ConstantArray"
  }
}
class {
  name: "NSScriptWhoseTest"
  base_class: "NSObject"
  protocol: "NSCoding"
  method {
    function {
      name: "isTrue"
      return_type: "SChar"
    }
    class_method: false
  }
}
class {
  name: "NSLogicalTest"
  base_class: "NSScriptWhoseTest"
  method {
    function {
      name: "initAndTestWithTests:"
      return_type: "ObjCId"
      parameter {
        name: "subTests"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initOrTestWithTests:"
      return_type: "ObjCId"
      parameter {
        name: "subTests"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initNotTestWithTest:"
      return_type: "ObjCId"
      parameter {
        name: "subTest"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  ivar {
    name: "_operator"
    type: "Int"
  }
  ivar {
    name: "_subTests"
    type: "ObjCId"
  }
}
class {
  name: "NSSpecifierTest"
  base_class: "NSScriptWhoseTest"
  method {
    function {
      name: "initWithObjectSpecifier:comparisonOperator:testObject:"
      return_type: "ObjCId"
      parameter {
        name: "obj1"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "compOp"
        type: "ULong"
      }
      parameter {
        name: "obj2"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  ivar {
    name: "_comparisonOperator"
    type: "ULong"
  }
  ivar {
    name: "_object1"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_object2"
    type: "ObjCId"
  }
}
class {
  name: "NSSpellServer"
  base_class: "NSObject"
  method {
    function {
      name: "setDelegate:"
      return_type: "Void"
      parameter {
        name: "anObject"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "delegate"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "registerLanguage:byVendor:"
      return_type: "SChar"
      parameter {
        name: "language"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "vendor"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isWordInUserDictionaries:caseSensitive:"
      return_type: "SChar"
      parameter {
        name: "word"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "flag"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "run"
      return_type: "Void"
    }
    class_method: false
  }
  ivar {
    name: "_delegate"
    type: "ObjCId"
  }
  ivar {
    name: "_caseSensitive"
    type: "Long"
  }
  ivar {
    name: "_spellServerConnection"
    type: "ObjCId"
  }
  ivar {
    name: "_dictionaries"
    type: "ObjCId"
  }
  ivar {
    name: "_learnedDictionaries"
    type: "ObjCObjectPointer"
  }
  ivar {
    name: "_ssFlags"
    type: "Unexposed"
  }
  ivar {
    name: "_checker"
    type: "ObjCId"
  }
  ivar {
    name: "_reservedSpellServer"
    type: "Pointer"
  }
}
protocol {
  name: "NSObject"
  method {
    function {
      name: "isEqual:"
      return_type: "SChar"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "hash"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "superclass"
      return_type: "ObjCClass"
    }
    class_method: false
  }
  method {
    function {
      name: "class"
      return_type: "ObjCClass"
    }
    class_method: false
  }
  method {
    function {
      name: "self"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "zone"
      return_type: "Pointer"
    }
    class_method: false
  }
  method {
    function {
      name: "performSelector:"
      return_type: "ObjCId"
      parameter {
        name: "aSelector"
        type: "ObjCSel"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "performSelector:withObject:"
      return_type: "ObjCId"
      parameter {
        name: "aSelector"
        type: "ObjCSel"
      }
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "performSelector:withObject:withObject:"
      return_type: "ObjCId"
      parameter {
        name: "aSelector"
        type: "ObjCSel"
      }
      parameter {
        name: "object1"
        type: "ObjCId"
      }
      parameter {
        name: "object2"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isProxy"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "isKindOfClass:"
      return_type: "SChar"
      parameter {
        name: "aClass"
        type: "ObjCClass"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isMemberOfClass:"
      return_type: "SChar"
      parameter {
        name: "aClass"
        type: "ObjCClass"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "conformsToProtocol:"
      return_type: "SChar"
      parameter {
        name: "aProtocol"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "respondsToSelector:"
      return_type: "SChar"
      parameter {
        name: "aSelector"
        type: "ObjCSel"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "retain"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "release"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "autorelease"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "retainCount"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "description"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
}
protocol {
  name: "NSCopying"
  method {
    function {
      name: "copyWithZone:"
      return_type: "ObjCId"
      parameter {
        name: "zone"
        type: "Pointer"
      }
    }
    class_method: false
  }
}
protocol {
  name: "NSMutableCopying"
  method {
    function {
      name: "mutableCopyWithZone:"
      return_type: "ObjCId"
      parameter {
        name: "zone"
        type: "Pointer"
      }
    }
    class_method: false
  }
}
protocol {
  name: "NSCoding"
  method {
    function {
      name: "encodeWithCoder:"
      return_type: "Void"
      parameter {
        name: "aCoder"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithCoder:"
      return_type: "ObjCId"
      parameter {
        name: "aDecoder"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
protocol {
  name: "NSDiscardableContent"
  method {
    function {
      name: "beginContentAccess"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "endContentAccess"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "discardContentIfPossible"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "isContentDiscarded"
      return_type: "SChar"
    }
    class_method: false
  }
}
protocol {
  name: "NSFastEnumeration"
  method {
    function {
      name: "countByEnumeratingWithState:objects:count:"
      return_type: "ULong"
      parameter {
        name: "state"
        type: "Pointer"
      }
      parameter {
        name: "buffer"
        type: "Pointer"
      }
      parameter {
        name: "len"
        type: "ULong"
      }
    }
    class_method: false
  }
}
protocol {
  name: "NSDecimalNumberBehaviors"
  method {
    function {
      name: "roundingMode"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "scale"
      return_type: "Short"
    }
    class_method: false
  }
  method {
    function {
      name: "exceptionDuringOperation:error:leftOperand:rightOperand:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "operation"
        type: "ObjCSel"
      }
      parameter {
        name: "error"
        type: "ULong"
      }
      parameter {
        name: "leftOperand"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "rightOperand"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
protocol {
  name: "NSFileManagerDelegate"
  base_protocol: "NSObject"
  method {
    function {
      name: "fileManager:shouldCopyItemAtPath:toPath:"
      return_type: "SChar"
      parameter {
        name: "fileManager"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "srcPath"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "dstPath"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "fileManager:shouldCopyItemAtURL:toURL:"
      return_type: "SChar"
      parameter {
        name: "fileManager"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "srcURL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "dstURL"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:"
      return_type: "SChar"
      parameter {
        name: "fileManager"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "srcPath"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "dstPath"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "fileManager:shouldProceedAfterError:copyingItemAtURL:toURL:"
      return_type: "SChar"
      parameter {
        name: "fileManager"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "srcURL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "dstURL"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "fileManager:shouldMoveItemAtPath:toPath:"
      return_type: "SChar"
      parameter {
        name: "fileManager"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "srcPath"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "dstPath"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "fileManager:shouldMoveItemAtURL:toURL:"
      return_type: "SChar"
      parameter {
        name: "fileManager"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "srcURL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "dstURL"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "fileManager:shouldProceedAfterError:movingItemAtPath:toPath:"
      return_type: "SChar"
      parameter {
        name: "fileManager"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "srcPath"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "dstPath"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "fileManager:shouldProceedAfterError:movingItemAtURL:toURL:"
      return_type: "SChar"
      parameter {
        name: "fileManager"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "srcURL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "dstURL"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "fileManager:shouldLinkItemAtPath:toPath:"
      return_type: "SChar"
      parameter {
        name: "fileManager"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "srcPath"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "dstPath"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "fileManager:shouldLinkItemAtURL:toURL:"
      return_type: "SChar"
      parameter {
        name: "fileManager"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "srcURL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "dstURL"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:"
      return_type: "SChar"
      parameter {
        name: "fileManager"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "srcPath"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "dstPath"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "fileManager:shouldProceedAfterError:linkingItemAtURL:toURL:"
      return_type: "SChar"
      parameter {
        name: "fileManager"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "srcURL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "dstURL"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "fileManager:shouldRemoveItemAtPath:"
      return_type: "SChar"
      parameter {
        name: "fileManager"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "fileManager:shouldRemoveItemAtURL:"
      return_type: "SChar"
      parameter {
        name: "fileManager"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "URL"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "fileManager:shouldProceedAfterError:removingItemAtPath:"
      return_type: "SChar"
      parameter {
        name: "fileManager"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "fileManager:shouldProceedAfterError:removingItemAtURL:"
      return_type: "SChar"
      parameter {
        name: "fileManager"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "URL"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
protocol {
  name: "NSKeyedArchiverDelegate"
  base_protocol: "NSObject"
  method {
    function {
      name: "archiver:willEncodeObject:"
      return_type: "ObjCId"
      parameter {
        name: "archiver"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "archiver:didEncodeObject:"
      return_type: "Void"
      parameter {
        name: "archiver"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "archiver:willReplaceObject:withObject:"
      return_type: "Void"
      parameter {
        name: "archiver"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "object"
        type: "ObjCId"
      }
      parameter {
        name: "newObject"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "archiverWillFinish:"
      return_type: "Void"
      parameter {
        name: "archiver"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "archiverDidFinish:"
      return_type: "Void"
      parameter {
        name: "archiver"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
protocol {
  name: "NSKeyedUnarchiverDelegate"
  base_protocol: "NSObject"
  method {
    function {
      name: "unarchiver:cannotDecodeObjectOfClassName:originalClasses:"
      return_type: "ObjCClass"
      parameter {
        name: "unarchiver"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "classNames"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "unarchiver:didDecodeObject:"
      return_type: "ObjCId"
      parameter {
        name: "unarchiver"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "unarchiver:willReplaceObject:withObject:"
      return_type: "Void"
      parameter {
        name: "unarchiver"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "object"
        type: "ObjCId"
      }
      parameter {
        name: "newObject"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "unarchiverWillFinish:"
      return_type: "Void"
      parameter {
        name: "unarchiver"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "unarchiverDidFinish:"
      return_type: "Void"
      parameter {
        name: "unarchiver"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
protocol {
  name: "NSLocking"
  method {
    function {
      name: "lock"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "unlock"
      return_type: "Void"
    }
    class_method: false
  }
}
protocol {
  name: "NSPortDelegate"
  base_protocol: "NSObject"
  method {
    function {
      name: "handlePortMessage:"
      return_type: "Void"
      parameter {
        name: "message"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
protocol {
  name: "NSMachPortDelegate"
  base_protocol: "NSPortDelegate"
  method {
    function {
      name: "handleMachMessage:"
      return_type: "Void"
      parameter {
        name: "msg"
        type: "Pointer"
      }
    }
    class_method: false
  }
}
protocol {
  name: "NSStreamDelegate"
  base_protocol: "NSObject"
  method {
    function {
      name: "stream:handleEvent:"
      return_type: "Void"
      parameter {
        name: "aStream"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "eventCode"
        type: "ULong"
      }
    }
    class_method: false
  }
}
protocol {
  name: "NSURLHandleClient"
  method {
    function {
      name: "URLHandle:resourceDataDidBecomeAvailable:"
      return_type: "Void"
      parameter {
        name: "sender"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "newBytes"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "URLHandleResourceDidBeginLoading:"
      return_type: "Void"
      parameter {
        name: "sender"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "URLHandleResourceDidFinishLoading:"
      return_type: "Void"
      parameter {
        name: "sender"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "URLHandleResourceDidCancelLoading:"
      return_type: "Void"
      parameter {
        name: "sender"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "URLHandle:resourceDidFailLoadingWithReason:"
      return_type: "Void"
      parameter {
        name: "sender"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "reason"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
protocol {
  name: "NSURLAuthenticationChallengeSender"
  base_protocol: "NSObject"
  method {
    function {
      name: "useCredential:forAuthenticationChallenge:"
      return_type: "Void"
      parameter {
        name: "credential"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "challenge"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "continueWithoutCredentialForAuthenticationChallenge:"
      return_type: "Void"
      parameter {
        name: "challenge"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "cancelAuthenticationChallenge:"
      return_type: "Void"
      parameter {
        name: "challenge"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "performDefaultHandlingForAuthenticationChallenge:"
      return_type: "Void"
      parameter {
        name: "challenge"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "rejectProtectionSpaceAndContinueWithChallenge:"
      return_type: "Void"
      parameter {
        name: "challenge"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
protocol {
  name: "NSURLConnectionDelegate"
  base_protocol: "NSObject"
  method {
    function {
      name: "connection:willSendRequest:redirectResponse:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "connection"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "request"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "response"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "connection:needNewBodyStream:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "connection"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "request"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "connection:canAuthenticateAgainstProtectionSpace:"
      return_type: "SChar"
      parameter {
        name: "connection"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "protectionSpace"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "connection:didReceiveAuthenticationChallenge:"
      return_type: "Void"
      parameter {
        name: "connection"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "challenge"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "connection:willSendRequestForAuthenticationChallenge:"
      return_type: "Void"
      parameter {
        name: "connection"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "challenge"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "connection:didCancelAuthenticationChallenge:"
      return_type: "Void"
      parameter {
        name: "connection"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "challenge"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "connectionShouldUseCredentialStorage:"
      return_type: "SChar"
      parameter {
        name: "connection"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "connection:didReceiveResponse:"
      return_type: "Void"
      parameter {
        name: "connection"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "response"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "connection:didReceiveData:"
      return_type: "Void"
      parameter {
        name: "connection"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:"
      return_type: "Void"
      parameter {
        name: "connection"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "bytesWritten"
        type: "Long"
      }
      parameter {
        name: "totalBytesWritten"
        type: "Long"
      }
      parameter {
        name: "totalBytesExpectedToWrite"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "connectionDidFinishLoading:"
      return_type: "Void"
      parameter {
        name: "connection"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "connection:didFailWithError:"
      return_type: "Void"
      parameter {
        name: "connection"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "connection:willCacheResponse:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "connection"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "cachedResponse"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
protocol {
  name: "NSURLProtocolClient"
  base_protocol: "NSObject"
  method {
    function {
      name: "URLProtocol:wasRedirectedToRequest:redirectResponse:"
      return_type: "Void"
      parameter {
        name: "protocol"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "request"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "redirectResponse"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "URLProtocol:cachedResponseIsValid:"
      return_type: "Void"
      parameter {
        name: "protocol"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "cachedResponse"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "URLProtocol:didReceiveResponse:cacheStoragePolicy:"
      return_type: "Void"
      parameter {
        name: "protocol"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "response"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "policy"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "URLProtocol:didLoadData:"
      return_type: "Void"
      parameter {
        name: "protocol"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "URLProtocolDidFinishLoading:"
      return_type: "Void"
      parameter {
        name: "protocol"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "URLProtocol:didFailWithError:"
      return_type: "Void"
      parameter {
        name: "protocol"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "URLProtocol:didReceiveAuthenticationChallenge:"
      return_type: "Void"
      parameter {
        name: "protocol"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "challenge"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "URLProtocol:didCancelAuthenticationChallenge:"
      return_type: "Void"
      parameter {
        name: "protocol"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "challenge"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
protocol {
  name: "NSXMLParserDelegate"
  base_protocol: "NSObject"
  method {
    function {
      name: "parserDidStartDocument:"
      return_type: "Void"
      parameter {
        name: "parser"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "parserDidEndDocument:"
      return_type: "Void"
      parameter {
        name: "parser"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "parser:foundNotationDeclarationWithName:publicID:systemID:"
      return_type: "Void"
      parameter {
        name: "parser"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "publicID"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "systemID"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:"
      return_type: "Void"
      parameter {
        name: "parser"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "publicID"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "systemID"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "notationName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:"
      return_type: "Void"
      parameter {
        name: "parser"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "attributeName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "elementName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "type"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "defaultValue"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "parser:foundElementDeclarationWithName:model:"
      return_type: "Void"
      parameter {
        name: "parser"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "elementName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "model"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "parser:foundInternalEntityDeclarationWithName:value:"
      return_type: "Void"
      parameter {
        name: "parser"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "value"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "parser:foundExternalEntityDeclarationWithName:publicID:systemID:"
      return_type: "Void"
      parameter {
        name: "parser"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "publicID"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "systemID"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "parser:didStartElement:namespaceURI:qualifiedName:attributes:"
      return_type: "Void"
      parameter {
        name: "parser"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "elementName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "namespaceURI"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "qName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "attributeDict"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "parser:didEndElement:namespaceURI:qualifiedName:"
      return_type: "Void"
      parameter {
        name: "parser"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "elementName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "namespaceURI"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "qName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "parser:didStartMappingPrefix:toURI:"
      return_type: "Void"
      parameter {
        name: "parser"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "prefix"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "namespaceURI"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "parser:didEndMappingPrefix:"
      return_type: "Void"
      parameter {
        name: "parser"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "prefix"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "parser:foundCharacters:"
      return_type: "Void"
      parameter {
        name: "parser"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "parser:foundIgnorableWhitespace:"
      return_type: "Void"
      parameter {
        name: "parser"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "whitespaceString"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "parser:foundProcessingInstructionWithTarget:data:"
      return_type: "Void"
      parameter {
        name: "parser"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "target"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "parser:foundComment:"
      return_type: "Void"
      parameter {
        name: "parser"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "comment"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "parser:foundCDATA:"
      return_type: "Void"
      parameter {
        name: "parser"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "CDATABlock"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "parser:resolveExternalEntityName:systemID:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "parser"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "systemID"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "parser:parseErrorOccurred:"
      return_type: "Void"
      parameter {
        name: "parser"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "parseError"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "parser:validationErrorOccurred:"
      return_type: "Void"
      parameter {
        name: "parser"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "validationError"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
protocol {
  name: "NSCacheDelegate"
  base_protocol: "NSObject"
  method {
    function {
      name: "cache:willEvictObject:"
      return_type: "Void"
      parameter {
        name: "cache"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "obj"
        type: "ObjCId"
      }
    }
    class_method: false
  }
}
protocol {
  name: "NSFilePresenter"
  base_protocol: "NSObject"
  method {
    function {
      name: "presentedItemURL"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "presentedItemOperationQueue"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "relinquishPresentedItemToReader:"
      return_type: "Void"
      parameter {
        name: "reader"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "relinquishPresentedItemToWriter:"
      return_type: "Void"
      parameter {
        name: "writer"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "savePresentedItemChangesWithCompletionHandler:"
      return_type: "Void"
      parameter {
        name: "completionHandler"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "accommodatePresentedItemDeletionWithCompletionHandler:"
      return_type: "Void"
      parameter {
        name: "completionHandler"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "presentedItemDidMoveToURL:"
      return_type: "Void"
      parameter {
        name: "newURL"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "presentedItemDidChange"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "presentedItemDidGainVersion:"
      return_type: "Void"
      parameter {
        name: "version"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "presentedItemDidLoseVersion:"
      return_type: "Void"
      parameter {
        name: "version"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "presentedItemDidResolveConflictVersion:"
      return_type: "Void"
      parameter {
        name: "version"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "accommodatePresentedSubitemDeletionAtURL:completionHandler:"
      return_type: "Void"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "completionHandler"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "presentedSubitemDidAppearAtURL:"
      return_type: "Void"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "presentedSubitemAtURL:didMoveToURL:"
      return_type: "Void"
      parameter {
        name: "oldURL"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "newURL"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "presentedSubitemDidChangeAtURL:"
      return_type: "Void"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "presentedSubitemAtURL:didGainVersion:"
      return_type: "Void"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "version"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "presentedSubitemAtURL:didLoseVersion:"
      return_type: "Void"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "version"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "presentedSubitemAtURL:didResolveConflictVersion:"
      return_type: "Void"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "version"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  property {
    name: "presentedItemURL"
    type: "ObjCObjectPointer"
  }
  property {
    name: "presentedItemOperationQueue"
    type: "ObjCObjectPointer"
  }
}
protocol {
  name: "NSMetadataQueryDelegate"
  base_protocol: "NSObject"
  method {
    function {
      name: "metadataQuery:replacementObjectForResultObject:"
      return_type: "ObjCId"
      parameter {
        name: "query"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "result"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "metadataQuery:replacementValueForAttribute:value:"
      return_type: "ObjCId"
      parameter {
        name: "query"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "attrName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "attrValue"
        type: "ObjCId"
      }
    }
    class_method: false
  }
}
protocol {
  name: "NSNetServiceDelegate"
  base_protocol: "NSObject"
  method {
    function {
      name: "netServiceWillPublish:"
      return_type: "Void"
      parameter {
        name: "sender"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "netServiceDidPublish:"
      return_type: "Void"
      parameter {
        name: "sender"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "netService:didNotPublish:"
      return_type: "Void"
      parameter {
        name: "sender"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "errorDict"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "netServiceWillResolve:"
      return_type: "Void"
      parameter {
        name: "sender"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "netServiceDidResolveAddress:"
      return_type: "Void"
      parameter {
        name: "sender"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "netService:didNotResolve:"
      return_type: "Void"
      parameter {
        name: "sender"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "errorDict"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "netServiceDidStop:"
      return_type: "Void"
      parameter {
        name: "sender"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "netService:didUpdateTXTRecordData:"
      return_type: "Void"
      parameter {
        name: "sender"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
protocol {
  name: "NSNetServiceBrowserDelegate"
  base_protocol: "NSObject"
  method {
    function {
      name: "netServiceBrowserWillSearch:"
      return_type: "Void"
      parameter {
        name: "aNetServiceBrowser"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "netServiceBrowserDidStopSearch:"
      return_type: "Void"
      parameter {
        name: "aNetServiceBrowser"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "netServiceBrowser:didNotSearch:"
      return_type: "Void"
      parameter {
        name: "aNetServiceBrowser"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "errorDict"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "netServiceBrowser:didFindDomain:moreComing:"
      return_type: "Void"
      parameter {
        name: "aNetServiceBrowser"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "domainString"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "moreComing"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "netServiceBrowser:didFindService:moreComing:"
      return_type: "Void"
      parameter {
        name: "aNetServiceBrowser"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "aNetService"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "moreComing"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "netServiceBrowser:didRemoveDomain:moreComing:"
      return_type: "Void"
      parameter {
        name: "aNetServiceBrowser"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "domainString"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "moreComing"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "netServiceBrowser:didRemoveService:moreComing:"
      return_type: "Void"
      parameter {
        name: "aNetServiceBrowser"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "aNetService"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "moreComing"
        type: "SChar"
      }
    }
    class_method: false
  }
}
protocol {
  name: "NSConnectionDelegate"
  base_protocol: "NSObject"
  method {
    function {
      name: "makeNewConnection:sender:"
      return_type: "SChar"
      parameter {
        name: "conn"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "ancestor"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "connection:shouldMakeNewConnection:"
      return_type: "SChar"
      parameter {
        name: "ancestor"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "conn"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "authenticationDataForComponents:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "components"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "authenticateComponents:withData:"
      return_type: "SChar"
      parameter {
        name: "components"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "signature"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "createConversationForConnection:"
      return_type: "ObjCId"
      parameter {
        name: "conn"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "connection:handleRequest:"
      return_type: "SChar"
      parameter {
        name: "connection"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "doreq"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
protocol {
  name: "NSURLDownloadDelegate"
  base_protocol: "NSObject"
  method {
    function {
      name: "downloadDidBegin:"
      return_type: "Void"
      parameter {
        name: "download"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "download:willSendRequest:redirectResponse:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "download"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "request"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "redirectResponse"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "download:canAuthenticateAgainstProtectionSpace:"
      return_type: "SChar"
      parameter {
        name: "connection"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "protectionSpace"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "download:didReceiveAuthenticationChallenge:"
      return_type: "Void"
      parameter {
        name: "download"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "challenge"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "download:didCancelAuthenticationChallenge:"
      return_type: "Void"
      parameter {
        name: "download"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "challenge"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "downloadShouldUseCredentialStorage:"
      return_type: "SChar"
      parameter {
        name: "download"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "download:didReceiveResponse:"
      return_type: "Void"
      parameter {
        name: "download"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "response"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "download:willResumeWithResponse:fromByte:"
      return_type: "Void"
      parameter {
        name: "download"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "response"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "startingByte"
        type: "LongLong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "download:didReceiveDataOfLength:"
      return_type: "Void"
      parameter {
        name: "download"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "length"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "download:shouldDecodeSourceDataOfMIMEType:"
      return_type: "SChar"
      parameter {
        name: "download"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "encodingType"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "download:decideDestinationWithSuggestedFilename:"
      return_type: "Void"
      parameter {
        name: "download"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "filename"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "download:didCreateDestination:"
      return_type: "Void"
      parameter {
        name: "download"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "downloadDidFinish:"
      return_type: "Void"
      parameter {
        name: "download"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "download:didFailWithError:"
      return_type: "Void"
      parameter {
        name: "download"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
protocol {
  name: "NSSpellServerDelegate"
  base_protocol: "NSObject"
  method {
    function {
      name: "spellServer:findMisspelledWordInString:language:wordCount:countOnly:"
      return_type: "Unexposed"
      parameter {
        name: "sender"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "stringToCheck"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "language"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "wordCount"
        type: "Pointer"
      }
      parameter {
        name: "countOnly"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "spellServer:suggestGuessesForWord:inLanguage:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "sender"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "word"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "language"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "spellServer:didLearnWord:inLanguage:"
      return_type: "Void"
      parameter {
        name: "sender"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "word"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "language"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "spellServer:didForgetWord:inLanguage:"
      return_type: "Void"
      parameter {
        name: "sender"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "word"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "language"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "spellServer:suggestCompletionsForPartialWordRange:inString:language:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "sender"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "language"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "spellServer:checkGrammarInString:language:details:"
      return_type: "Unexposed"
      parameter {
        name: "sender"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "stringToCheck"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "language"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "details"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "spellServer:checkString:offset:types:options:orthography:wordCount:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "sender"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "stringToCheck"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "offset"
        type: "ULong"
      }
      parameter {
        name: "checkingTypes"
        type: "ULongLong"
      }
      parameter {
        name: "options"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "orthography"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "wordCount"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "spellServer:recordResponse:toCorrection:forWord:language:"
      return_type: "Void"
      parameter {
        name: "sender"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "response"
        type: "ULong"
      }
      parameter {
        name: "correction"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "word"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "language"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSObject"
  category_name: "NSCoderMethods"
  method {
    function {
      name: "version"
      return_type: "Long"
    }
    class_method: true
  }
  method {
    function {
      name: "setVersion:"
      return_type: "Void"
      parameter {
        name: "aVersion"
        type: "Long"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "classForCoder"
      return_type: "ObjCClass"
    }
    class_method: false
  }
  method {
    function {
      name: "replacementObjectForCoder:"
      return_type: "ObjCId"
      parameter {
        name: "aCoder"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "awakeAfterUsingCoder:"
      return_type: "ObjCId"
      parameter {
        name: "aDecoder"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSObject"
  category_name: "NSDeprecatedMethods"
  method {
    function {
      name: "poseAsClass:"
      return_type: "Void"
      parameter {
        name: "aClass"
        type: "ObjCClass"
      }
    }
    class_method: true
  }
}
category {
  class_name: "NSObject"
  category_name: "NSDiscardableContentProxy"
  method {
    function {
      name: "autoContentAccessingProxy"
      return_type: "ObjCId"
    }
    class_method: false
  }
}
category {
  class_name: "NSEnumerator"
  category_name: "NSExtendedEnumerator"
  method {
    function {
      name: "allObjects"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
}
category {
  class_name: "NSValue"
  category_name: "NSValueCreation"
  method {
    function {
      name: "initWithBytes:objCType:"
      return_type: "ObjCId"
      parameter {
        name: "value"
        type: "Pointer"
      }
      parameter {
        name: "type"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "valueWithBytes:objCType:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "value"
        type: "Pointer"
      }
      parameter {
        name: "type"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "value:withObjCType:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "value"
        type: "Pointer"
      }
      parameter {
        name: "type"
        type: "Pointer"
      }
    }
    class_method: true
  }
}
category {
  class_name: "NSValue"
  category_name: "NSValueExtensionMethods"
  method {
    function {
      name: "valueWithNonretainedObject:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "nonretainedObjectValue"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "valueWithPointer:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "pointer"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "pointerValue"
      return_type: "Pointer"
    }
    class_method: false
  }
  method {
    function {
      name: "isEqualToValue:"
      return_type: "SChar"
      parameter {
        name: "value"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSNumber"
  category_name: "NSNumberCreation"
  method {
    function {
      name: "initWithChar:"
      return_type: "ObjCId"
      parameter {
        name: "value"
        type: "Char_S"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithUnsignedChar:"
      return_type: "ObjCId"
      parameter {
        name: "value"
        type: "UChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithShort:"
      return_type: "ObjCId"
      parameter {
        name: "value"
        type: "Short"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithUnsignedShort:"
      return_type: "ObjCId"
      parameter {
        name: "value"
        type: "UShort"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithInt:"
      return_type: "ObjCId"
      parameter {
        name: "value"
        type: "Int"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithUnsignedInt:"
      return_type: "ObjCId"
      parameter {
        name: "value"
        type: "UInt"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithLong:"
      return_type: "ObjCId"
      parameter {
        name: "value"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithUnsignedLong:"
      return_type: "ObjCId"
      parameter {
        name: "value"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithLongLong:"
      return_type: "ObjCId"
      parameter {
        name: "value"
        type: "LongLong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithUnsignedLongLong:"
      return_type: "ObjCId"
      parameter {
        name: "value"
        type: "ULongLong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithFloat:"
      return_type: "ObjCId"
      parameter {
        name: "value"
        type: "Float"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithDouble:"
      return_type: "ObjCId"
      parameter {
        name: "value"
        type: "Double"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithBool:"
      return_type: "ObjCId"
      parameter {
        name: "value"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithInteger:"
      return_type: "ObjCId"
      parameter {
        name: "value"
        type: "Long"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithUnsignedInteger:"
      return_type: "ObjCId"
      parameter {
        name: "value"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "numberWithChar:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "value"
        type: "Char_S"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "numberWithUnsignedChar:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "value"
        type: "UChar"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "numberWithShort:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "value"
        type: "Short"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "numberWithUnsignedShort:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "value"
        type: "UShort"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "numberWithInt:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "value"
        type: "Int"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "numberWithUnsignedInt:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "value"
        type: "UInt"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "numberWithLong:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "value"
        type: "Long"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "numberWithUnsignedLong:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "value"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "numberWithLongLong:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "value"
        type: "LongLong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "numberWithUnsignedLongLong:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "value"
        type: "ULongLong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "numberWithFloat:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "value"
        type: "Float"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "numberWithDouble:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "value"
        type: "Double"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "numberWithBool:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "value"
        type: "SChar"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "numberWithInteger:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "value"
        type: "Long"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "numberWithUnsignedInteger:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "value"
        type: "ULong"
      }
    }
    class_method: true
  }
}
category {
  class_name: "NSValue"
  category_name: "NSValueRangeExtensions"
  method {
    function {
      name: "valueWithRange:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "rangeValue"
      return_type: "Unexposed"
    }
    class_method: false
  }
}
category {
  class_name: "NSArray"
  category_name: "NSExtendedArray"
  method {
    function {
      name: "arrayByAddingObject:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "arrayByAddingObjectsFromArray:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "otherArray"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "componentsJoinedByString:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "separator"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "containsObject:"
      return_type: "SChar"
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "description"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "descriptionWithLocale:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "locale"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "descriptionWithLocale:indent:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "locale"
        type: "ObjCId"
      }
      parameter {
        name: "level"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "firstObjectCommonWithArray:"
      return_type: "ObjCId"
      parameter {
        name: "otherArray"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "getObjects:range:"
      return_type: "Void"
      parameter {
        name: "objects"
        type: "Pointer"
      }
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "indexOfObject:"
      return_type: "ULong"
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "indexOfObject:inRange:"
      return_type: "ULong"
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "indexOfObjectIdenticalTo:"
      return_type: "ULong"
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "indexOfObjectIdenticalTo:inRange:"
      return_type: "ULong"
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isEqualToArray:"
      return_type: "SChar"
      parameter {
        name: "otherArray"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "lastObject"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "objectEnumerator"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "reverseObjectEnumerator"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "sortedArrayHint"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "sortedArrayUsingFunction:context:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "comparator"
        type: "Pointer"
      }
      parameter {
        name: "context"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "sortedArrayUsingFunction:context:hint:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "comparator"
        type: "Pointer"
      }
      parameter {
        name: "context"
        type: "Pointer"
      }
      parameter {
        name: "hint"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "sortedArrayUsingSelector:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "comparator"
        type: "ObjCSel"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "subarrayWithRange:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "writeToFile:atomically:"
      return_type: "SChar"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "useAuxiliaryFile"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "writeToURL:atomically:"
      return_type: "SChar"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "atomically"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "makeObjectsPerformSelector:"
      return_type: "Void"
      parameter {
        name: "aSelector"
        type: "ObjCSel"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "makeObjectsPerformSelector:withObject:"
      return_type: "Void"
      parameter {
        name: "aSelector"
        type: "ObjCSel"
      }
      parameter {
        name: "argument"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "objectsAtIndexes:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "indexes"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "enumerateObjectsUsingBlock:"
      return_type: "Void"
      parameter {
        name: "block"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "enumerateObjectsWithOptions:usingBlock:"
      return_type: "Void"
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "block"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "enumerateObjectsAtIndexes:options:usingBlock:"
      return_type: "Void"
      parameter {
        name: "s"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "block"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "indexOfObjectPassingTest:"
      return_type: "ULong"
      parameter {
        name: "predicate"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "indexOfObjectWithOptions:passingTest:"
      return_type: "ULong"
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "predicate"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "indexOfObjectAtIndexes:options:passingTest:"
      return_type: "ULong"
      parameter {
        name: "s"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "predicate"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "indexesOfObjectsPassingTest:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "predicate"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "indexesOfObjectsWithOptions:passingTest:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "predicate"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "indexesOfObjectsAtIndexes:options:passingTest:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "s"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "predicate"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "sortedArrayUsingComparator:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "cmptr"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "sortedArrayWithOptions:usingComparator:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "cmptr"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "indexOfObject:inSortedRange:options:usingComparator:"
      return_type: "ULong"
      parameter {
        name: "obj"
        type: "ObjCId"
      }
      parameter {
        name: "r"
        type: "Unexposed"
      }
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "cmp"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSArray"
  category_name: "NSArrayCreation"
  method {
    function {
      name: "array"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "arrayWithObject:"
      return_type: "ObjCId"
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "arrayWithObjects:count:"
      return_type: "ObjCId"
      parameter {
        name: "objects"
        type: "Pointer"
      }
      parameter {
        name: "cnt"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "arrayWithObjects:"
      return_type: "ObjCId"
      parameter {
        name: "firstObj"
        type: "ObjCId"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "arrayWithArray:"
      return_type: "ObjCId"
      parameter {
        name: "array"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithObjects:count:"
      return_type: "ObjCId"
      parameter {
        name: "objects"
        type: "Pointer"
      }
      parameter {
        name: "cnt"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithObjects:"
      return_type: "ObjCId"
      parameter {
        name: "firstObj"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithArray:"
      return_type: "ObjCId"
      parameter {
        name: "array"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithArray:copyItems:"
      return_type: "ObjCId"
      parameter {
        name: "array"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "flag"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "arrayWithContentsOfFile:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "arrayWithContentsOfURL:"
      return_type: "ObjCId"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithContentsOfFile:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithContentsOfURL:"
      return_type: "ObjCId"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSArray"
  category_name: "NSDeprecated"
  method {
    function {
      name: "getObjects:"
      return_type: "Void"
      parameter {
        name: "objects"
        type: "Pointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSMutableArray"
  category_name: "NSExtendedMutableArray"
  method {
    function {
      name: "addObjectsFromArray:"
      return_type: "Void"
      parameter {
        name: "otherArray"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "exchangeObjectAtIndex:withObjectAtIndex:"
      return_type: "Void"
      parameter {
        name: "idx1"
        type: "ULong"
      }
      parameter {
        name: "idx2"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeAllObjects"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "removeObject:inRange:"
      return_type: "Void"
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeObject:"
      return_type: "Void"
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeObjectIdenticalTo:inRange:"
      return_type: "Void"
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeObjectIdenticalTo:"
      return_type: "Void"
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeObjectsFromIndices:numIndices:"
      return_type: "Void"
      parameter {
        name: "indices"
        type: "Pointer"
      }
      parameter {
        name: "cnt"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeObjectsInArray:"
      return_type: "Void"
      parameter {
        name: "otherArray"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeObjectsInRange:"
      return_type: "Void"
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "replaceObjectsInRange:withObjectsFromArray:range:"
      return_type: "Void"
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "otherArray"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "otherRange"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "replaceObjectsInRange:withObjectsFromArray:"
      return_type: "Void"
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "otherArray"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setArray:"
      return_type: "Void"
      parameter {
        name: "otherArray"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "sortUsingFunction:context:"
      return_type: "Void"
      parameter {
        name: "compare"
        type: "Pointer"
      }
      parameter {
        name: "context"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "sortUsingSelector:"
      return_type: "Void"
      parameter {
        name: "comparator"
        type: "ObjCSel"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "insertObjects:atIndexes:"
      return_type: "Void"
      parameter {
        name: "objects"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "indexes"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeObjectsAtIndexes:"
      return_type: "Void"
      parameter {
        name: "indexes"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "replaceObjectsAtIndexes:withObjects:"
      return_type: "Void"
      parameter {
        name: "indexes"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "objects"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "sortUsingComparator:"
      return_type: "Void"
      parameter {
        name: "cmptr"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "sortWithOptions:usingComparator:"
      return_type: "Void"
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "cmptr"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSMutableArray"
  category_name: "NSMutableArrayCreation"
  method {
    function {
      name: "arrayWithCapacity:"
      return_type: "ObjCId"
      parameter {
        name: "numItems"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithCapacity:"
      return_type: "ObjCId"
      parameter {
        name: "numItems"
        type: "ULong"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSDate"
  category_name: "NSExtendedDate"
  method {
    function {
      name: "timeIntervalSinceDate:"
      return_type: "Double"
      parameter {
        name: "anotherDate"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "timeIntervalSinceNow"
      return_type: "Double"
    }
    class_method: false
  }
  method {
    function {
      name: "timeIntervalSince1970"
      return_type: "Double"
    }
    class_method: false
  }
  method {
    function {
      name: "addTimeInterval:"
      return_type: "ObjCId"
      parameter {
        name: "seconds"
        type: "Double"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "dateByAddingTimeInterval:"
      return_type: "ObjCId"
      parameter {
        name: "ti"
        type: "Double"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "earlierDate:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "anotherDate"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "laterDate:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "anotherDate"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "compare:"
      return_type: "Long"
      parameter {
        name: "other"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isEqualToDate:"
      return_type: "SChar"
      parameter {
        name: "otherDate"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "description"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "descriptionWithLocale:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "locale"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "timeIntervalSinceReferenceDate"
      return_type: "Double"
    }
    class_method: true
  }
}
category {
  class_name: "NSDate"
  category_name: "NSDateCreation"
  method {
    function {
      name: "date"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "dateWithTimeIntervalSinceNow:"
      return_type: "ObjCId"
      parameter {
        name: "secs"
        type: "Double"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "dateWithTimeIntervalSinceReferenceDate:"
      return_type: "ObjCId"
      parameter {
        name: "secs"
        type: "Double"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "dateWithTimeIntervalSince1970:"
      return_type: "ObjCId"
      parameter {
        name: "secs"
        type: "Double"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "dateWithTimeInterval:sinceDate:"
      return_type: "ObjCId"
      parameter {
        name: "ti"
        type: "Double"
      }
      parameter {
        name: "date"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "distantFuture"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "distantPast"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "init"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "initWithTimeIntervalSinceNow:"
      return_type: "ObjCId"
      parameter {
        name: "secs"
        type: "Double"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithTimeIntervalSinceReferenceDate:"
      return_type: "ObjCId"
      parameter {
        name: "secsToBeAdded"
        type: "Double"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithTimeIntervalSince1970:"
      return_type: "ObjCId"
      parameter {
        name: "ti"
        type: "Double"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithTimeInterval:sinceDate:"
      return_type: "ObjCId"
      parameter {
        name: "secsToBeAdded"
        type: "Double"
      }
      parameter {
        name: "anotherDate"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSString"
  category_name: "NSStringExtensionMethods"
  method {
    function {
      name: "getCharacters:range:"
      return_type: "Void"
      parameter {
        name: "buffer"
        type: "Pointer"
      }
      parameter {
        name: "aRange"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "substringFromIndex:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "from"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "substringToIndex:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "to"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "substringWithRange:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "compare:"
      return_type: "Long"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "compare:options:"
      return_type: "Long"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mask"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "compare:options:range:"
      return_type: "Long"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mask"
        type: "ULong"
      }
      parameter {
        name: "compareRange"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "compare:options:range:locale:"
      return_type: "Long"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mask"
        type: "ULong"
      }
      parameter {
        name: "compareRange"
        type: "Unexposed"
      }
      parameter {
        name: "locale"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "caseInsensitiveCompare:"
      return_type: "Long"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "localizedCompare:"
      return_type: "Long"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "localizedCaseInsensitiveCompare:"
      return_type: "Long"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "localizedStandardCompare:"
      return_type: "Long"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isEqualToString:"
      return_type: "SChar"
      parameter {
        name: "aString"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "hasPrefix:"
      return_type: "SChar"
      parameter {
        name: "aString"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "hasSuffix:"
      return_type: "SChar"
      parameter {
        name: "aString"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "rangeOfString:"
      return_type: "Unexposed"
      parameter {
        name: "aString"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "rangeOfString:options:"
      return_type: "Unexposed"
      parameter {
        name: "aString"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mask"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "rangeOfString:options:range:"
      return_type: "Unexposed"
      parameter {
        name: "aString"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mask"
        type: "ULong"
      }
      parameter {
        name: "searchRange"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "rangeOfString:options:range:locale:"
      return_type: "Unexposed"
      parameter {
        name: "aString"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mask"
        type: "ULong"
      }
      parameter {
        name: "searchRange"
        type: "Unexposed"
      }
      parameter {
        name: "locale"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "rangeOfCharacterFromSet:"
      return_type: "Unexposed"
      parameter {
        name: "aSet"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "rangeOfCharacterFromSet:options:"
      return_type: "Unexposed"
      parameter {
        name: "aSet"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mask"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "rangeOfCharacterFromSet:options:range:"
      return_type: "Unexposed"
      parameter {
        name: "aSet"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mask"
        type: "ULong"
      }
      parameter {
        name: "searchRange"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "rangeOfComposedCharacterSequenceAtIndex:"
      return_type: "Unexposed"
      parameter {
        name: "index"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "rangeOfComposedCharacterSequencesForRange:"
      return_type: "Unexposed"
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "stringByAppendingString:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "aString"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "stringByAppendingFormat:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "format"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "doubleValue"
      return_type: "Double"
    }
    class_method: false
  }
  method {
    function {
      name: "floatValue"
      return_type: "Float"
    }
    class_method: false
  }
  method {
    function {
      name: "intValue"
      return_type: "Int"
    }
    class_method: false
  }
  method {
    function {
      name: "integerValue"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "longLongValue"
      return_type: "LongLong"
    }
    class_method: false
  }
  method {
    function {
      name: "boolValue"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "componentsSeparatedByString:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "separator"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "componentsSeparatedByCharactersInSet:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "separator"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "commonPrefixWithString:options:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "aString"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mask"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "uppercaseString"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "lowercaseString"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "capitalizedString"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "stringByTrimmingCharactersInSet:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "set"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "stringByPaddingToLength:withString:startingAtIndex:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "newLength"
        type: "ULong"
      }
      parameter {
        name: "padString"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "padIndex"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "getLineStart:end:contentsEnd:forRange:"
      return_type: "Void"
      parameter {
        name: "startPtr"
        type: "Pointer"
      }
      parameter {
        name: "lineEndPtr"
        type: "Pointer"
      }
      parameter {
        name: "contentsEndPtr"
        type: "Pointer"
      }
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "lineRangeForRange:"
      return_type: "Unexposed"
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "getParagraphStart:end:contentsEnd:forRange:"
      return_type: "Void"
      parameter {
        name: "startPtr"
        type: "Pointer"
      }
      parameter {
        name: "parEndPtr"
        type: "Pointer"
      }
      parameter {
        name: "contentsEndPtr"
        type: "Pointer"
      }
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "paragraphRangeForRange:"
      return_type: "Unexposed"
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "enumerateSubstringsInRange:options:usingBlock:"
      return_type: "Void"
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "block"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "enumerateLinesUsingBlock:"
      return_type: "Void"
      parameter {
        name: "block"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "description"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "hash"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "fastestEncoding"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "smallestEncoding"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "dataUsingEncoding:allowLossyConversion:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "encoding"
        type: "ULong"
      }
      parameter {
        name: "lossy"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "dataUsingEncoding:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "encoding"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "canBeConvertedToEncoding:"
      return_type: "SChar"
      parameter {
        name: "encoding"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "cStringUsingEncoding:"
      return_type: "Pointer"
      parameter {
        name: "encoding"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "getCString:maxLength:encoding:"
      return_type: "SChar"
      parameter {
        name: "buffer"
        type: "Pointer"
      }
      parameter {
        name: "maxBufferCount"
        type: "ULong"
      }
      parameter {
        name: "encoding"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "getBytes:maxLength:usedLength:encoding:options:range:remainingRange:"
      return_type: "SChar"
      parameter {
        name: "buffer"
        type: "Pointer"
      }
      parameter {
        name: "maxBufferCount"
        type: "ULong"
      }
      parameter {
        name: "usedBufferCount"
        type: "Pointer"
      }
      parameter {
        name: "encoding"
        type: "ULong"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "leftover"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "maximumLengthOfBytesUsingEncoding:"
      return_type: "ULong"
      parameter {
        name: "enc"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "lengthOfBytesUsingEncoding:"
      return_type: "ULong"
      parameter {
        name: "enc"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decomposedStringWithCanonicalMapping"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "precomposedStringWithCanonicalMapping"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "decomposedStringWithCompatibilityMapping"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "precomposedStringWithCompatibilityMapping"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "stringByFoldingWithOptions:locale:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "options"
        type: "ULong"
      }
      parameter {
        name: "locale"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "stringByReplacingOccurrencesOfString:withString:options:range:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "target"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "replacement"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
      parameter {
        name: "searchRange"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "stringByReplacingOccurrencesOfString:withString:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "target"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "replacement"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "stringByReplacingCharactersInRange:withString:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "replacement"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "UTF8String"
      return_type: "Pointer"
    }
    class_method: false
  }
  method {
    function {
      name: "defaultCStringEncoding"
      return_type: "ULong"
    }
    class_method: true
  }
  method {
    function {
      name: "availableStringEncodings"
      return_type: "Pointer"
    }
    class_method: true
  }
  method {
    function {
      name: "localizedNameOfStringEncoding:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "encoding"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "init"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "initWithCharactersNoCopy:length:freeWhenDone:"
      return_type: "ObjCId"
      parameter {
        name: "characters"
        type: "Pointer"
      }
      parameter {
        name: "length"
        type: "ULong"
      }
      parameter {
        name: "freeBuffer"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithCharacters:length:"
      return_type: "ObjCId"
      parameter {
        name: "characters"
        type: "Pointer"
      }
      parameter {
        name: "length"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithUTF8String:"
      return_type: "ObjCId"
      parameter {
        name: "nullTerminatedCString"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithString:"
      return_type: "ObjCId"
      parameter {
        name: "aString"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithFormat:"
      return_type: "ObjCId"
      parameter {
        name: "format"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithFormat:arguments:"
      return_type: "ObjCId"
      parameter {
        name: "format"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "argList"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithFormat:locale:"
      return_type: "ObjCId"
      parameter {
        name: "format"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "locale"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithFormat:locale:arguments:"
      return_type: "ObjCId"
      parameter {
        name: "format"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "locale"
        type: "ObjCId"
      }
      parameter {
        name: "argList"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithData:encoding:"
      return_type: "ObjCId"
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "encoding"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithBytes:length:encoding:"
      return_type: "ObjCId"
      parameter {
        name: "bytes"
        type: "Pointer"
      }
      parameter {
        name: "len"
        type: "ULong"
      }
      parameter {
        name: "encoding"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithBytesNoCopy:length:encoding:freeWhenDone:"
      return_type: "ObjCId"
      parameter {
        name: "bytes"
        type: "Pointer"
      }
      parameter {
        name: "len"
        type: "ULong"
      }
      parameter {
        name: "encoding"
        type: "ULong"
      }
      parameter {
        name: "freeBuffer"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "string"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "stringWithString:"
      return_type: "ObjCId"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "stringWithCharacters:length:"
      return_type: "ObjCId"
      parameter {
        name: "characters"
        type: "Pointer"
      }
      parameter {
        name: "length"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "stringWithUTF8String:"
      return_type: "ObjCId"
      parameter {
        name: "nullTerminatedCString"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "stringWithFormat:"
      return_type: "ObjCId"
      parameter {
        name: "format"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "localizedStringWithFormat:"
      return_type: "ObjCId"
      parameter {
        name: "format"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithCString:encoding:"
      return_type: "ObjCId"
      parameter {
        name: "nullTerminatedCString"
        type: "Pointer"
      }
      parameter {
        name: "encoding"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "stringWithCString:encoding:"
      return_type: "ObjCId"
      parameter {
        name: "cString"
        type: "Pointer"
      }
      parameter {
        name: "enc"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithContentsOfURL:encoding:error:"
      return_type: "ObjCId"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "enc"
        type: "ULong"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithContentsOfFile:encoding:error:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "enc"
        type: "ULong"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "stringWithContentsOfURL:encoding:error:"
      return_type: "ObjCId"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "enc"
        type: "ULong"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "stringWithContentsOfFile:encoding:error:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "enc"
        type: "ULong"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithContentsOfURL:usedEncoding:error:"
      return_type: "ObjCId"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "enc"
        type: "Pointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithContentsOfFile:usedEncoding:error:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "enc"
        type: "Pointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "stringWithContentsOfURL:usedEncoding:error:"
      return_type: "ObjCId"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "enc"
        type: "Pointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "stringWithContentsOfFile:usedEncoding:error:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "enc"
        type: "Pointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "writeToURL:atomically:encoding:error:"
      return_type: "SChar"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "useAuxiliaryFile"
        type: "SChar"
      }
      parameter {
        name: "enc"
        type: "ULong"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "writeToFile:atomically:encoding:error:"
      return_type: "SChar"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "useAuxiliaryFile"
        type: "SChar"
      }
      parameter {
        name: "enc"
        type: "ULong"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSMutableString"
  category_name: "NSMutableStringExtensionMethods"
  method {
    function {
      name: "insertString:atIndex:"
      return_type: "Void"
      parameter {
        name: "aString"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "loc"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "deleteCharactersInRange:"
      return_type: "Void"
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "appendString:"
      return_type: "Void"
      parameter {
        name: "aString"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "appendFormat:"
      return_type: "Void"
      parameter {
        name: "format"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setString:"
      return_type: "Void"
      parameter {
        name: "aString"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithCapacity:"
      return_type: "ObjCId"
      parameter {
        name: "capacity"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "stringWithCapacity:"
      return_type: "ObjCId"
      parameter {
        name: "capacity"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "replaceOccurrencesOfString:withString:options:range:"
      return_type: "ULong"
      parameter {
        name: "target"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "replacement"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
      parameter {
        name: "searchRange"
        type: "Unexposed"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSString"
  category_name: "NSExtendedStringPropertyListParsing"
  method {
    function {
      name: "propertyList"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "propertyListFromStringsFileFormat"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
}
category {
  class_name: "NSString"
  category_name: "NSStringDeprecated"
  method {
    function {
      name: "cString"
      return_type: "Pointer"
    }
    class_method: false
  }
  method {
    function {
      name: "lossyCString"
      return_type: "Pointer"
    }
    class_method: false
  }
  method {
    function {
      name: "cStringLength"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "getCString:"
      return_type: "Void"
      parameter {
        name: "bytes"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "getCString:maxLength:"
      return_type: "Void"
      parameter {
        name: "bytes"
        type: "Pointer"
      }
      parameter {
        name: "maxLength"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "getCString:maxLength:range:remainingRange:"
      return_type: "Void"
      parameter {
        name: "bytes"
        type: "Pointer"
      }
      parameter {
        name: "maxLength"
        type: "ULong"
      }
      parameter {
        name: "aRange"
        type: "Unexposed"
      }
      parameter {
        name: "leftoverRange"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "writeToFile:atomically:"
      return_type: "SChar"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "useAuxiliaryFile"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "writeToURL:atomically:"
      return_type: "SChar"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "atomically"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithContentsOfFile:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithContentsOfURL:"
      return_type: "ObjCId"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "stringWithContentsOfFile:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "stringWithContentsOfURL:"
      return_type: "ObjCId"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithCStringNoCopy:length:freeWhenDone:"
      return_type: "ObjCId"
      parameter {
        name: "bytes"
        type: "Pointer"
      }
      parameter {
        name: "length"
        type: "ULong"
      }
      parameter {
        name: "freeBuffer"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithCString:length:"
      return_type: "ObjCId"
      parameter {
        name: "bytes"
        type: "Pointer"
      }
      parameter {
        name: "length"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithCString:"
      return_type: "ObjCId"
      parameter {
        name: "bytes"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "stringWithCString:length:"
      return_type: "ObjCId"
      parameter {
        name: "bytes"
        type: "Pointer"
      }
      parameter {
        name: "length"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "stringWithCString:"
      return_type: "ObjCId"
      parameter {
        name: "bytes"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "getCharacters:"
      return_type: "Void"
      parameter {
        name: "buffer"
        type: "Pointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSCoder"
  category_name: "NSExtendedCoder"
  method {
    function {
      name: "encodeObject:"
      return_type: "Void"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "encodeRootObject:"
      return_type: "Void"
      parameter {
        name: "rootObject"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "encodeBycopyObject:"
      return_type: "Void"
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "encodeByrefObject:"
      return_type: "Void"
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "encodeConditionalObject:"
      return_type: "Void"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "encodeValuesOfObjCTypes:"
      return_type: "Void"
      parameter {
        name: "types"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "encodeArrayOfObjCType:count:at:"
      return_type: "Void"
      parameter {
        name: "type"
        type: "Pointer"
      }
      parameter {
        name: "count"
        type: "ULong"
      }
      parameter {
        name: "array"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "encodeBytes:length:"
      return_type: "Void"
      parameter {
        name: "byteaddr"
        type: "Pointer"
      }
      parameter {
        name: "length"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decodeObject"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "decodeValuesOfObjCTypes:"
      return_type: "Void"
      parameter {
        name: "types"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decodeArrayOfObjCType:count:at:"
      return_type: "Void"
      parameter {
        name: "itemType"
        type: "Pointer"
      }
      parameter {
        name: "count"
        type: "ULong"
      }
      parameter {
        name: "array"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decodeBytesWithReturnedLength:"
      return_type: "Pointer"
      parameter {
        name: "lengthp"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "encodePropertyList:"
      return_type: "Void"
      parameter {
        name: "aPropertyList"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decodePropertyList"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "setObjectZone:"
      return_type: "Void"
      parameter {
        name: "zone"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "objectZone"
      return_type: "Pointer"
    }
    class_method: false
  }
  method {
    function {
      name: "systemVersion"
      return_type: "UInt"
    }
    class_method: false
  }
  method {
    function {
      name: "allowsKeyedCoding"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "encodeObject:forKey:"
      return_type: "Void"
      parameter {
        name: "objv"
        type: "ObjCId"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "encodeConditionalObject:forKey:"
      return_type: "Void"
      parameter {
        name: "objv"
        type: "ObjCId"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "encodeBool:forKey:"
      return_type: "Void"
      parameter {
        name: "boolv"
        type: "SChar"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "encodeInt:forKey:"
      return_type: "Void"
      parameter {
        name: "intv"
        type: "Int"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "encodeInt32:forKey:"
      return_type: "Void"
      parameter {
        name: "intv"
        type: "Int"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "encodeInt64:forKey:"
      return_type: "Void"
      parameter {
        name: "intv"
        type: "LongLong"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "encodeFloat:forKey:"
      return_type: "Void"
      parameter {
        name: "realv"
        type: "Float"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "encodeDouble:forKey:"
      return_type: "Void"
      parameter {
        name: "realv"
        type: "Double"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "encodeBytes:length:forKey:"
      return_type: "Void"
      parameter {
        name: "bytesp"
        type: "Pointer"
      }
      parameter {
        name: "lenv"
        type: "ULong"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "containsValueForKey:"
      return_type: "SChar"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decodeObjectForKey:"
      return_type: "ObjCId"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decodeBoolForKey:"
      return_type: "SChar"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decodeIntForKey:"
      return_type: "Int"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decodeInt32ForKey:"
      return_type: "Int"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decodeInt64ForKey:"
      return_type: "LongLong"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decodeFloatForKey:"
      return_type: "Float"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decodeDoubleForKey:"
      return_type: "Double"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decodeBytesForKey:returnedLength:"
      return_type: "Pointer"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "lengthp"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "encodeInteger:forKey:"
      return_type: "Void"
      parameter {
        name: "intv"
        type: "Long"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decodeIntegerForKey:"
      return_type: "Long"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSCoder"
  category_name: "NSTypedstreamCompatibility"
  method {
    function {
      name: "encodeNXObject:"
      return_type: "Void"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decodeNXObject"
      return_type: "ObjCId"
    }
    class_method: false
  }
}
category {
  class_name: "NSData"
  category_name: "NSExtendedData"
  method {
    function {
      name: "description"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "getBytes:length:"
      return_type: "Void"
      parameter {
        name: "buffer"
        type: "Pointer"
      }
      parameter {
        name: "length"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "getBytes:range:"
      return_type: "Void"
      parameter {
        name: "buffer"
        type: "Pointer"
      }
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isEqualToData:"
      return_type: "SChar"
      parameter {
        name: "other"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "subdataWithRange:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "writeToFile:atomically:"
      return_type: "SChar"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "useAuxiliaryFile"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "writeToURL:atomically:"
      return_type: "SChar"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "atomically"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "writeToFile:options:error:"
      return_type: "SChar"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "writeOptionsMask"
        type: "ULong"
      }
      parameter {
        name: "errorPtr"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "writeToURL:options:error:"
      return_type: "SChar"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "writeOptionsMask"
        type: "ULong"
      }
      parameter {
        name: "errorPtr"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "rangeOfData:options:range:"
      return_type: "Unexposed"
      parameter {
        name: "dataToFind"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mask"
        type: "ULong"
      }
      parameter {
        name: "searchRange"
        type: "Unexposed"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSData"
  category_name: "NSDataCreation"
  method {
    function {
      name: "data"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "dataWithBytes:length:"
      return_type: "ObjCId"
      parameter {
        name: "bytes"
        type: "Pointer"
      }
      parameter {
        name: "length"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "dataWithBytesNoCopy:length:"
      return_type: "ObjCId"
      parameter {
        name: "bytes"
        type: "Pointer"
      }
      parameter {
        name: "length"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "dataWithBytesNoCopy:length:freeWhenDone:"
      return_type: "ObjCId"
      parameter {
        name: "bytes"
        type: "Pointer"
      }
      parameter {
        name: "length"
        type: "ULong"
      }
      parameter {
        name: "b"
        type: "SChar"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "dataWithContentsOfFile:options:error:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "readOptionsMask"
        type: "ULong"
      }
      parameter {
        name: "errorPtr"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "dataWithContentsOfURL:options:error:"
      return_type: "ObjCId"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "readOptionsMask"
        type: "ULong"
      }
      parameter {
        name: "errorPtr"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "dataWithContentsOfFile:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "dataWithContentsOfURL:"
      return_type: "ObjCId"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithBytes:length:"
      return_type: "ObjCId"
      parameter {
        name: "bytes"
        type: "Pointer"
      }
      parameter {
        name: "length"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithBytesNoCopy:length:"
      return_type: "ObjCId"
      parameter {
        name: "bytes"
        type: "Pointer"
      }
      parameter {
        name: "length"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithBytesNoCopy:length:freeWhenDone:"
      return_type: "ObjCId"
      parameter {
        name: "bytes"
        type: "Pointer"
      }
      parameter {
        name: "length"
        type: "ULong"
      }
      parameter {
        name: "b"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithContentsOfFile:options:error:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "readOptionsMask"
        type: "ULong"
      }
      parameter {
        name: "errorPtr"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithContentsOfURL:options:error:"
      return_type: "ObjCId"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "readOptionsMask"
        type: "ULong"
      }
      parameter {
        name: "errorPtr"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithContentsOfFile:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithContentsOfURL:"
      return_type: "ObjCId"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithData:"
      return_type: "ObjCId"
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "dataWithData:"
      return_type: "ObjCId"
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
}
category {
  class_name: "NSData"
  category_name: "NSDeprecated"
  method {
    function {
      name: "getBytes:"
      return_type: "Void"
      parameter {
        name: "buffer"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "dataWithContentsOfMappedFile:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithContentsOfMappedFile:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSMutableData"
  category_name: "NSExtendedMutableData"
  method {
    function {
      name: "appendBytes:length:"
      return_type: "Void"
      parameter {
        name: "bytes"
        type: "Pointer"
      }
      parameter {
        name: "length"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "appendData:"
      return_type: "Void"
      parameter {
        name: "other"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "increaseLengthBy:"
      return_type: "Void"
      parameter {
        name: "extraLength"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "replaceBytesInRange:withBytes:"
      return_type: "Void"
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "bytes"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "resetBytesInRange:"
      return_type: "Void"
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setData:"
      return_type: "Void"
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "replaceBytesInRange:withBytes:length:"
      return_type: "Void"
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "replacementBytes"
        type: "Pointer"
      }
      parameter {
        name: "replacementLength"
        type: "ULong"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSMutableData"
  category_name: "NSMutableDataCreation"
  method {
    function {
      name: "dataWithCapacity:"
      return_type: "ObjCId"
      parameter {
        name: "aNumItems"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "dataWithLength:"
      return_type: "ObjCId"
      parameter {
        name: "length"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithCapacity:"
      return_type: "ObjCId"
      parameter {
        name: "capacity"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithLength:"
      return_type: "ObjCId"
      parameter {
        name: "length"
        type: "ULong"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSDateFormatter"
  category_name: "NSDateFormatterCompatibility"
  method {
    function {
      name: "initWithDateFormat:allowNaturalLanguage:"
      return_type: "ObjCId"
      parameter {
        name: "format"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "flag"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "allowsNaturalLanguage"
      return_type: "SChar"
    }
    class_method: false
  }
}
category {
  class_name: "NSScanner"
  category_name: "NSExtendedScanner"
  method {
    function {
      name: "charactersToBeSkipped"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "caseSensitive"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "locale"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "scanInt:"
      return_type: "SChar"
      parameter {
        name: "value"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "scanInteger:"
      return_type: "SChar"
      parameter {
        name: "value"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "scanHexLongLong:"
      return_type: "SChar"
      parameter {
        name: "result"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "scanHexFloat:"
      return_type: "SChar"
      parameter {
        name: "result"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "scanHexDouble:"
      return_type: "SChar"
      parameter {
        name: "result"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "scanHexInt:"
      return_type: "SChar"
      parameter {
        name: "value"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "scanLongLong:"
      return_type: "SChar"
      parameter {
        name: "value"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "scanFloat:"
      return_type: "SChar"
      parameter {
        name: "value"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "scanDouble:"
      return_type: "SChar"
      parameter {
        name: "value"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "scanString:intoString:"
      return_type: "SChar"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "value"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "scanCharactersFromSet:intoString:"
      return_type: "SChar"
      parameter {
        name: "set"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "value"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "scanUpToString:intoString:"
      return_type: "SChar"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "value"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "scanUpToCharactersFromSet:intoString:"
      return_type: "SChar"
      parameter {
        name: "set"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "value"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isAtEnd"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "initWithString:"
      return_type: "ObjCId"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "scannerWithString:"
      return_type: "ObjCId"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "localizedScannerWithString:"
      return_type: "ObjCId"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
}
category {
  class_name: "NSDictionary"
  category_name: "NSExtendedDictionary"
  method {
    function {
      name: "allKeys"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "allKeysForObject:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "allValues"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "description"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "descriptionInStringsFileFormat"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "descriptionWithLocale:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "locale"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "descriptionWithLocale:indent:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "locale"
        type: "ObjCId"
      }
      parameter {
        name: "level"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isEqualToDictionary:"
      return_type: "SChar"
      parameter {
        name: "otherDictionary"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "objectEnumerator"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "objectsForKeys:notFoundMarker:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "keys"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "marker"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "writeToFile:atomically:"
      return_type: "SChar"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "useAuxiliaryFile"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "writeToURL:atomically:"
      return_type: "SChar"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "atomically"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "keysSortedByValueUsingSelector:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "comparator"
        type: "ObjCSel"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "getObjects:andKeys:"
      return_type: "Void"
      parameter {
        name: "objects"
        type: "Pointer"
      }
      parameter {
        name: "keys"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "enumerateKeysAndObjectsUsingBlock:"
      return_type: "Void"
      parameter {
        name: "block"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "enumerateKeysAndObjectsWithOptions:usingBlock:"
      return_type: "Void"
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "block"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "keysSortedByValueUsingComparator:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "cmptr"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "keysSortedByValueWithOptions:usingComparator:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "cmptr"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "keysOfEntriesPassingTest:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "predicate"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "keysOfEntriesWithOptions:passingTest:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "predicate"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSDictionary"
  category_name: "NSDictionaryCreation"
  method {
    function {
      name: "dictionary"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "dictionaryWithObject:forKey:"
      return_type: "ObjCId"
      parameter {
        name: "object"
        type: "ObjCId"
      }
      parameter {
        name: "key"
        type: "ObjCId"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "dictionaryWithObjects:forKeys:count:"
      return_type: "ObjCId"
      parameter {
        name: "objects"
        type: "Pointer"
      }
      parameter {
        name: "keys"
        type: "Pointer"
      }
      parameter {
        name: "cnt"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "dictionaryWithObjectsAndKeys:"
      return_type: "ObjCId"
      parameter {
        name: "firstObject"
        type: "ObjCId"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "dictionaryWithDictionary:"
      return_type: "ObjCId"
      parameter {
        name: "dict"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "dictionaryWithObjects:forKeys:"
      return_type: "ObjCId"
      parameter {
        name: "objects"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "keys"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithObjects:forKeys:count:"
      return_type: "ObjCId"
      parameter {
        name: "objects"
        type: "Pointer"
      }
      parameter {
        name: "keys"
        type: "Pointer"
      }
      parameter {
        name: "cnt"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithObjectsAndKeys:"
      return_type: "ObjCId"
      parameter {
        name: "firstObject"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithDictionary:"
      return_type: "ObjCId"
      parameter {
        name: "otherDictionary"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithDictionary:copyItems:"
      return_type: "ObjCId"
      parameter {
        name: "otherDictionary"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "flag"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithObjects:forKeys:"
      return_type: "ObjCId"
      parameter {
        name: "objects"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "keys"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "dictionaryWithContentsOfFile:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "dictionaryWithContentsOfURL:"
      return_type: "ObjCId"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithContentsOfFile:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithContentsOfURL:"
      return_type: "ObjCId"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSMutableDictionary"
  category_name: "NSExtendedMutableDictionary"
  method {
    function {
      name: "addEntriesFromDictionary:"
      return_type: "Void"
      parameter {
        name: "otherDictionary"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeAllObjects"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "removeObjectsForKeys:"
      return_type: "Void"
      parameter {
        name: "keyArray"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setDictionary:"
      return_type: "Void"
      parameter {
        name: "otherDictionary"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSMutableDictionary"
  category_name: "NSMutableDictionaryCreation"
  method {
    function {
      name: "dictionaryWithCapacity:"
      return_type: "ObjCId"
      parameter {
        name: "numItems"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithCapacity:"
      return_type: "ObjCId"
      parameter {
        name: "numItems"
        type: "ULong"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSNumber"
  category_name: "NSDecimalNumberExtensions"
  method {
    function {
      name: "decimalValue"
      return_type: "Unexposed"
    }
    class_method: false
  }
}
category {
  class_name: "NSScanner"
  category_name: "NSDecimalNumberScanning"
  method {
    function {
      name: "scanDecimal:"
      return_type: "SChar"
      parameter {
        name: "dcm"
        type: "Pointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSObject"
  category_name: "NSErrorRecoveryAttempting"
  method {
    function {
      name: "attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:"
      return_type: "Void"
      parameter {
        name: "error"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "recoveryOptionIndex"
        type: "ULong"
      }
      parameter {
        name: "delegate"
        type: "ObjCId"
      }
      parameter {
        name: "didRecoverSelector"
        type: "ObjCSel"
      }
      parameter {
        name: "contextInfo"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "attemptRecoveryFromError:optionIndex:"
      return_type: "SChar"
      parameter {
        name: "error"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "recoveryOptionIndex"
        type: "ULong"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSException"
  category_name: "NSExceptionRaisingConveniences"
  method {
    function {
      name: "raise:format:"
      return_type: "Void"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "format"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "raise:format:arguments:"
      return_type: "Void"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "format"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "argList"
        type: "Pointer"
      }
    }
    class_method: true
  }
}
category {
  class_name: "NSFileHandle"
  category_name: "NSFileHandleCreation"
  method {
    function {
      name: "fileHandleWithStandardInput"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "fileHandleWithStandardOutput"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "fileHandleWithStandardError"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "fileHandleWithNullDevice"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "fileHandleForReadingAtPath:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "fileHandleForWritingAtPath:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "fileHandleForUpdatingAtPath:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "fileHandleForReadingFromURL:error:"
      return_type: "ObjCId"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "fileHandleForWritingToURL:error:"
      return_type: "ObjCId"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "fileHandleForUpdatingURL:error:"
      return_type: "ObjCId"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: true
  }
}
category {
  class_name: "NSFileHandle"
  category_name: "NSFileHandleAsynchronousAccess"
  method {
    function {
      name: "readInBackgroundAndNotifyForModes:"
      return_type: "Void"
      parameter {
        name: "modes"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "readInBackgroundAndNotify"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "readToEndOfFileInBackgroundAndNotifyForModes:"
      return_type: "Void"
      parameter {
        name: "modes"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "readToEndOfFileInBackgroundAndNotify"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "acceptConnectionInBackgroundAndNotifyForModes:"
      return_type: "Void"
      parameter {
        name: "modes"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "acceptConnectionInBackgroundAndNotify"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "waitForDataInBackgroundAndNotifyForModes:"
      return_type: "Void"
      parameter {
        name: "modes"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "waitForDataInBackgroundAndNotify"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "readabilityHandler"
      return_type: "BlockPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setReadabilityHandler:"
      return_type: "Void"
      parameter {
        name: "readabilityHandler"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "writeabilityHandler"
      return_type: "BlockPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setWriteabilityHandler:"
      return_type: "Void"
      parameter {
        name: "writeabilityHandler"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  property {
    name: "readabilityHandler"
    type: "BlockPointer"
  }
  property {
    name: "writeabilityHandler"
    type: "BlockPointer"
  }
}
category {
  class_name: "NSFileHandle"
  category_name: "NSFileHandlePlatformSpecific"
  method {
    function {
      name: "initWithFileDescriptor:closeOnDealloc:"
      return_type: "ObjCId"
      parameter {
        name: "fd"
        type: "Int"
      }
      parameter {
        name: "closeopt"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithFileDescriptor:"
      return_type: "ObjCId"
      parameter {
        name: "fd"
        type: "Int"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "fileDescriptor"
      return_type: "Int"
    }
    class_method: false
  }
}
category {
  class_name: "NSString"
  category_name: "NSStringPathExtensions"
  method {
    function {
      name: "pathWithComponents:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "components"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "pathComponents"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "isAbsolutePath"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "lastPathComponent"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "stringByDeletingLastPathComponent"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "stringByAppendingPathComponent:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "str"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "pathExtension"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "stringByDeletingPathExtension"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "stringByAppendingPathExtension:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "str"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "stringByAbbreviatingWithTildeInPath"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "stringByExpandingTildeInPath"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "stringByStandardizingPath"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "stringByResolvingSymlinksInPath"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "stringsByAppendingPaths:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "paths"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "completePathIntoString:caseSensitive:matchesIntoArray:filterTypes:"
      return_type: "ULong"
      parameter {
        name: "outputName"
        type: "Pointer"
      }
      parameter {
        name: "flag"
        type: "SChar"
      }
      parameter {
        name: "outputArray"
        type: "Pointer"
      }
      parameter {
        name: "filterTypes"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "fileSystemRepresentation"
      return_type: "Pointer"
    }
    class_method: false
  }
  method {
    function {
      name: "getFileSystemRepresentation:maxLength:"
      return_type: "SChar"
      parameter {
        name: "cname"
        type: "Pointer"
      }
      parameter {
        name: "max"
        type: "ULong"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSArray"
  category_name: "NSArrayPathExtensions"
  method {
    function {
      name: "pathsMatchingExtensions:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "filterTypes"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSObject"
  category_name: "NSCopyLinkMoveHandler"
  method {
    function {
      name: "fileManager:shouldProceedAfterError:"
      return_type: "SChar"
      parameter {
        name: "fm"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "errorInfo"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "fileManager:willProcessPath:"
      return_type: "Void"
      parameter {
        name: "fm"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSDictionary"
  category_name: "NSFileAttributes"
  method {
    function {
      name: "fileSize"
      return_type: "ULongLong"
    }
    class_method: false
  }
  method {
    function {
      name: "fileModificationDate"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "fileType"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "filePosixPermissions"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "fileOwnerAccountName"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "fileGroupOwnerAccountName"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "fileSystemNumber"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "fileSystemFileNumber"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "fileExtensionHidden"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "fileHFSCreatorCode"
      return_type: "UInt"
    }
    class_method: false
  }
  method {
    function {
      name: "fileHFSTypeCode"
      return_type: "UInt"
    }
    class_method: false
  }
  method {
    function {
      name: "fileIsImmutable"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "fileIsAppendOnly"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "fileCreationDate"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "fileOwnerAccountID"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "fileGroupOwnerAccountID"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
}
category {
  class_name: "NSOrderedSet"
  category_name: "NSExtendedOrderedSet"
  method {
    function {
      name: "getObjects:range:"
      return_type: "Void"
      parameter {
        name: "objects"
        type: "Pointer"
      }
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "objectsAtIndexes:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "indexes"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "firstObject"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "lastObject"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "isEqualToOrderedSet:"
      return_type: "SChar"
      parameter {
        name: "other"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "containsObject:"
      return_type: "SChar"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "intersectsOrderedSet:"
      return_type: "SChar"
      parameter {
        name: "other"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "intersectsSet:"
      return_type: "SChar"
      parameter {
        name: "set"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isSubsetOfOrderedSet:"
      return_type: "SChar"
      parameter {
        name: "other"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isSubsetOfSet:"
      return_type: "SChar"
      parameter {
        name: "set"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "objectEnumerator"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "reverseObjectEnumerator"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "reversedOrderedSet"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "array"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "set"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "enumerateObjectsUsingBlock:"
      return_type: "Void"
      parameter {
        name: "block"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "enumerateObjectsWithOptions:usingBlock:"
      return_type: "Void"
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "block"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "enumerateObjectsAtIndexes:options:usingBlock:"
      return_type: "Void"
      parameter {
        name: "s"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "block"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "indexOfObjectPassingTest:"
      return_type: "ULong"
      parameter {
        name: "predicate"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "indexOfObjectWithOptions:passingTest:"
      return_type: "ULong"
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "predicate"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "indexOfObjectAtIndexes:options:passingTest:"
      return_type: "ULong"
      parameter {
        name: "s"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "predicate"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "indexesOfObjectsPassingTest:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "predicate"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "indexesOfObjectsWithOptions:passingTest:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "predicate"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "indexesOfObjectsAtIndexes:options:passingTest:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "s"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "predicate"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "indexOfObject:inSortedRange:options:usingComparator:"
      return_type: "ULong"
      parameter {
        name: "object"
        type: "ObjCId"
      }
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "cmp"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "sortedArrayUsingComparator:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "cmptr"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "sortedArrayWithOptions:usingComparator:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "cmptr"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "description"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "descriptionWithLocale:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "locale"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "descriptionWithLocale:indent:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "locale"
        type: "ObjCId"
      }
      parameter {
        name: "level"
        type: "ULong"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSOrderedSet"
  category_name: "NSOrderedSetCreation"
  method {
    function {
      name: "orderedSet"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "orderedSetWithObject:"
      return_type: "ObjCId"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "orderedSetWithObjects:count:"
      return_type: "ObjCId"
      parameter {
        name: "objects"
        type: "Pointer"
      }
      parameter {
        name: "cnt"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "orderedSetWithObjects:"
      return_type: "ObjCId"
      parameter {
        name: "firstObj"
        type: "ObjCId"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "orderedSetWithOrderedSet:"
      return_type: "ObjCId"
      parameter {
        name: "set"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "orderedSetWithOrderedSet:range:copyItems:"
      return_type: "ObjCId"
      parameter {
        name: "set"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "flag"
        type: "SChar"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "orderedSetWithArray:"
      return_type: "ObjCId"
      parameter {
        name: "array"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "orderedSetWithArray:range:copyItems:"
      return_type: "ObjCId"
      parameter {
        name: "array"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "flag"
        type: "SChar"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "orderedSetWithSet:"
      return_type: "ObjCId"
      parameter {
        name: "set"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "orderedSetWithSet:copyItems:"
      return_type: "ObjCId"
      parameter {
        name: "set"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "flag"
        type: "SChar"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithObject:"
      return_type: "ObjCId"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithObjects:count:"
      return_type: "ObjCId"
      parameter {
        name: "objects"
        type: "Pointer"
      }
      parameter {
        name: "cnt"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithObjects:"
      return_type: "ObjCId"
      parameter {
        name: "firstObj"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithOrderedSet:"
      return_type: "ObjCId"
      parameter {
        name: "set"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithOrderedSet:copyItems:"
      return_type: "ObjCId"
      parameter {
        name: "set"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "flag"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithOrderedSet:range:copyItems:"
      return_type: "ObjCId"
      parameter {
        name: "set"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "flag"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithArray:"
      return_type: "ObjCId"
      parameter {
        name: "array"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithArray:copyItems:"
      return_type: "ObjCId"
      parameter {
        name: "set"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "flag"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithArray:range:copyItems:"
      return_type: "ObjCId"
      parameter {
        name: "set"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "flag"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithSet:"
      return_type: "ObjCId"
      parameter {
        name: "set"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithSet:copyItems:"
      return_type: "ObjCId"
      parameter {
        name: "set"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "flag"
        type: "SChar"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSMutableOrderedSet"
  category_name: "NSExtendedMutableOrderedSet"
  method {
    function {
      name: "addObject:"
      return_type: "Void"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "addObjects:count:"
      return_type: "Void"
      parameter {
        name: "objects"
        type: "Pointer"
      }
      parameter {
        name: "count"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "addObjectsFromArray:"
      return_type: "Void"
      parameter {
        name: "array"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "exchangeObjectAtIndex:withObjectAtIndex:"
      return_type: "Void"
      parameter {
        name: "idx1"
        type: "ULong"
      }
      parameter {
        name: "idx2"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "moveObjectsAtIndexes:toIndex:"
      return_type: "Void"
      parameter {
        name: "indexes"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "idx"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "insertObjects:atIndexes:"
      return_type: "Void"
      parameter {
        name: "objects"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "indexes"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setObject:atIndex:"
      return_type: "Void"
      parameter {
        name: "obj"
        type: "ObjCId"
      }
      parameter {
        name: "idx"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "replaceObjectsInRange:withObjects:count:"
      return_type: "Void"
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "objects"
        type: "Pointer"
      }
      parameter {
        name: "count"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "replaceObjectsAtIndexes:withObjects:"
      return_type: "Void"
      parameter {
        name: "indexes"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "objects"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeObjectsInRange:"
      return_type: "Void"
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeObjectsAtIndexes:"
      return_type: "Void"
      parameter {
        name: "indexes"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeAllObjects"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "removeObject:"
      return_type: "Void"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeObjectsInArray:"
      return_type: "Void"
      parameter {
        name: "array"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "intersectOrderedSet:"
      return_type: "Void"
      parameter {
        name: "other"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "minusOrderedSet:"
      return_type: "Void"
      parameter {
        name: "other"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "unionOrderedSet:"
      return_type: "Void"
      parameter {
        name: "other"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "intersectSet:"
      return_type: "Void"
      parameter {
        name: "other"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "minusSet:"
      return_type: "Void"
      parameter {
        name: "other"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "unionSet:"
      return_type: "Void"
      parameter {
        name: "other"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "sortUsingComparator:"
      return_type: "Void"
      parameter {
        name: "cmptr"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "sortWithOptions:usingComparator:"
      return_type: "Void"
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "cmptr"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "sortRange:options:usingComparator:"
      return_type: "Void"
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "cmptr"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSMutableOrderedSet"
  category_name: "NSMutableOrderedSetCreation"
  method {
    function {
      name: "orderedSetWithCapacity:"
      return_type: "ObjCId"
      parameter {
        name: "numItems"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithCapacity:"
      return_type: "ObjCId"
      parameter {
        name: "numItems"
        type: "ULong"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSSet"
  category_name: "NSExtendedSet"
  method {
    function {
      name: "allObjects"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "anyObject"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "containsObject:"
      return_type: "SChar"
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "description"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "descriptionWithLocale:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "locale"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "intersectsSet:"
      return_type: "SChar"
      parameter {
        name: "otherSet"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isEqualToSet:"
      return_type: "SChar"
      parameter {
        name: "otherSet"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isSubsetOfSet:"
      return_type: "SChar"
      parameter {
        name: "otherSet"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "makeObjectsPerformSelector:"
      return_type: "Void"
      parameter {
        name: "aSelector"
        type: "ObjCSel"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "makeObjectsPerformSelector:withObject:"
      return_type: "Void"
      parameter {
        name: "aSelector"
        type: "ObjCSel"
      }
      parameter {
        name: "argument"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setByAddingObject:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setByAddingObjectsFromSet:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "other"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setByAddingObjectsFromArray:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "other"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "enumerateObjectsUsingBlock:"
      return_type: "Void"
      parameter {
        name: "block"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "enumerateObjectsWithOptions:usingBlock:"
      return_type: "Void"
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "block"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "objectsPassingTest:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "predicate"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "objectsWithOptions:passingTest:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "predicate"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSSet"
  category_name: "NSSetCreation"
  method {
    function {
      name: "set"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "setWithObject:"
      return_type: "ObjCId"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "setWithObjects:count:"
      return_type: "ObjCId"
      parameter {
        name: "objects"
        type: "Pointer"
      }
      parameter {
        name: "cnt"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "setWithObjects:"
      return_type: "ObjCId"
      parameter {
        name: "firstObj"
        type: "ObjCId"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "setWithSet:"
      return_type: "ObjCId"
      parameter {
        name: "set"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "setWithArray:"
      return_type: "ObjCId"
      parameter {
        name: "array"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithObjects:count:"
      return_type: "ObjCId"
      parameter {
        name: "objects"
        type: "Pointer"
      }
      parameter {
        name: "cnt"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithObjects:"
      return_type: "ObjCId"
      parameter {
        name: "firstObj"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithSet:"
      return_type: "ObjCId"
      parameter {
        name: "set"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithSet:copyItems:"
      return_type: "ObjCId"
      parameter {
        name: "set"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "flag"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithArray:"
      return_type: "ObjCId"
      parameter {
        name: "array"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSMutableSet"
  category_name: "NSExtendedMutableSet"
  method {
    function {
      name: "addObjectsFromArray:"
      return_type: "Void"
      parameter {
        name: "array"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "intersectSet:"
      return_type: "Void"
      parameter {
        name: "otherSet"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "minusSet:"
      return_type: "Void"
      parameter {
        name: "otherSet"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeAllObjects"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "unionSet:"
      return_type: "Void"
      parameter {
        name: "otherSet"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setSet:"
      return_type: "Void"
      parameter {
        name: "otherSet"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSMutableSet"
  category_name: "NSMutableSetCreation"
  method {
    function {
      name: "setWithCapacity:"
      return_type: "ObjCId"
      parameter {
        name: "numItems"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithCapacity:"
      return_type: "ObjCId"
      parameter {
        name: "numItems"
        type: "ULong"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSObject"
  category_name: "NSKeyValueCoding"
  method {
    function {
      name: "accessInstanceVariablesDirectly"
      return_type: "SChar"
    }
    class_method: true
  }
  method {
    function {
      name: "valueForKey:"
      return_type: "ObjCId"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setValue:forKey:"
      return_type: "Void"
      parameter {
        name: "value"
        type: "ObjCId"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "validateValue:forKey:error:"
      return_type: "SChar"
      parameter {
        name: "ioValue"
        type: "Pointer"
      }
      parameter {
        name: "inKey"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "outError"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "mutableArrayValueForKey:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "mutableOrderedSetValueForKey:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "mutableSetValueForKey:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "valueForKeyPath:"
      return_type: "ObjCId"
      parameter {
        name: "keyPath"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setValue:forKeyPath:"
      return_type: "Void"
      parameter {
        name: "value"
        type: "ObjCId"
      }
      parameter {
        name: "keyPath"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "validateValue:forKeyPath:error:"
      return_type: "SChar"
      parameter {
        name: "ioValue"
        type: "Pointer"
      }
      parameter {
        name: "inKeyPath"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "outError"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "mutableArrayValueForKeyPath:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "keyPath"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "mutableOrderedSetValueForKeyPath:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "keyPath"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "mutableSetValueForKeyPath:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "keyPath"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "valueForUndefinedKey:"
      return_type: "ObjCId"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setValue:forUndefinedKey:"
      return_type: "Void"
      parameter {
        name: "value"
        type: "ObjCId"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setNilValueForKey:"
      return_type: "Void"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "dictionaryWithValuesForKeys:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "keys"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setValuesForKeysWithDictionary:"
      return_type: "Void"
      parameter {
        name: "keyedValues"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSArray"
  category_name: "NSKeyValueCoding"
  method {
    function {
      name: "valueForKey:"
      return_type: "ObjCId"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setValue:forKey:"
      return_type: "Void"
      parameter {
        name: "value"
        type: "ObjCId"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSDictionary"
  category_name: "NSKeyValueCoding"
  method {
    function {
      name: "valueForKey:"
      return_type: "ObjCId"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSMutableDictionary"
  category_name: "NSKeyValueCoding"
  method {
    function {
      name: "setValue:forKey:"
      return_type: "Void"
      parameter {
        name: "value"
        type: "ObjCId"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSOrderedSet"
  category_name: "NSKeyValueCoding"
  method {
    function {
      name: "valueForKey:"
      return_type: "ObjCId"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setValue:forKey:"
      return_type: "Void"
      parameter {
        name: "value"
        type: "ObjCId"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSSet"
  category_name: "NSKeyValueCoding"
  method {
    function {
      name: "valueForKey:"
      return_type: "ObjCId"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setValue:forKey:"
      return_type: "Void"
      parameter {
        name: "value"
        type: "ObjCId"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSObject"
  category_name: "NSDeprecatedKeyValueCoding"
  method {
    function {
      name: "useStoredAccessor"
      return_type: "SChar"
    }
    class_method: true
  }
  method {
    function {
      name: "storedValueForKey:"
      return_type: "ObjCId"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "takeStoredValue:forKey:"
      return_type: "Void"
      parameter {
        name: "value"
        type: "ObjCId"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "takeValue:forKey:"
      return_type: "Void"
      parameter {
        name: "value"
        type: "ObjCId"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "takeValue:forKeyPath:"
      return_type: "Void"
      parameter {
        name: "value"
        type: "ObjCId"
      }
      parameter {
        name: "keyPath"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "handleQueryWithUnboundKey:"
      return_type: "ObjCId"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "handleTakeValue:forUnboundKey:"
      return_type: "Void"
      parameter {
        name: "value"
        type: "ObjCId"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "unableToSetNilForKey:"
      return_type: "Void"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "valuesForKeys:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "keys"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "takeValuesFromDictionary:"
      return_type: "Void"
      parameter {
        name: "properties"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSObject"
  category_name: "NSKeyValueObserving"
  method {
    function {
      name: "observeValueForKeyPath:ofObject:change:context:"
      return_type: "Void"
      parameter {
        name: "keyPath"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "object"
        type: "ObjCId"
      }
      parameter {
        name: "change"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "context"
        type: "Pointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSObject"
  category_name: "NSKeyValueObserverRegistration"
  method {
    function {
      name: "addObserver:forKeyPath:options:context:"
      return_type: "Void"
      parameter {
        name: "observer"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "keyPath"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
      parameter {
        name: "context"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeObserver:forKeyPath:context:"
      return_type: "Void"
      parameter {
        name: "observer"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "keyPath"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "context"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeObserver:forKeyPath:"
      return_type: "Void"
      parameter {
        name: "observer"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "keyPath"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSArray"
  category_name: "NSKeyValueObserverRegistration"
  method {
    function {
      name: "addObserver:toObjectsAtIndexes:forKeyPath:options:context:"
      return_type: "Void"
      parameter {
        name: "observer"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "indexes"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "keyPath"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
      parameter {
        name: "context"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeObserver:fromObjectsAtIndexes:forKeyPath:context:"
      return_type: "Void"
      parameter {
        name: "observer"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "indexes"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "keyPath"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "context"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeObserver:fromObjectsAtIndexes:forKeyPath:"
      return_type: "Void"
      parameter {
        name: "observer"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "indexes"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "keyPath"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "addObserver:forKeyPath:options:context:"
      return_type: "Void"
      parameter {
        name: "observer"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "keyPath"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
      parameter {
        name: "context"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeObserver:forKeyPath:context:"
      return_type: "Void"
      parameter {
        name: "observer"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "keyPath"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "context"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeObserver:forKeyPath:"
      return_type: "Void"
      parameter {
        name: "observer"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "keyPath"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSOrderedSet"
  category_name: "NSKeyValueObserverRegistration"
  method {
    function {
      name: "addObserver:forKeyPath:options:context:"
      return_type: "Void"
      parameter {
        name: "observer"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "keyPath"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
      parameter {
        name: "context"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeObserver:forKeyPath:context:"
      return_type: "Void"
      parameter {
        name: "observer"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "keyPath"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "context"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeObserver:forKeyPath:"
      return_type: "Void"
      parameter {
        name: "observer"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "keyPath"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSSet"
  category_name: "NSKeyValueObserverRegistration"
  method {
    function {
      name: "addObserver:forKeyPath:options:context:"
      return_type: "Void"
      parameter {
        name: "observer"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "keyPath"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
      parameter {
        name: "context"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeObserver:forKeyPath:context:"
      return_type: "Void"
      parameter {
        name: "observer"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "keyPath"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "context"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeObserver:forKeyPath:"
      return_type: "Void"
      parameter {
        name: "observer"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "keyPath"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSObject"
  category_name: "NSKeyValueObserverNotification"
  method {
    function {
      name: "willChangeValueForKey:"
      return_type: "Void"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "didChangeValueForKey:"
      return_type: "Void"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "willChange:valuesAtIndexes:forKey:"
      return_type: "Void"
      parameter {
        name: "changeKind"
        type: "ULong"
      }
      parameter {
        name: "indexes"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "didChange:valuesAtIndexes:forKey:"
      return_type: "Void"
      parameter {
        name: "changeKind"
        type: "ULong"
      }
      parameter {
        name: "indexes"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "willChangeValueForKey:withSetMutation:usingObjects:"
      return_type: "Void"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mutationKind"
        type: "ULong"
      }
      parameter {
        name: "objects"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "didChangeValueForKey:withSetMutation:usingObjects:"
      return_type: "Void"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "mutationKind"
        type: "ULong"
      }
      parameter {
        name: "objects"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSObject"
  category_name: "NSKeyValueObservingCustomization"
  method {
    function {
      name: "keyPathsForValuesAffectingValueForKey:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "automaticallyNotifiesObserversForKey:"
      return_type: "SChar"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "setObservationInfo:"
      return_type: "Void"
      parameter {
        name: "observationInfo"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "observationInfo"
      return_type: "Pointer"
    }
    class_method: false
  }
}
category {
  class_name: "NSObject"
  category_name: "NSDeprecatedKeyValueObservingCustomization"
  method {
    function {
      name: "setKeys:triggerChangeNotificationsForDependentKey:"
      return_type: "Void"
      parameter {
        name: "keys"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "dependentKey"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
}
category {
  class_name: "NSValue"
  category_name: "NSValueGeometryExtensions"
  method {
    function {
      name: "valueWithPoint:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "point"
        type: "Unexposed"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "valueWithSize:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "size"
        type: "Unexposed"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "valueWithRect:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "rect"
        type: "Unexposed"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "pointValue"
      return_type: "Unexposed"
    }
    class_method: false
  }
  method {
    function {
      name: "sizeValue"
      return_type: "Unexposed"
    }
    class_method: false
  }
  method {
    function {
      name: "rectValue"
      return_type: "Unexposed"
    }
    class_method: false
  }
}
category {
  class_name: "NSCoder"
  category_name: "NSGeometryCoding"
  method {
    function {
      name: "encodePoint:"
      return_type: "Void"
      parameter {
        name: "point"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decodePoint"
      return_type: "Unexposed"
    }
    class_method: false
  }
  method {
    function {
      name: "encodeSize:"
      return_type: "Void"
      parameter {
        name: "size"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decodeSize"
      return_type: "Unexposed"
    }
    class_method: false
  }
  method {
    function {
      name: "encodeRect:"
      return_type: "Void"
      parameter {
        name: "rect"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decodeRect"
      return_type: "Unexposed"
    }
    class_method: false
  }
}
category {
  class_name: "NSCoder"
  category_name: "NSGeometryKeyedCoding"
  method {
    function {
      name: "encodePoint:forKey:"
      return_type: "Void"
      parameter {
        name: "point"
        type: "Unexposed"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "encodeSize:forKey:"
      return_type: "Void"
      parameter {
        name: "size"
        type: "Unexposed"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "encodeRect:forKey:"
      return_type: "Void"
      parameter {
        name: "rect"
        type: "Unexposed"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decodePointForKey:"
      return_type: "Unexposed"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decodeSizeForKey:"
      return_type: "Unexposed"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "decodeRectForKey:"
      return_type: "Unexposed"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSObject"
  category_name: "NSKeyedArchiverObjectSubstitution"
  method {
    function {
      name: "classForKeyedArchiver"
      return_type: "ObjCClass"
    }
    class_method: false
  }
  method {
    function {
      name: "replacementObjectForKeyedArchiver:"
      return_type: "ObjCId"
      parameter {
        name: "archiver"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "classFallbacksForKeyedArchiver"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
}
category {
  class_name: "NSObject"
  category_name: "NSKeyedUnarchiverObjectSubstitution"
  method {
    function {
      name: "classForKeyedUnarchiver"
      return_type: "ObjCClass"
    }
    class_method: true
  }
}
category {
  class_name: "NSLocale"
  category_name: "NSExtendedLocale"
  method {
    function {
      name: "localeIdentifier"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
}
category {
  class_name: "NSLocale"
  category_name: "NSLocaleCreation"
  method {
    function {
      name: "systemLocale"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "currentLocale"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "autoupdatingCurrentLocale"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "initWithLocaleIdentifier:"
      return_type: "ObjCId"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSLocale"
  category_name: "NSLocaleGeneralInfo"
  method {
    function {
      name: "availableLocaleIdentifiers"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "ISOLanguageCodes"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "ISOCountryCodes"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "ISOCurrencyCodes"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "commonISOCurrencyCodes"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "preferredLanguages"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "componentsFromLocaleIdentifier:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "localeIdentifierFromComponents:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "dict"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "canonicalLocaleIdentifierFromString:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "canonicalLanguageIdentifierFromString:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "localeIdentifierFromWindowsLocaleCode:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "lcid"
        type: "UInt"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "windowsLocaleCodeFromLocaleIdentifier:"
      return_type: "UInt"
      parameter {
        name: "localeIdentifier"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "characterDirectionForLanguage:"
      return_type: "ULong"
      parameter {
        name: "isoLangCode"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "lineDirectionForLanguage:"
      return_type: "ULong"
      parameter {
        name: "isoLangCode"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
}
category {
  class_name: "NSNotification"
  category_name: "NSNotificationCreation"
  method {
    function {
      name: "notificationWithName:object:"
      return_type: "ObjCId"
      parameter {
        name: "aName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "notificationWithName:object:userInfo:"
      return_type: "ObjCId"
      parameter {
        name: "aName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "anObject"
        type: "ObjCId"
      }
      parameter {
        name: "aUserInfo"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
}
category {
  class_name: "NSNumberFormatter"
  category_name: "NSNumberFormatterCompatibility"
  method {
    function {
      name: "hasThousandSeparators"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "setHasThousandSeparators:"
      return_type: "Void"
      parameter {
        name: "flag"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "thousandSeparator"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setThousandSeparator:"
      return_type: "Void"
      parameter {
        name: "newSeparator"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "localizesFormat"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "setLocalizesFormat:"
      return_type: "Void"
      parameter {
        name: "flag"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "format"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setFormat:"
      return_type: "Void"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "attributedStringForZero"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setAttributedStringForZero:"
      return_type: "Void"
      parameter {
        name: "newAttributedString"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "attributedStringForNil"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setAttributedStringForNil:"
      return_type: "Void"
      parameter {
        name: "newAttributedString"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "attributedStringForNotANumber"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setAttributedStringForNotANumber:"
      return_type: "Void"
      parameter {
        name: "newAttributedString"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "roundingBehavior"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setRoundingBehavior:"
      return_type: "Void"
      parameter {
        name: "newRoundingBehavior"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSOrthography"
  category_name: "NSOrthographyExtended"
  method {
    function {
      name: "languagesForScript:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "script"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "dominantLanguageForScript:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "script"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "dominantLanguage"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "allScripts"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "allLanguages"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  property {
    name: "dominantLanguage"
    type: "ObjCObjectPointer"
  }
  property {
    name: "allScripts"
    type: "ObjCObjectPointer"
  }
  property {
    name: "allLanguages"
    type: "ObjCObjectPointer"
  }
}
category {
  class_name: "NSOrthography"
  category_name: "NSOrthographyCreation"
  method {
    function {
      name: "orthographyWithDominantScript:languageMap:"
      return_type: "ObjCId"
      parameter {
        name: "script"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "map"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithDominantScript:languageMap:"
      return_type: "ObjCId"
      parameter {
        name: "script"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "map"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSTextCheckingResult"
  category_name: "NSTextCheckingResultOptional"
  method {
    function {
      name: "orthography"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "grammarDetails"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "date"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "timeZone"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "duration"
      return_type: "Double"
    }
    class_method: false
  }
  method {
    function {
      name: "components"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "URL"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "replacementString"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "regularExpression"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "phoneNumber"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "addressComponents"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "numberOfRanges"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "rangeAtIndex:"
      return_type: "Unexposed"
      parameter {
        name: "idx"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "resultByAdjustingRangesWithOffset:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "offset"
        type: "Long"
      }
    }
    class_method: false
  }
  property {
    name: "orthography"
    type: "ObjCObjectPointer"
  }
  property {
    name: "grammarDetails"
    type: "ObjCObjectPointer"
  }
  property {
    name: "date"
    type: "ObjCObjectPointer"
  }
  property {
    name: "timeZone"
    type: "ObjCObjectPointer"
  }
  property {
    name: "duration"
    type: "Double"
  }
  property {
    name: "components"
    type: "ObjCObjectPointer"
  }
  property {
    name: "URL"
    type: "ObjCObjectPointer"
  }
  property {
    name: "replacementString"
    type: "ObjCObjectPointer"
  }
  property {
    name: "regularExpression"
    type: "ObjCObjectPointer"
  }
  property {
    name: "phoneNumber"
    type: "ObjCObjectPointer"
  }
  property {
    name: "addressComponents"
    type: "ObjCObjectPointer"
  }
  property {
    name: "numberOfRanges"
    type: "ULong"
  }
}
category {
  class_name: "NSTextCheckingResult"
  category_name: "NSTextCheckingResultCreation"
  method {
    function {
      name: "orthographyCheckingResultWithRange:orthography:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "orthography"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "spellCheckingResultWithRange:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "grammarCheckingResultWithRange:details:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "details"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "dateCheckingResultWithRange:date:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "date"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "dateCheckingResultWithRange:date:timeZone:duration:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "date"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "timeZone"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "duration"
        type: "Double"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "addressCheckingResultWithRange:components:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "components"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "linkCheckingResultWithRange:URL:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "quoteCheckingResultWithRange:replacementString:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "replacementString"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "dashCheckingResultWithRange:replacementString:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "replacementString"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "replacementCheckingResultWithRange:replacementString:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "replacementString"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "correctionCheckingResultWithRange:replacementString:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "replacementString"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "regularExpressionCheckingResultWithRanges:count:regularExpression:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "ranges"
        type: "Pointer"
      }
      parameter {
        name: "count"
        type: "ULong"
      }
      parameter {
        name: "regularExpression"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "phoneNumberCheckingResultWithRange:phoneNumber:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "phoneNumber"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "transitInformationCheckingResultWithRange:components:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "components"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
}
category {
  class_name: "NSRegularExpression"
  category_name: "NSMatching"
  method {
    function {
      name: "enumerateMatchesInString:options:range:usingBlock:"
      return_type: "Void"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "block"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "matchesInString:options:range:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "numberOfMatchesInString:options:range:"
      return_type: "ULong"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "firstMatchInString:options:range:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "rangeOfFirstMatchInString:options:range:"
      return_type: "Unexposed"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSRegularExpression"
  category_name: "NSReplacement"
  method {
    function {
      name: "stringByReplacingMatchesInString:options:range:withTemplate:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "templ"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "replaceMatchesInString:options:range:withTemplate:"
      return_type: "ULong"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "options"
        type: "ULong"
      }
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "templ"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "replacementStringForResult:inString:offset:template:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "result"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "offset"
        type: "Long"
      }
      parameter {
        name: "templ"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "escapedTemplateForString:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
}
category {
  class_name: "NSRunLoop"
  category_name: "NSRunLoopConveniences"
  method {
    function {
      name: "run"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "runUntilDate:"
      return_type: "Void"
      parameter {
        name: "limitDate"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "runMode:beforeDate:"
      return_type: "SChar"
      parameter {
        name: "mode"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "limitDate"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "configureAsServer"
      return_type: "Void"
    }
    class_method: false
  }
}
category {
  class_name: "NSObject"
  category_name: "NSDelayedPerforming"
  method {
    function {
      name: "performSelector:withObject:afterDelay:inModes:"
      return_type: "Void"
      parameter {
        name: "aSelector"
        type: "ObjCSel"
      }
      parameter {
        name: "anArgument"
        type: "ObjCId"
      }
      parameter {
        name: "delay"
        type: "Double"
      }
      parameter {
        name: "modes"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "performSelector:withObject:afterDelay:"
      return_type: "Void"
      parameter {
        name: "aSelector"
        type: "ObjCSel"
      }
      parameter {
        name: "anArgument"
        type: "ObjCId"
      }
      parameter {
        name: "delay"
        type: "Double"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "cancelPreviousPerformRequestsWithTarget:selector:object:"
      return_type: "Void"
      parameter {
        name: "aTarget"
        type: "ObjCId"
      }
      parameter {
        name: "aSelector"
        type: "ObjCSel"
      }
      parameter {
        name: "anArgument"
        type: "ObjCId"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "cancelPreviousPerformRequestsWithTarget:"
      return_type: "Void"
      parameter {
        name: "aTarget"
        type: "ObjCId"
      }
    }
    class_method: true
  }
}
category {
  class_name: "NSRunLoop"
  category_name: "NSOrderedPerform"
  method {
    function {
      name: "performSelector:target:argument:order:modes:"
      return_type: "Void"
      parameter {
        name: "aSelector"
        type: "ObjCSel"
      }
      parameter {
        name: "target"
        type: "ObjCId"
      }
      parameter {
        name: "arg"
        type: "ObjCId"
      }
      parameter {
        name: "order"
        type: "ULong"
      }
      parameter {
        name: "modes"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "cancelPerformSelector:target:argument:"
      return_type: "Void"
      parameter {
        name: "aSelector"
        type: "ObjCSel"
      }
      parameter {
        name: "target"
        type: "ObjCId"
      }
      parameter {
        name: "arg"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "cancelPerformSelectorsWithTarget:"
      return_type: "Void"
      parameter {
        name: "target"
        type: "ObjCId"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSSet"
  category_name: "NSSortDescriptorSorting"
  method {
    function {
      name: "sortedArrayUsingDescriptors:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "sortDescriptors"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSArray"
  category_name: "NSSortDescriptorSorting"
  method {
    function {
      name: "sortedArrayUsingDescriptors:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "sortDescriptors"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSMutableArray"
  category_name: "NSSortDescriptorSorting"
  method {
    function {
      name: "sortUsingDescriptors:"
      return_type: "Void"
      parameter {
        name: "sortDescriptors"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSStream"
  category_name: "NSSocketStreamCreationExtensions"
  method {
    function {
      name: "getStreamsToHost:port:inputStream:outputStream:"
      return_type: "Void"
      parameter {
        name: "host"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "port"
        type: "Long"
      }
      parameter {
        name: "inputStream"
        type: "Pointer"
      }
      parameter {
        name: "outputStream"
        type: "Pointer"
      }
    }
    class_method: true
  }
}
category {
  class_name: "NSInputStream"
  category_name: "NSInputStreamExtensions"
  method {
    function {
      name: "initWithData:"
      return_type: "ObjCId"
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithFileAtPath:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithURL:"
      return_type: "ObjCId"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "inputStreamWithData:"
      return_type: "ObjCId"
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "inputStreamWithFileAtPath:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "inputStreamWithURL:"
      return_type: "ObjCId"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
}
category {
  class_name: "NSOutputStream"
  category_name: "NSOutputStreamExtensions"
  method {
    function {
      name: "initToMemory"
      return_type: "ObjCId"
    }
    class_method: false
  }
  method {
    function {
      name: "initToBuffer:capacity:"
      return_type: "ObjCId"
      parameter {
        name: "buffer"
        type: "Pointer"
      }
      parameter {
        name: "capacity"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initToFileAtPath:append:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "shouldAppend"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithURL:append:"
      return_type: "ObjCId"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "shouldAppend"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "outputStreamToMemory"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "outputStreamToBuffer:capacity:"
      return_type: "ObjCId"
      parameter {
        name: "buffer"
        type: "Pointer"
      }
      parameter {
        name: "capacity"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "outputStreamToFileAtPath:append:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "shouldAppend"
        type: "SChar"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "outputStreamWithURL:append:"
      return_type: "ObjCId"
      parameter {
        name: "url"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "shouldAppend"
        type: "SChar"
      }
    }
    class_method: true
  }
}
category {
  class_name: "NSObject"
  category_name: "NSThreadPerformAdditions"
  method {
    function {
      name: "performSelectorOnMainThread:withObject:waitUntilDone:modes:"
      return_type: "Void"
      parameter {
        name: "aSelector"
        type: "ObjCSel"
      }
      parameter {
        name: "arg"
        type: "ObjCId"
      }
      parameter {
        name: "wait"
        type: "SChar"
      }
      parameter {
        name: "array"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "performSelectorOnMainThread:withObject:waitUntilDone:"
      return_type: "Void"
      parameter {
        name: "aSelector"
        type: "ObjCSel"
      }
      parameter {
        name: "arg"
        type: "ObjCId"
      }
      parameter {
        name: "wait"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "performSelector:onThread:withObject:waitUntilDone:modes:"
      return_type: "Void"
      parameter {
        name: "aSelector"
        type: "ObjCSel"
      }
      parameter {
        name: "thr"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "arg"
        type: "ObjCId"
      }
      parameter {
        name: "wait"
        type: "SChar"
      }
      parameter {
        name: "array"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "performSelector:onThread:withObject:waitUntilDone:"
      return_type: "Void"
      parameter {
        name: "aSelector"
        type: "ObjCSel"
      }
      parameter {
        name: "thr"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "arg"
        type: "ObjCId"
      }
      parameter {
        name: "wait"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "performSelectorInBackground:withObject:"
      return_type: "Void"
      parameter {
        name: "aSelector"
        type: "ObjCSel"
      }
      parameter {
        name: "arg"
        type: "ObjCId"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSTimeZone"
  category_name: "NSExtendedTimeZone"
  method {
    function {
      name: "systemTimeZone"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "resetSystemTimeZone"
      return_type: "Void"
    }
    class_method: true
  }
  method {
    function {
      name: "defaultTimeZone"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "setDefaultTimeZone:"
      return_type: "Void"
      parameter {
        name: "aTimeZone"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "localTimeZone"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "knownTimeZoneNames"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "abbreviationDictionary"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "setAbbreviationDictionary:"
      return_type: "Void"
      parameter {
        name: "dict"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "timeZoneDataVersion"
      return_type: "ObjCObjectPointer"
    }
    class_method: true
  }
  method {
    function {
      name: "secondsFromGMT"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "abbreviation"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "isDaylightSavingTime"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "daylightSavingTimeOffset"
      return_type: "Double"
    }
    class_method: false
  }
  method {
    function {
      name: "nextDaylightSavingTimeTransition"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "description"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "isEqualToTimeZone:"
      return_type: "SChar"
      parameter {
        name: "aTimeZone"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "localizedName:locale:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "style"
        type: "Long"
      }
      parameter {
        name: "locale"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSTimeZone"
  category_name: "NSTimeZoneCreation"
  method {
    function {
      name: "timeZoneWithName:"
      return_type: "ObjCId"
      parameter {
        name: "tzName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "timeZoneWithName:data:"
      return_type: "ObjCId"
      parameter {
        name: "tzName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "aData"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithName:"
      return_type: "ObjCId"
      parameter {
        name: "tzName"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithName:data:"
      return_type: "ObjCId"
      parameter {
        name: "tzName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "aData"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "timeZoneForSecondsFromGMT:"
      return_type: "ObjCId"
      parameter {
        name: "seconds"
        type: "Long"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "timeZoneWithAbbreviation:"
      return_type: "ObjCId"
      parameter {
        name: "abbreviation"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
}
category {
  class_name: "NSString"
  category_name: "NSURLUtilities"
  method {
    function {
      name: "stringByAddingPercentEscapesUsingEncoding:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "enc"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "stringByReplacingPercentEscapesUsingEncoding:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "enc"
        type: "ULong"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSObject"
  category_name: "NSURLClient"
  method {
    function {
      name: "URL:resourceDataDidBecomeAvailable:"
      return_type: "Void"
      parameter {
        name: "sender"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "newBytes"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "URLResourceDidFinishLoading:"
      return_type: "Void"
      parameter {
        name: "sender"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "URLResourceDidCancelLoading:"
      return_type: "Void"
      parameter {
        name: "sender"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "URL:resourceDidFailLoadingWithReason:"
      return_type: "Void"
      parameter {
        name: "sender"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "reason"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSURL"
  category_name: "NSURLLoading"
  method {
    function {
      name: "resourceDataUsingCache:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "shouldUseCache"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "loadResourceDataNotifyingClient:usingCache:"
      return_type: "Void"
      parameter {
        name: "client"
        type: "ObjCId"
      }
      parameter {
        name: "shouldUseCache"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "propertyForKey:"
      return_type: "ObjCId"
      parameter {
        name: "propertyKey"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setResourceData:"
      return_type: "SChar"
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setProperty:forKey:"
      return_type: "SChar"
      parameter {
        name: "property"
        type: "ObjCId"
      }
      parameter {
        name: "propertyKey"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "URLHandleUsingCache:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "shouldUseCache"
        type: "SChar"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSURL"
  category_name: "NSURLPathUtilities"
  method {
    function {
      name: "fileURLWithPathComponents:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "components"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "pathComponents"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "lastPathComponent"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "pathExtension"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "URLByAppendingPathComponent:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "pathComponent"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "URLByAppendingPathComponent:isDirectory:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "pathComponent"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "isDirectory"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "URLByDeletingLastPathComponent"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "URLByAppendingPathExtension:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "pathExtension"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "URLByDeletingPathExtension"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "URLByStandardizingPath"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "URLByResolvingSymlinksInPath"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
}
category {
  class_name: "NSURLConnection"
  category_name: "NSURLConnectionSynchronousLoading"
  method {
    function {
      name: "sendSynchronousRequest:returningResponse:error:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "request"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "response"
        type: "Pointer"
      }
      parameter {
        name: "error"
        type: "Pointer"
      }
    }
    class_method: true
  }
}
category {
  class_name: "NSURLConnection"
  category_name: "NSURLConnectionQueuedLoading"
  method {
    function {
      name: "sendAsynchronousRequest:queue:completionHandler:"
      return_type: "Void"
      parameter {
        name: "request"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "queue"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "handler"
        type: "BlockPointer"
      }
    }
    class_method: true
  }
}
category {
  class_name: "NSURLCredential"
  category_name: "NSInternetPassword"
  method {
    function {
      name: "initWithUser:password:persistence:"
      return_type: "ObjCId"
      parameter {
        name: "user"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "password"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "persistence"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "credentialWithUser:password:persistence:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "user"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "password"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "persistence"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "user"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "password"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "hasPassword"
      return_type: "SChar"
    }
    class_method: false
  }
}
category {
  class_name: "NSURLCredential"
  category_name: "NSClientCertificate"
  method {
    function {
      name: "initWithIdentity:certificates:persistence:"
      return_type: "ObjCId"
      parameter {
        name: "identity"
        type: "Pointer"
      }
      parameter {
        name: "certArray"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "persistence"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "credentialWithIdentity:certificates:persistence:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "identity"
        type: "Pointer"
      }
      parameter {
        name: "certArray"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "persistence"
        type: "ULong"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "identity"
      return_type: "Pointer"
    }
    class_method: false
  }
  method {
    function {
      name: "certificates"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
}
category {
  class_name: "NSURLCredential"
  category_name: "NSServerTrust"
  method {
    function {
      name: "initWithTrust:"
      return_type: "ObjCId"
      parameter {
        name: "trust"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "credentialForTrust:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "trust"
        type: "Pointer"
      }
    }
    class_method: true
  }
}
category {
  class_name: "NSURLProtectionSpace"
  category_name: "NSClientCertificateSpace"
  method {
    function {
      name: "distinguishedNames"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
}
category {
  class_name: "NSURLProtectionSpace"
  category_name: "NSServerTrustValidationSpace"
  method {
    function {
      name: "serverTrust"
      return_type: "Pointer"
    }
    class_method: false
  }
}
category {
  class_name: "NSURLRequest"
  category_name: "NSHTTPURLRequest"
  method {
    function {
      name: "HTTPMethod"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "allHTTPHeaderFields"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "valueForHTTPHeaderField:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "field"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "HTTPBody"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "HTTPBodyStream"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "HTTPShouldHandleCookies"
      return_type: "SChar"
    }
    class_method: false
  }
  method {
    function {
      name: "HTTPShouldUsePipelining"
      return_type: "SChar"
    }
    class_method: false
  }
}
category {
  class_name: "NSMutableURLRequest"
  category_name: "NSMutableHTTPURLRequest"
  method {
    function {
      name: "setHTTPMethod:"
      return_type: "Void"
      parameter {
        name: "method"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setAllHTTPHeaderFields:"
      return_type: "Void"
      parameter {
        name: "headerFields"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setValue:forHTTPHeaderField:"
      return_type: "Void"
      parameter {
        name: "value"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "field"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "addValue:forHTTPHeaderField:"
      return_type: "Void"
      parameter {
        name: "value"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "field"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setHTTPBody:"
      return_type: "Void"
      parameter {
        name: "data"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setHTTPBodyStream:"
      return_type: "Void"
      parameter {
        name: "inputStream"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setHTTPShouldHandleCookies:"
      return_type: "Void"
      parameter {
        name: "should"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setHTTPShouldUsePipelining:"
      return_type: "Void"
      parameter {
        name: "shouldUsePipelining"
        type: "SChar"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSXMLParser"
  category_name: "NSXMLParserLocatorAdditions"
  method {
    function {
      name: "publicID"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "systemID"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "lineNumber"
      return_type: "Long"
    }
    class_method: false
  }
  method {
    function {
      name: "columnNumber"
      return_type: "Long"
    }
    class_method: false
  }
}
category {
  class_name: "NSAttributedString"
  category_name: "NSExtendedAttributedString"
  method {
    function {
      name: "length"
      return_type: "ULong"
    }
    class_method: false
  }
  method {
    function {
      name: "attribute:atIndex:effectiveRange:"
      return_type: "ObjCId"
      parameter {
        name: "attrName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "location"
        type: "ULong"
      }
      parameter {
        name: "range"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "attributedSubstringFromRange:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "attributesAtIndex:longestEffectiveRange:inRange:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "location"
        type: "ULong"
      }
      parameter {
        name: "range"
        type: "Pointer"
      }
      parameter {
        name: "rangeLimit"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "attribute:atIndex:longestEffectiveRange:inRange:"
      return_type: "ObjCId"
      parameter {
        name: "attrName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "location"
        type: "ULong"
      }
      parameter {
        name: "range"
        type: "Pointer"
      }
      parameter {
        name: "rangeLimit"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isEqualToAttributedString:"
      return_type: "SChar"
      parameter {
        name: "other"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithString:"
      return_type: "ObjCId"
      parameter {
        name: "str"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithString:attributes:"
      return_type: "ObjCId"
      parameter {
        name: "str"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "attrs"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithAttributedString:"
      return_type: "ObjCId"
      parameter {
        name: "attrStr"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "enumerateAttributesInRange:options:usingBlock:"
      return_type: "Void"
      parameter {
        name: "enumerationRange"
        type: "Unexposed"
      }
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "block"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "enumerateAttribute:inRange:options:usingBlock:"
      return_type: "Void"
      parameter {
        name: "attrName"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "enumerationRange"
        type: "Unexposed"
      }
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "block"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSMutableAttributedString"
  category_name: "NSExtendedMutableAttributedString"
  method {
    function {
      name: "mutableString"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "addAttribute:value:range:"
      return_type: "Void"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "value"
        type: "ObjCId"
      }
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "addAttributes:range:"
      return_type: "Void"
      parameter {
        name: "attrs"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeAttribute:range:"
      return_type: "Void"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "replaceCharactersInRange:withAttributedString:"
      return_type: "Void"
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "attrString"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "insertAttributedString:atIndex:"
      return_type: "Void"
      parameter {
        name: "attrString"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "loc"
        type: "ULong"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "appendAttributedString:"
      return_type: "Void"
      parameter {
        name: "attrString"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "deleteCharactersInRange:"
      return_type: "Void"
      parameter {
        name: "range"
        type: "Unexposed"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "setAttributedString:"
      return_type: "Void"
      parameter {
        name: "attrString"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "beginEditing"
      return_type: "Void"
    }
    class_method: false
  }
  method {
    function {
      name: "endEditing"
      return_type: "Void"
    }
    class_method: false
  }
}
category {
  class_name: "NSArray"
  category_name: "NSPredicateSupport"
  method {
    function {
      name: "filteredArrayUsingPredicate:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "predicate"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSMutableArray"
  category_name: "NSPredicateSupport"
  method {
    function {
      name: "filterUsingPredicate:"
      return_type: "Void"
      parameter {
        name: "predicate"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSSet"
  category_name: "NSPredicateSupport"
  method {
    function {
      name: "filteredSetUsingPredicate:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "predicate"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSMutableSet"
  category_name: "NSPredicateSupport"
  method {
    function {
      name: "filterUsingPredicate:"
      return_type: "Void"
      parameter {
        name: "predicate"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSFileWrapper"
  category_name: "NSDeprecated"
  method {
    function {
      name: "initWithPath:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initSymbolicLinkWithDestination:"
      return_type: "ObjCId"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "needsToBeUpdatedFromPath:"
      return_type: "SChar"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "updateFromPath:"
      return_type: "SChar"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "writeToFile:atomically:updateFilenames:"
      return_type: "SChar"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "atomicFlag"
        type: "SChar"
      }
      parameter {
        name: "updateFilenamesFlag"
        type: "SChar"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "addFileWithPath:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "addSymbolicLinkWithDestination:preferredFilename:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "filename"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "symbolicLinkDestination"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
}
category {
  class_name: "NSNetService"
  category_name: "NSDeprecated"
  method {
    function {
      name: "protocolSpecificInformation"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setProtocolSpecificInformation:"
      return_type: "Void"
      parameter {
        name: "specificInformation"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSNetServiceBrowser"
  category_name: "NSDeprecated"
  method {
    function {
      name: "searchForAllDomains"
      return_type: "Void"
    }
    class_method: false
  }
}
category {
  class_name: "NSObject"
  category_name: "NSArchiverCallback"
  method {
    function {
      name: "classForArchiver"
      return_type: "ObjCClass"
    }
    class_method: false
  }
  method {
    function {
      name: "replacementObjectForArchiver:"
      return_type: "ObjCId"
      parameter {
        name: "archiver"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSDate"
  category_name: "NSCalendarDateExtras"
  method {
    function {
      name: "dateWithNaturalLanguageString:locale:"
      return_type: "ObjCId"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "locale"
        type: "ObjCId"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "dateWithNaturalLanguageString:"
      return_type: "ObjCId"
      parameter {
        name: "string"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "dateWithString:"
      return_type: "ObjCId"
      parameter {
        name: "aString"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "dateWithCalendarFormat:timeZone:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "format"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "aTimeZone"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "descriptionWithCalendarFormat:timeZone:locale:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "format"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "aTimeZone"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "locale"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "initWithString:"
      return_type: "ObjCId"
      parameter {
        name: "description"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSPointerArray"
  category_name: "NSArrayConveniences"
  method {
    function {
      name: "pointerArrayWithStrongObjects"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "pointerArrayWithWeakObjects"
      return_type: "ObjCId"
    }
    class_method: true
  }
  method {
    function {
      name: "allObjects"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
}
category {
  class_name: "NSObject"
  category_name: "NSDistributedObjects"
  method {
    function {
      name: "classForPortCoder"
      return_type: "ObjCClass"
    }
    class_method: false
  }
  method {
    function {
      name: "replacementObjectForPortCoder:"
      return_type: "ObjCId"
      parameter {
        name: "coder"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSProtocolChecker"
  category_name: "NSProtocolCheckerCreation"
  method {
    function {
      name: "protocolCheckerWithTarget:protocol:"
      return_type: "ObjCId"
      parameter {
        name: "anObject"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "aProtocol"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "initWithTarget:protocol:"
      return_type: "ObjCId"
      parameter {
        name: "anObject"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "aProtocol"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSTask"
  category_name: "NSTaskConveniences"
  method {
    function {
      name: "launchedTaskWithLaunchPath:arguments:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "path"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "arguments"
        type: "ObjCObjectPointer"
      }
    }
    class_method: true
  }
  method {
    function {
      name: "waitUntilExit"
      return_type: "Void"
    }
    class_method: false
  }
}
category {
  class_name: "NSXMLElement"
  category_name: "NSDeprecated"
  method {
    function {
      name: "setAttributesAsDictionary:"
      return_type: "Void"
      parameter {
        name: "attributes"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSObject"
  category_name: "NSClassDescriptionPrimitives"
  method {
    function {
      name: "classDescription"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "attributeKeys"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "toOneRelationshipKeys"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "toManyRelationshipKeys"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "inverseForRelationshipKey:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "relationshipKey"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSString"
  category_name: "NSLinguisticAnalysis"
  method {
    function {
      name: "linguisticTagsInRange:scheme:options:orthography:tokenRanges:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "tagScheme"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "orthography"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "tokenRanges"
        type: "Pointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "enumerateLinguisticTagsInRange:scheme:options:orthography:usingBlock:"
      return_type: "Void"
      parameter {
        name: "range"
        type: "Unexposed"
      }
      parameter {
        name: "tagScheme"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "opts"
        type: "ULong"
      }
      parameter {
        name: "orthography"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "block"
        type: "BlockPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSObject"
  category_name: "NSScripting"
  method {
    function {
      name: "scriptingValueForSpecifier:"
      return_type: "ObjCId"
      parameter {
        name: "objectSpecifier"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "scriptingProperties"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "setScriptingProperties:"
      return_type: "Void"
      parameter {
        name: "properties"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "copyScriptingValue:forKey:withProperties:"
      return_type: "ObjCId"
      parameter {
        name: "value"
        type: "ObjCId"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "properties"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "newScriptingObjectOfClass:forValueForKey:withContentsValue:properties:"
      return_type: "ObjCId"
      parameter {
        name: "objectClass"
        type: "ObjCClass"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "contentsValue"
        type: "ObjCId"
      }
      parameter {
        name: "properties"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSScriptClassDescription"
  category_name: "NSDeprecated"
  method {
    function {
      name: "isReadOnlyKey:"
      return_type: "SChar"
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSObject"
  category_name: "NSScriptClassDescription"
  method {
    function {
      name: "classCode"
      return_type: "UInt"
    }
    class_method: false
  }
  method {
    function {
      name: "className"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
}
category {
  class_name: "NSObject"
  category_name: "NSScriptKeyValueCoding"
  method {
    function {
      name: "valueAtIndex:inPropertyWithKey:"
      return_type: "ObjCId"
      parameter {
        name: "index"
        type: "ULong"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "valueWithName:inPropertyWithKey:"
      return_type: "ObjCId"
      parameter {
        name: "name"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "valueWithUniqueID:inPropertyWithKey:"
      return_type: "ObjCId"
      parameter {
        name: "uniqueID"
        type: "ObjCId"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "insertValue:atIndex:inPropertyWithKey:"
      return_type: "Void"
      parameter {
        name: "value"
        type: "ObjCId"
      }
      parameter {
        name: "index"
        type: "ULong"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "removeValueAtIndex:fromPropertyWithKey:"
      return_type: "Void"
      parameter {
        name: "index"
        type: "ULong"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "replaceValueAtIndex:inPropertyWithKey:withValue:"
      return_type: "Void"
      parameter {
        name: "index"
        type: "ULong"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
      parameter {
        name: "value"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "insertValue:inPropertyWithKey:"
      return_type: "Void"
      parameter {
        name: "value"
        type: "ObjCId"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "coerceValue:forKey:"
      return_type: "ObjCId"
      parameter {
        name: "value"
        type: "ObjCId"
      }
      parameter {
        name: "key"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSObject"
  category_name: "NSScriptObjectSpecifiers"
  method {
    function {
      name: "objectSpecifier"
      return_type: "ObjCObjectPointer"
    }
    class_method: false
  }
  method {
    function {
      name: "indicesOfObjectsByEvaluatingObjectSpecifier:"
      return_type: "ObjCObjectPointer"
      parameter {
        name: "specifier"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSObject"
  category_name: "NSComparisonMethods"
  method {
    function {
      name: "isEqualTo:"
      return_type: "SChar"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isLessThanOrEqualTo:"
      return_type: "SChar"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isLessThan:"
      return_type: "SChar"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isGreaterThanOrEqualTo:"
      return_type: "SChar"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isGreaterThan:"
      return_type: "SChar"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isNotEqualTo:"
      return_type: "SChar"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "doesContain:"
      return_type: "SChar"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isLike:"
      return_type: "SChar"
      parameter {
        name: "object"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "isCaseInsensitiveLike:"
      return_type: "SChar"
      parameter {
        name: "object"
        type: "ObjCObjectPointer"
      }
    }
    class_method: false
  }
}
category {
  class_name: "NSObject"
  category_name: "NSScriptingComparisonMethods"
  method {
    function {
      name: "scriptingIsEqualTo:"
      return_type: "SChar"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "scriptingIsLessThanOrEqualTo:"
      return_type: "SChar"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "scriptingIsLessThan:"
      return_type: "SChar"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "scriptingIsGreaterThanOrEqualTo:"
      return_type: "SChar"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "scriptingIsGreaterThan:"
      return_type: "SChar"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "scriptingBeginsWith:"
      return_type: "SChar"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "scriptingEndsWith:"
      return_type: "SChar"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
  method {
    function {
      name: "scriptingContains:"
      return_type: "SChar"
      parameter {
        name: "object"
        type: "ObjCId"
      }
    }
    class_method: false
  }
}
